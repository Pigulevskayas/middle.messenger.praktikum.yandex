{"mappings":"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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC7UA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACdzUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzCA;AACA;AACA;AACA;AACA;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnDA;AACA;AACA;AACA;AACA;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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WA;IACjByB,MAAMxB,WAAWA;QAEb9Z,MAAMirB;;MAERjrB,MAAMirB,kBAAkB1E,uBAAuBjL,QAAQvB;;;IAIzDuB,MAAM5gB;;IAEN4gB,MAAM7b,OAAO;WACNkrB,2BAA2BrP;;EAGpC4P,aAAa9S;IACXxX,KAAK;IACLlB,OAAO;cACE,IAAGhD,OAAO,KAAK+C,MAAM,MAAM/C,OAAO,KAAKuU,MAAM,OAAOvU,OAAO,KAAK7B;;;IAGzE+F,KAAKgJ,QAAQoa;IACbtkB,OAAO,eAAe6gB,cAAclB;;;;;aAK3BzV,QAAQ,MAAMuhB,kBAAkB9L;QACrCU,eAAe;QACfN,OAAO;;;;SAKNrH;GACP2O,iBAAiB/mB;AAEnBnJ,OAAO2I,UAAU4Y;;;ACpfjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC7CA;IAEIgT,SAASrsB,QAAQ;IACjBssB,WAAWtsB,QAAQ;IAEnBusB,iBAAiBvsB,QAAQ;IACzBwsB,cAAcxsB,QAAQ;IACtBysB,OAAOzsB,QAAQ;IAEf0sB,WAAWJ,SAASE,eAAe7qB;AAEvC0qB,OAAOK;EACNF,aAAaA;EACbD,gBAAgBA;EAChBE,MAAMA;;AAGP30B,OAAO2I,UAAUisB;;;ACjBjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChzHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACNA;IAEIF,cAAcxsB,QAAQ;IACtBqsB,SAASrsB,QAAQ;AAErBlI,OAAO2I,UAAU;MACZisB,WAAWF;EACfH,OAAO1qB;IAAUmY,IAAI4S;;IACpB5S,IAAI;aACInY,OAAOmY,OAAO4S;;;SAGhqBA;IAEIJ,WAAWtsB,QAAQ;IACnBqsB,SAASrsB,QAAQ;IAEjBusB,iBAAiBvsB,QAAQ;IACzBwsB,cAAcxsB,QAAQ;IACtBysB,OAAOzsB,QAAQ;IAEf0sB,WAAWJ,SAASE,eAAevgB;;AAIvCogB,OAAOK;EACNF,aAAaA;EACbD,gBAAgBA;EAChBE,MAAMA;;AAGP30B,OAAO2I,UAAUisB;;;ACnBjB;AACA;AACA;AACA;AACA;AACA;AACA;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACTA;IAEIL,SAASrsB,QAAQ;IACjBwsB,cAAcxsB,QAAQ;;AAI1BlI,OAAO2I,UAAU;MACZisB,WAAWF;EACfH,OAAOpgB;IAAU0gB,OAAOD;;IACvBC,OAAO;aACC1gB,OAAO0gB,UAAUD;;;SAGnBA;;;;ACdR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;CC5CC,UAAUtG,QAAQwG;SACVnsB,YAAY,mBAAmB3I,WAAW,cAAc80B,QAAQnsB,kBAChE4rB,WAAW,cAAcA,OAAOQ,MAAMR,QAAQ,YAAYO,YAChExG,SAASA,UAAU3iB,MAAMmpB,QAAQxG,OAAO0G;GACzC,MAAO,UAAUrsB;EAAW;;MAIxBssB;IACF,GAAG;IACH,GAAG;IACH,GAAG;IACHjO,QAAQ;IACRkO,YAAY;;;MAKVC,uBAAuB;MAEvBC;IACF,GAAGD;IACH,WAAWA,uBAAuB;IAClC,GAAGA,uBAAuB;;MAGxBE,4BAA4B;;;;;;;MAS5BC,+BAA+B;MAC/BC,0BAA0B;MAE1BC,8BAA8BtuB,OAAO,MAAMouB,+BAA+B;MAC1EG,yBAAyBvuB,OAAO,MAAMouB,+BAA+BC,0BAA0B;EAEnGD,+BAA+BC,0BAA0B;;;;;;;MASrDG,8BAA8B,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,IAAG,KAAI,IAAG,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,KAAI,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,KAAI,KAAI,IAAG,IAAG,IAAG,GAAE,KAAI,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,GAAE,KAAI,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,IAAG,KAAI,IAAG,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,IAAG,GAAE,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,IAAG,KAAI,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,KAAI,IAAG,KAAI,GAAE,IAAG,KAAI,KAAI,KAAI,IAAG,KAAI,MAAK,MAAK,MAAK,KAAI,MAAK,KAAI,GAAE,IAAG,KAAI,IAAG,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,KAAI,IAAG,KAAI,IAAG,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,GAAE,IAAG,MAAK,GAAE,MAAK,IAAG,GAAE,MAAK,KAAI,IAAG,GAAE,IAAG,GAAE,GAAE,KAAI,MAAK,KAAI,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,MAAK,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,KAAI,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,MAAK,IAAG,IAAG,GAAE,IAAG,GAAE,KAAI,IAAG,MAAK,KAAI,IAAG,IAAG,GAAE,GAAE,MAAK,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,MAAK,OAAM,IAAG,MAAK,IAAG,KAAI,GAAE,MAAK,IAAG,MAAK,MAAK,KAAI,MAAK;;MAGpyCC,yBAAyB,KAAI,GAAE,KAAI,GAAE,KAAI,GAAE,KAAI,GAAE,MAAK,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,KAAI,GAAE,KAAI,GAAE,GAAE,GAAE,KAAI,GAAE,KAAI,IAAG,KAAI,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,GAAE,IAAG,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,GAAE,KAAI,IAAG,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,KAAI,IAAG,IAAG,GAAE,GAAE,GAAE,IAAG,IAAG,IAAG,GAAE,KAAI,GAAE,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,IAAG,GAAE,IAAG,IAAG,GAAE,GAAE,IAAG,IAAG,GAAE,GAAE,KAAI,IAAG,KAAI,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,KAAI,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,IAAG,IAAG,IAAG,KAAI,GAAE,GAAE,GAAE,IAAG,GAAE,IAAG,IAAG,GAAE,IAAG,KAAI,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,KAAI,GAAE,OAAM,GAAE,KAAI,GAAE,IAAG,GAAE,IAAG,GAAE,MAAK,GAAE,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,OAAM,GAAE,MAAK,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,IAAG,GAAE,KAAI,GAAE,MAAK,IAAG,KAAI,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,GAAE,IAAG,GAAE,GAAE,IAAG,MAAK,GAAE,GAAE,IAAG,GAAE,GAAE,GAAE,GAAE,GAAE,GAAE,KAAI,GAAE,IAAG,GAAE,KAAI,IAAG,MAAK,GAAE,KAAI,GAAE,GAAE,GAAE,MAAK,GAAE,QAAO;;;;EAKjqB,uBAAuBvb,MAAM5I;QACvBD,MAAM;aACDlO,IAAI,GAAGA,IAAImO,IAAIlO,QAAQD,KAAK;MACnCkO,OAAOC,IAAInO;UACPkO,MAAM6I;eAAe;;MACzB7I,OAAOC,IAAInO,IAAI;UACXkO,OAAO6I;eAAe;;;;;EAM9B,2BAA2BA,MAAMwb;QAC3Bxb,OAAO;aAAaA,SAAS;;QAC7BA,OAAO;aAAa;;QACpBA,OAAO;aAAaA,SAAS;;QAC7BA,OAAO;aAAc;;QACrBA,QAAQ;aAAiBA,QAAQ,QAAQob,wBAAwBzzB,KAAKoK,OAAO2J,aAAasE;;QAC1Fwb,WAAW;aAAgB;;WACxBC,cAAczb,MAAMsb;;;EAK7B,0BAA0Btb,MAAMwb;QAC1Bxb,OAAO;aAAaA,SAAS;;QAC7BA,OAAO;aAAa;;QACpBA,OAAO;aAAa;;QACpBA,OAAO;aAAa;;QACpBA,OAAO;aAAaA,SAAS;;QAC7BA,OAAO;aAAc;;QACrBA,QAAQ;aAAiBA,QAAQ,QAAQqb,mBAAmB1zB,KAAKoK,OAAO2J,aAAasE;;QACrFwb,WAAW;aAAgB;;WACxBC,cAAczb,MAAMsb,+BAA+BG,cAAczb,MAAMub;;;;;;;;;;;;;;;;;;;;;MA0B5EG,YAAY,mBAAmBC,OAAOC;QACnCA,cAAc,GAAIA;IAEvB,KAAKD,QAAQA;IACb,KAAKE,UAAUD,KAAKC;IACpB,KAAKC,eAAeF,KAAKE;IACzB,KAAKC,eAAeH,KAAKG;IACzB,KAAKC,WAAWJ,KAAKI;IACrB,KAAKC,aAAaL,KAAKK;IACvB,KAAKC,WAAWN,KAAKM;IACrB,KAAKC,YAAYP,KAAKO;IACtB,KAAKC,QAAQR,KAAKQ,SAAS;IAC3B,KAAKC,gBAAgB;;EAGvB,eAAe7tB,MAAM8tB;eACRZ,UAAUltB;MAAOstB,YAAY;MAAMM,OAAOE;;;MAEnDR;IAAcA,YAAY;KAAOC;IAAcA,YAAY;;;MAI3DQ;;EAGJ,YAAY/tB,MAAME;QACXA,iBAAiB,GAAIA;IAE1BA,QAAQmtB,UAAUrtB;WACX+tB,WAAW/tB,YAAYktB,UAAUltB,MAAME;;MAG5C4Y;IACFkV,SAASd,UAAU,OAAOK;IAC1BU,YAAYf,UAAU,UAAUK;IAChCzsB,YAAYosB,UAAU,UAAUK;IAChCvtB,UAAUktB,UAAU,QAAQK;IAC5BW,SAAShB,UAAU;;IAGnBiB,cAAcjB,UAAU;MAAMI,YAAY;MAAMC,YAAY;;IAC5Da,cAAclB,UAAU;IACxBmB,YAAYnB,UAAU;MAAMI,YAAY;MAAMC,YAAY;;IAC1De,YAAYpB,UAAU;IACtBqB,YAAYrB,UAAU;MAAMI,YAAY;MAAMC,YAAY;;IAC1DiB,YAAYtB,UAAU;IACtBuB,WAAWvB,UAAU,KAAKI;IAC1BoB,UAAUxB,UAAU,KAAKI;IACzBqB,WAAWzB,UAAU,KAAKI;IAC1BsB,SAAS1B,UAAU;IACnB2B,cAAc3B,UAAU,KAAKI;IAC7BwB,iBAAiB5B,UAAU;IAC3B6B,WAAW7B,UAAU,MAAMI;IAC3B0B,cAAc9B,UAAU;IACxB+B,qBAAqB/B,UAAU;IAC/BgC,cAAchC,UAAU,OAAOI;IAC/B6B,eAAejC,UAAU,KAAKK;IAC9B6B,kBAAkBlC,UAAU;MAAOI,YAAY;MAAMC,YAAY;;;;;;;;;;;;;;;IAgBjE8B,QAAQnC,UAAU;MAAMI,YAAY;MAAMG,UAAU;;IACpDvU,YAAYgU,UAAU;MAAOI,YAAY;MAAMG,UAAU;;IACzD6B,YAAYpC,UAAU;MAAUQ,QAAQ;MAAMC,SAAS;MAAMJ,YAAY;;IACzEG,YAAYR,UAAU;MAAQI,YAAY;MAAMI,QAAQ;MAAMH,YAAY;;IAC1EgC,WAAW3B,MAAM,MAAM;IACvB4B,YAAY5B,MAAM,MAAM;IACxB6B,WAAW7B,MAAM,KAAK;IACtB8B,YAAY9B,MAAM,KAAK;IACvB+B,YAAY/B,MAAM,KAAK;IACvBgC,UAAUhC,MAAM,iBAAiB;IACjCiC,YAAYjC,MAAM,aAAa;IAC/BkC,UAAUlC,MAAM,aAAa;IAC7BmC,aAAa7C,UAAU;MAAQI,YAAY;MAAMM,OAAO;MAAGF,QAAQ;MAAMH,YAAY;;IACrFyC,QAAQpC,MAAM,KAAK;IACnBqC,MAAMrC,MAAM,KAAK;IACjBsC,OAAOtC,MAAM,KAAK;IAClBuC,cAAcjD,UAAU;MAAOI,YAAY;;IAC3C8C,UAAUxC,MAAM,MAAM;;IAGtByC,QAAQC,GAAG;IACXC,OAAOD,GAAG,QAAQhD;IAClBkD,QAAQF,GAAG;IACXG,WAAWH,GAAG;IACdI,WAAWJ,GAAG;IACdK,UAAUL,GAAG,WAAWhD;IACxBsD,KAAKN,GAAG;MAAO9C,QAAQ;MAAMF,YAAY;;IACzCuD,OAAOP,GAAG,QAAQhD;IAClBwD,UAAUR,GAAG;IACbS,MAAMT,GAAG;MAAQ9C,QAAQ;;IACzBwD,WAAWV,GAAG,YAAY/C;IAC1B0D,KAAKX,GAAG;IACRY,SAASZ,GAAG,UAAUhD;IACtB6D,SAASb,GAAG;IACZc,QAAQd,GAAG,SAAShD;IACpB+D,MAAMf,GAAG;IACTgB,MAAMhB,GAAG;IACTiB,QAAQjB,GAAG;IACXkB,QAAQlB,GAAG;MAAU9C,QAAQ;;IAC7BiE,OAAOnB,GAAG;IACVoB,MAAMpB,GAAG;MAAQhD,YAAY;MAAMC,YAAY;;IAC/C1R,OAAOyU,GAAG,QAAQ/C;IAClBoE,QAAQrB,GAAG,SAAS/C;IACpBqE,QAAQtB,GAAG,SAAS/C;IACpBsE,UAAUvB,GAAG,WAAWhD;IACxBwE,SAASxB,GAAG;IACZyB,SAASzB,GAAG,UAAU/C;IACtByE,OAAO1B,GAAG,QAAQ/C;IAClB0E,OAAO3B,GAAG,QAAQ/C;IAClB2E,QAAQ5B,GAAG,SAAS/C;IACpB4E,KAAK7B,GAAG;MAAOhD,YAAY;MAAMM,OAAO;;IACxCwE,aAAa9B,GAAG;MAAehD,YAAY;MAAMM,OAAO;;IACxD5V,SAASsY,GAAG;MAAWhD,YAAY;MAAMI,QAAQ;MAAMH,YAAY;;IACnE8E,OAAO/B,GAAG;MAAShD,YAAY;MAAMI,QAAQ;MAAMH,YAAY;;IAC/D+E,SAAShC,GAAG;MAAWhD,YAAY;MAAMI,QAAQ;MAAMH,YAAY;;;;;MAMjEgF,YAAY;MACZC,iBAAiBl0B,OAAOi0B,UAAU1wB,QAAQ;EAE9C,mBAAmB2P,MAAMihB;WAChBjhB,SAAS,MAAMA,SAAS,OAAQihB,mBAAmBjhB,SAAS,UAAUA,SAAS;;MAGpFkhB,qBAAqB;MAErBC,iBAAiB;MAEjBC,MAAM3xB,OAAOmE;MACb6c,iBAAiB2Q,IAAI3Q;MACrB7f,WAAWwwB,IAAIxwB;;EAInB,aAAa0F,KAAK+qB;WACT5Q,eAAetqB,KAAKmQ,KAAK+qB;;MAG9B71B,UAAUD,MAAMC,YAAY,UAAU8K;WACxC1F,SAASzK,KAAKmQ,SAAS;;EAGzB,qBAAqBgrB;eACRx0B,OAAO,SAASw0B,MAAM3vB,QAAQ,MAAM,OAAO;;;;MAMpD4vB,WAAW,kBAAkB3Q,MAAM4Q;IACrC,KAAK5Q,OAAOA;IACZ,KAAK6Q,SAASD;;EAGhBD,SAAS3tB,UAAUgD,SAAS,gBAAiBsB;eAChCqpB,SAAS,KAAK3Q,MAAM,KAAK6Q,SAASvpB;;MAG3CwpB,iBAAiB,wBAAwBhL,GAAGhf,OAAOC;IACrD,KAAKD,QAAQA;IACb,KAAKC,MAAMA;QACP+e,EAAEiL,eAAe;MAAQ,KAAKtxB,SAASqmB,EAAEiL;;;;;;;;EAS/C,qBAAqBC,OAAOhrB;aACjBga,OAAO,GAAGG,MAAM;MACvBiQ,WAAWa,YAAY9Q;UACnBL,QAAQsQ,WAAWc,KAAKF;UACxBlR,SAASA,MAAMqR,QAAQnrB;UACvBga;QACFG,MAAML,MAAMqR,QAAQrR,MAAM,GAAGxnB;;mBAElBq4B,SAAS3Q,MAAMha,SAASma;;;;;;MAQrCiR;;;;;;IAMFC,aAAa;;;;IAIbC,YAAY;;;;;;IAMZC,qBAAqB;;;IAGrBC,iBAAiB;;;;;IAKjBC,eAAe;;;IAGfC,4BAA4B;;;IAG5BC,6BAA6B;;;IAG7BC,2BAA2B;;;IAG3BC,eAAe;;;;;IAKfC,WAAW;;;;;;IAMXC,SAAS;;;;;;;;;;;IAWTC,WAAW;;;;;;;;;IASXC,QAAQ;;;;;;IAMRC,SAAS;;;IAGTnB,YAAY;;;IAGZoB,kBAAkB;;;IAGlBC,gBAAgB;;;EAKlB,oBAAoB7U;QACdzf;aAEKu0B,OAAOjB;MACZtzB,QAAQu0B,OAAO9U,QAAQ6H,IAAI7H,MAAM8U,OAAO9U,KAAK8U,OAAOjB,eAAeiB;;QAEnEv0B,QAAQuzB,eAAe;MACvBvzB,QAAQuzB,eAAe;;QAEvBvzB,QAAQ2zB,iBAAiB;MACzB3zB,QAAQ2zB,gBAAgB3zB,QAAQuzB,cAAc;;QAE9Cz2B,QAAQkD,QAAQi0B;UACd7yB,SAASpB,QAAQi0B;MACrBj0B,QAAQi0B,UAAU,UAAU5yB;eAAgBD,OAAOnJ,KAAKoJ;;;QAEtDvE,QAAQkD,QAAQk0B;MAChBl0B,QAAQk0B,YAAYM,YAAYx0B,SAASA,QAAQk0B;;WAE9Cl0B;;EAGT,qBAAqBA,SAASwH;WACrB,UAASitB,OAAOC,MAAM1rB,OAAOC,KAAK0rB,UAAUC;UAC7CC;QACFt7B,MAAMk7B,QAAQ,UAAU;QACxB10B,OAAO20B;QACP1rB,OAAOA;QACPC,KAAKA;;UAEHjJ,QAAQg0B;QACRa,QAAQrzB,UAAUwxB,eAAe,MAAM2B,UAAUC;;UACjD50B,QAAQm0B;QACRU,QAAQC,SAAS9rB,OAAOC;;MAC5BzB,MAAMvP,KAAK48B;;;;MAMXE,YAAY,GACZC,iBAAiB,GACjBC,YAAYF,YAAYC,gBACxBE,cAAc,GACdC,kBAAkB,GAClBC,cAAc,IACdC,qBAAqB,IACrBC,cAAc,IACdC,qBAAqB;EAEzB,uBAAuBC,OAAOC;WACrBT,kBAAkBQ,QAAQN,cAAc,MAAMO,YAAYN,kBAAkB;;;MAKjFO,YAAY;EACZC,WAAW;EACXC,eAAe;EACfC,gBAAgB;EAChBC,oBAAoB;EACpBC,eAAe;;MAEfC,SAAS,gBAAgBh2B,SAASkzB,OAAO+C;IAC3C,KAAKj2B,UAAUA,UAAUk2B,WAAWl2B;IACpC,KAAKizB,aAAajzB,QAAQizB;IAC1B,KAAK3G,WAAW6J,YAAY7J,SAAStsB,QAAQuzB,eAAe,IAAI,IAAIvzB,QAAQwzB,eAAe,WAAW,YAAY;QAC9G4C,WAAW;QACXp2B,QAAQ2zB,kBAAkB;eACnB50B,IAAIiB,QAAQuzB,eAAcx0B;YAC3Bq3B,WAAWjK,cAAcptB;;;;UAC7BiB,QAAQwzB,eAAe;QAAY4C,YAAY;;;IAErD,KAAKjK,gBAAgBgK,YAAYC;QAC7BC,kBAAkBD,WAAWA,WAAW,MAAM,MAAMjK,cAAcjO;IACtE,KAAKoY,sBAAsBH,YAAYE;IACvC,KAAKE,0BAA0BJ,YAAYE,iBAAiB,MAAMlK,cAAcC;IAChF,KAAK8G,QAAQ7vB,OAAO6vB;;;;IAKpB,KAAKsD,cAAc;;;QAKfP;MACF,KAAKxtB,MAAMwtB;MACX,KAAKQ,YAAY,KAAKvD,MAAMvoB,YAAY,MAAMsrB,WAAW,KAAK;MAC9D,KAAKS,UAAU,KAAKxD,MAAM3rB,MAAM,GAAG,KAAKkvB,WAAWh5B,MAAM40B,WAAW73B;;MAEpE,KAAKiO,MAAM,KAAKguB,YAAY;MAC5B,KAAKC,UAAU;;;;IAKjB,KAAKn9B,OAAOqf,MAAMoV;;IAElB,KAAKjuB,QAAQ;;IAEb,KAAKiJ,QAAQ,KAAKC,MAAM,KAAKR;;;IAG7B,KAAKksB,WAAW,KAAKC,SAAS,KAAK+B;;IAGnC,KAAKC,gBAAgB,KAAKC,kBAAkB;IAC5C,KAAKC,eAAe,KAAKC,aAAa,KAAKtuB;;;;IAK3C,KAAKuuB,UAAU,KAAKC;IACpB,KAAKC,cAAc;;IAGnB,KAAKC,WAAWn3B,QAAQwzB,eAAe;IACvC,KAAKtV,SAAS,KAAKiZ,YAAY,KAAKC,gBAAgB,KAAK3uB;;IAGzD,KAAK4uB,oBAAoB;;IAGzB,KAAKC,WAAW,KAAKC,WAAW,KAAKC,gBAAgB;;IAErD,KAAKC;;IAEL,KAAKC;;QAGD,KAAKjvB,QAAQ,KAAKzI,QAAQ+zB,iBAAiB,KAAKb,MAAM3rB,MAAM,GAAG,OAAO;MACtE,KAAKowB,gBAAgB;;;IAGzB,KAAKC;IACL,KAAKC,WAAW9C;;IAGhB,KAAK+C,cAAc;;MAGjBC;IAAuBC;MAAclU,cAAc;;IAAOmU;MAAenU,cAAc;;IAAOoU;MAAWpU,cAAc;;IAAOqU;MAAcrU,cAAc;;IAAOsU;MAAoBtU,cAAc;;IAAOuU;MAAuBvU,cAAc;;;EAEnPkS,OAAO9wB,UAAU5L,QAAQ;QACnBg/B,OAAO,KAAKt4B,QAAQo0B,WAAW,KAAKmE;IACxC,KAAKC;WACE,KAAKC,cAAcH;;EAG5BP,mBAAmBC,WAAW3yB,MAAM;YAAsB,KAAKqzB,kBAAkBC,QAAQ3D,kBAAkB;;EAC3G+C,mBAAmBE,YAAY5yB,MAAM;YAAsB,KAAKqzB,kBAAkBC,QAAQxD,mBAAmB;;EAC7G4C,mBAAmBG,QAAQ7yB,MAAM;YAAsB,KAAKqzB,kBAAkBC,QAAQzD,eAAe;;EACrG6C,mBAAmBI,WAAW9yB,MAAM;YAAsB,KAAKuzB,mBAAmBD,QAAQrD,eAAe;;EACzGyC,mBAAmBK,iBAAiB/yB,MAAM;YAAsB,KAAKuzB,mBAAmBD,QAAQpD,sBAAsB;;EACtHwC,mBAAmBM,oBAAoBhzB,MAAM;WAAqB,KAAKwzB,2BAA2B,KAAKC;;;EAGvG9C,OAAO9wB,UAAU6zB,qBAAqB;YAAyC,KAAKH,mBAAmBD,QAAQ3D,kBAAkB;;EAEjIgB,OAAOgD,SAAS;QACR/4B,cAAc4H,MAAMe,UAAUpO;WAC1BqN,OAAQ5H,QAAS4H,OAAQe,UAAWf;QAE1CoxB,MAAM;aACD1+B,IAAI,GAAGA,IAAI0F,QAAQzF,QAAQD;MAAO0+B,MAAMh5B,QAAQ1F,GAAG0+B;;WACrDA;;EAGTjD,OAAO18B,QAAQ,eAAgB45B,OAAOlzB;eACzB,KAAKA,SAASkzB,OAAO55B;;EAGlC08B,OAAOzc,oBAAoB,2BAA4B2Z,OAAOzqB,KAAKzI;QAC7Dk5B,aAAa,KAAKl5B,SAASkzB,OAAOzqB;IACtCywB,OAAOV;WACAU,OAAOC;;EAGhBnD,OAAOoD,YAAY,mBAAoBlG,OAAOlzB;eACjC,KAAKA,SAASkzB;;EAG3BnyB,OAAOqjB,iBAAkB4R,OAAO9wB,WAAW6yB;MAEvCsB,KAAKrD,OAAO9wB;;MAIZo0B,UAAU;EACdD,GAAGjC,kBAAkB,UAASpuB;;;MAG1BypB,eAAeU,YAAYnqB;MAC3BA,SAASypB,eAAeW,KAAK,KAAKF,OAAO,GAAG14B;UACxCwnB,QAAQsX,QAAQlG,KAAK,KAAKF,MAAM3rB,MAAMyB;WACrCgZ;eAAgB;;WAChBA,MAAM,MAAMA,MAAM,QAAQ;QAC7ByQ,eAAeU,YAAYnqB,QAAQgZ,MAAM,GAAGxnB;YACxC++B,aAAa9G,eAAeW,KAAK,KAAKF,QAAQjqB,MAAMswB,WAAWlG,QAAQkG,WAAW,GAAG/+B;YACrFg/B,OAAO,KAAKtG,MAAMuG,OAAOxwB;eACtBuwB,SAAS,OAAOA,SAAS,OAC7BnH,UAAUp5B,KAAKsgC,WAAW,UACxB,uBAAsBtgC,KAAKugC,SAASA,SAAS,OAAO,KAAKtG,MAAMuG,OAAOxwB,MAAM,OAAO;;MAE1FD,SAASgZ,MAAM,GAAGxnB;;MAGlBi4B,eAAeU,YAAYnqB;MAC3BA,SAASypB,eAAeW,KAAK,KAAKF,OAAO,GAAG14B;UACxC,KAAK04B,MAAMlqB,WAAW;QACtBA;;;;;;EAORqwB,GAAGK,MAAM,UAASngC;QACZ,KAAKA,SAASA;MAChB,KAAKigC;aACE;;aAEA;;;;EAMXH,GAAGM,eAAe,UAAS75B;WAClB,KAAKvG,SAASqf,MAAM9Y,QAAQ,KAAKC,UAAUD,SAAS,KAAK02B;;;EAKlE6C,GAAGO,gBAAgB,UAAS95B;SACrB,KAAK65B,aAAa75B;aAAgB;;IACvC,KAAK05B;WACE;;;EAKTH,GAAGQ,mBAAmB,UAAS/5B;SACxB,KAAK85B,cAAc95B;MAAS,KAAKg6B;;;;EAKxCT,GAAGU,qBAAqB;WACf,KAAKxgC,SAASqf,MAAMoV,OACzB,KAAKz0B,SAASqf,MAAMwV,UACpBiE,UAAUp5B,KAAK,KAAKi6B,MAAM3rB,MAAM,KAAKwvB,YAAY,KAAK/tB;;EAG1DqwB,GAAGW,kBAAkB;QACf,KAAKD;UACH,KAAK/5B,QAAQyzB;QACb,KAAKzzB,QAAQyzB,oBAAoB,KAAKsD,YAAY,KAAKH;;aACpD;;;;;EAOXyC,GAAGY,YAAY;SACR,KAAKP,IAAI9gB,MAAM4V,UAAU,KAAKwL;MAAqB,KAAKF;;;EAG/DT,GAAGa,qBAAqB,UAASC,SAASC;QACpC,KAAK7gC,SAAS4gC;UACZ,KAAKn6B,QAAQ0zB;QACb,KAAK1zB,QAAQ0zB,gBAAgB,KAAKoD,cAAc,KAAKD;;WACpDuD;QACD,KAAKZ;;aACF;;;;;EAOXH,GAAGgB,SAAS,UAAS9gC;IACnB,KAAKmgC,IAAIngC,SAAS,KAAKugC;;;EAKzBT,GAAGS,aAAa,UAASrxB;IACvB,KAAK6xB,MAAM7xB,OAAO,OAAOA,MAAM,KAAKO,OAAO;;EAG7C;IACE,KAAKuxB,kBACL,KAAKC,gBACL,KAAKC,sBACL,KAAKC,oBACL,KAAKC,eACF;;EAGLtB,GAAGuB,qBAAqB,UAASC,wBAAwBtN;SAClDsN;;;QACDA,uBAAuBL,iBAAiB;MACxC,KAAKM,iBAAiBD,uBAAuBL,eAAe;;QAC5DO,SAASxN,WAAWsN,uBAAuBJ,sBAAsBI,uBAAuBH;QACxFK,UAAU;MAAK,KAAKD,iBAAiBC,QAAQ;;;EAGnD1B,GAAG2B,wBAAwB,UAASH,wBAAwBI;SACrDJ;aAAiC;;QAClCN,kBAAkBM,uBAAuBN;QACzCI,cAAcE,uBAAuBF;SACpCM;aAAmBV,mBAAmB,KAAKI,eAAe;;QAC3DJ,mBAAmB;MACnB,KAAKD,MAAMC,iBAAiB;;QAC5BI,eAAe;MACf,KAAKG,iBAAiBH,aAAa;;;EAGzCtB,GAAG6B,iCAAiC;QAC9B,KAAK5D,cAAc,KAAKC,YAAY,KAAKD,WAAW,KAAKC;MACzD,KAAK+C,MAAM,KAAKhD,UAAU;;QAC1B,KAAKC;MACL,KAAK+C,MAAM,KAAK/C,UAAU;;;EAGhC8B,GAAG8B,uBAAuB,UAASC;QAC7BA,KAAK7hC,SAAS;aACP,KAAK4hC,qBAAqBC,KAAKC;;WACnCD,KAAK7hC,SAAS,gBAAgB6hC,KAAK7hC,SAAS;;MAGjD+hC,OAAOtF,OAAO9wB;;;;;;EASlBo2B,KAAK7C,gBAAgB,UAASH;QACxBz4B;SACCy4B,KAAK78B;MAAQ68B,KAAK78B;;WAChB,KAAKlC,SAASqf,MAAMoV;UACrBuN,OAAO,KAAKC,eAAe,MAAM,MAAM37B;MAC3Cy4B,KAAK78B,KAAKxD,KAAKsjC;;QAEb,KAAKpE;eACI58B,IAAI,GAAGiO,OAAOzH,OAAOC,KAAK,KAAK02B,mBAAmBn9B,IAAIiO,KAAKhO,QAAQD,KAAK;YAE3EuF,OAAO0I,KAAKjO;QAEhB,KAAKugC,iBAAiB,KAAKpD,iBAAiB53B,MAAMkJ,OAAQ,aAAalJ,OAAO;;;IAEpF,KAAK27B,uBAAuBnD,KAAK78B;IACjC,KAAK+9B;IACLlB,KAAK9E,aAAa,KAAKxzB,QAAQwzB;WACxB,KAAKkI,WAAWpD,MAAM;;MAG3BqD;IAAaC,MAAM;KAASC;IAAeD,MAAM;;EAErDN,KAAKQ,QAAQ,UAAS9E;QAChB,KAAKh3B,QAAQuzB,cAAc,MAAM,KAAKoG,aAAa;aAAiB;;IACxElH,eAAeU,YAAY,KAAK1qB;QAC5BszB,OAAOtJ,eAAeW,KAAK,KAAKF;QAChCsG,OAAO,KAAK/wB,MAAMszB,KAAK,GAAGvhC,QAAQwhC,SAAS,KAAK9I,MAAM3hB,WAAWioB;;;;;QAKjEwC,WAAW;aAAa;;;QACxBhF;aAAkB;;QAElBgF,WAAW;aAAc;;;QACzBC,kBAAkBD,QAAQ;UACxBvzB,MAAM+wB,OAAO;aACV0C,iBAAiB,KAAKhJ,MAAM3hB,WAAW9I,MAAM;UAAWA;;UAC3D0zB,QAAQ,KAAKjJ,MAAM3rB,MAAMiyB,MAAM/wB;WAC9B8jB,0BAA0BtzB,KAAKkjC;eAAiB;;;WAEhD;;;;;EAMTb,KAAKc,kBAAkB;QACjB,KAAKp8B,QAAQuzB,cAAc,MAAM,KAAKoG,aAAa;aAC5C;;IAEXlH,eAAeU,YAAY,KAAK1qB;QAC5BszB,OAAOtJ,eAAeW,KAAK,KAAKF;QAChCsG,OAAO,KAAK/wB,MAAMszB,KAAK,GAAGvhC;YACtB63B,UAAUp5B,KAAK,KAAKi6B,MAAM3rB,MAAM,KAAKkB,KAAK+wB,UAChD,KAAKtG,MAAM3rB,MAAMiyB,MAAMA,OAAO,OAAO,eACpCA,OAAO,MAAM,KAAKtG,MAAM14B,WAAW0hC,iBAAiB,KAAKhJ,MAAMuG,OAAOD,OAAO;;;;;;;;EAUlF8B,KAAKE,iBAAiB,UAASxE,SAASqF,UAAUx8B;QAC5Cy8B,YAAY,KAAK/iC,MAAM++B,OAAO,KAAKC,aAAaqD;QAEhD,KAAKE,MAAM9E;MACbsF,YAAY1jB,MAAMwY;MAClBwK,OAAO;;;;;YAODU;WACH1jB,MAAMuX;WAAavX,MAAM2X;eAAkB,KAAKgM,4BAA4BjE,MAAMgE,UAAUnP;WAC5FvU,MAAM4X;eAAkB,KAAKgM,uBAAuBlE;WACpD1f,MAAM8X;eAAY,KAAK+L,iBAAiBnE;WACxC1f,MAAMiY;eAAa,KAAK6L,kBAAkBpE;WAC1C1f,MAAMkY;;;;YAIJkG,YAAY,KAAK9Y,UAAU8Y,YAAY,QAAQA,YAAY,YAAa,KAAKh3B,QAAQuzB,eAAe;UAAK,KAAKuG;;eAC5G,KAAK6C,uBAAuBrE,MAAM,QAAQtB;WAC9Cpe,MAAM8Y;YACLsF;UAAW,KAAK8C;;eACb,KAAK8C,WAAWtE,MAAM;WAC1B1f,MAAMmY;eAAY,KAAK8L,iBAAiBvE;WACxC1f,MAAMoY;eAAgB,KAAK8L,qBAAqBxE;WAChD1f,MAAMqY;eAAgB,KAAK8L,qBAAqBzE;WAChD1f,MAAMsY;eAAe,KAAK8L,oBAAoB1E;WAC9C1f,MAAMuY;eAAa,KAAK8L,kBAAkB3E;WAC1C1f,MAAMyY;WAAazY,MAAMwY;QAC5BwK,OAAOA,QAAQ,KAAK77B;YAChBi3B,WAAW4E,SAAS;UAAS,KAAK9B;;eAC/B,KAAKoD,kBAAkB5E,MAAMsD;WACjChjB,MAAM0Y;eAAe,KAAK6L,oBAAoB7E;WAC9C1f,MAAM2Y;eAAc,KAAK6L,mBAAmB9E;WAC5C1f,MAAMuV;eAAe,KAAKkP,WAAW,MAAM/E;WAC3C1f,MAAM4V;eAAa,KAAK8O,oBAAoBhF;WAC5C1f,MAAMgZ;WACNhZ,MAAMiZ;YACL,KAAK7xB,QAAQuzB,cAAc,MAAM+I,cAAc1jB,MAAMiZ;UACvDY,eAAeU,YAAY,KAAK1qB;cAC5BszB,OAAOtJ,eAAeW,KAAK,KAAKF;cAChCsG,OAAO,KAAK/wB,MAAMszB,KAAK,GAAGvhC,QAAQwhC,SAAS,KAAK9I,MAAM3hB,WAAWioB;cACjEwC,WAAW,MAAMA,WAAW;;mBACrB,KAAKuB,yBAAyBjF,MAAM,KAAKa;;;aAGjD,KAAKn5B,QAAQ6zB;eACXwI;YACD,KAAK/B,MAAM,KAAKtxB,OAAO;;eACtB,KAAKmuB;YACN,KAAKmD,MAAM,KAAKtxB,OAAO;;;eAEtBszB,cAAc1jB,MAAMiZ,UAAU,KAAK2L,YAAYlF,QAAQ,KAAKmF,YAAYnF,MAAMz4B;;YAQjF,KAAKu8B;cACHpF;YAAW,KAAK8C;;UACpB,KAAKN;iBACE,KAAKmD,uBAAuBrE,MAAM,OAAOtB;;YAG9C0G,YAAY,KAAK39B,OAAOq7B,OAAO,KAAKjC;YACpCmD,cAAc1jB,MAAM9Y,QAAQs7B,KAAK7hC,SAAS,gBAAgB,KAAKmgC,IAAI9gB,MAAM6V;iBAClE,KAAKkP,sBAAsBrF,MAAMoF,WAAWtC,MAAMpE;;iBAC/C,KAAKuG,yBAAyBjF,MAAM8C;;;;EAItDE,KAAKiB,8BAA8B,UAASjE,MAAMnL;QAC5CyQ,UAAUzQ,YAAY;IAC1B,KAAKqM;QACD,KAAKE,IAAI9gB,MAAM4V,SAAS,KAAKwL;MAAqB1B,KAAKrL,QAAQ;eAC1D,KAAK1zB,SAASqf,MAAM9Y;MAAQ,KAAKg6B;;MAExCxB,KAAKrL,QAAQ,KAAK4Q;MAClB,KAAK5D;;;;QAKH1/B,IAAI;WACDA,IAAI,KAAKk9B,OAAOj9B,UAAUD;UAC3BujC,MAAM,KAAKrG,OAAOl9B;UAClB+9B,KAAKrL,SAAS,QAAQ6Q,IAAIh+B,SAASw4B,KAAKrL,MAAMntB;YAC5Cg+B,IAAIlC,QAAQ,SAASgC,WAAWE,IAAIlC,SAAS;;;YAC7CtD,KAAKrL,SAAS2Q;;;;;QAGlBrjC,MAAM,KAAKk9B,OAAOj9B;MAAU,KAAK8/B,MAAMhC,KAAKtvB,OAAO,iBAAiBmkB;;WACjE,KAAKuO,WAAWpD,MAAMsF,UAAU,mBAAmB;;EAG5DtC,KAAKkB,yBAAyB,UAASlE;IACrC,KAAKkB;IACL,KAAKS;WACE,KAAKyB,WAAWpD,MAAM;;EAG/BgD,KAAKmB,mBAAmB,UAASnE;IAC/B,KAAKkB;IACL,KAAK/B,OAAOx/B,KAAK0jC;IACjBrD,KAAK78B,OAAO,KAAK+/B,eAAe;IAChC,KAAK/D,OAAO/V;IACZ,KAAK2Y,OAAOzhB,MAAM0Y;IAClBgH,KAAKr/B,OAAO,KAAK8kC;QACb,KAAK/9B,QAAQuzB,eAAe;MAC5B,KAAKmG,IAAI9gB,MAAM4V;;MAEf,KAAKyL;;WACF,KAAKyB,WAAWpD,MAAM;;;;;;;;;EAW/BgD,KAAKoB,oBAAoB,UAASpE;IAChC,KAAKkB;QACDwE,UAAW,KAAKh+B,QAAQuzB,eAAe,MAAM,KAAK2E,YAAa,KAAKF,cAAc,KAAKh4B,QAAQ8zB,8BAA+B,KAAK8F,cAAc,WAAY,KAAK9C,gBAAgB;IACtL,KAAKW,OAAOx/B,KAAK0jC;IACjB,KAAK9D,WAAW;IAChB,KAAKwC,OAAOzhB,MAAMyV;QACd,KAAK90B,SAASqf,MAAM4V;UAClBwP,WAAW;QAAK,KAAKlE,WAAWkE;;aAC7B,KAAKC,SAAS3F,MAAM;;QAEzBwD,QAAQ,KAAKA;QACb,KAAKviC,SAASqf,MAAMwY,QAAQ,KAAK73B,SAASqf,MAAMyY,UAAUyK;UACxDoC,SAAS,KAAK3F,aAAaqD,OAAOE,QAAQ,QAAQ,KAAK/7B;MAC3D,KAAKy5B;MACL,KAAK2E,SAASD,QAAQ,MAAMtC;MAC5B,KAAKF,WAAWwC,QAAQ;WACnB,KAAK3kC,SAASqf,MAAMqZ,OAAQ,KAAKjyB,QAAQuzB,eAAe,KAAK,KAAKoG,aAAa,UAAWuE,OAAOE,aAAa5jC,WAAW;YACxH,KAAKwF,QAAQuzB,eAAe;cAC1B,KAAKh6B,SAASqf,MAAMqZ;gBAClB+L,WAAW;cAAK,KAAKlE,WAAWkE;;;YAC7B1F,KAAK+F,QAAQL,WAAW;;;eAE5B,KAAKM,WAAWhG,MAAM4F;;UAE3BF,WAAW;QAAK,KAAKlE,WAAWkE;;aAC7B,KAAKC,SAAS3F,MAAM4F;;QAEzBrD,6BAA6B0D;QAC7BC,OAAO,KAAKrF,gBAAgB,MAAM0B;QAClC,KAAKthC,SAASqf,MAAMqZ,OAAQ,KAAKjyB,QAAQuzB,eAAe,KAAK,KAAKoG,aAAa;UAC7E,KAAK35B,QAAQuzB,eAAe;YAC1B,KAAKh6B,SAASqf,MAAMqZ;cAClB+L,WAAW;YAAK,KAAKlE,WAAWkE;;;UAC7B1F,KAAK+F,QAAQL,WAAW;;;MAEnC,KAAKS,aAAaD,MAAM,OAAO3D;MAC/B,KAAK6D,UAAUF;aACR,KAAKF,WAAWhG,MAAMkG;;MAE7B,KAAKxD,sBAAsBH,wBAAwB;;QAEjDmD,WAAW;MAAK,KAAKlE,WAAWkE;;WAC7B,KAAKC,SAAS3F,MAAMkG;;EAG7BlD,KAAKqB,yBAAyB,UAASrE,MAAMqG,SAASC;IACpD,KAAKpF;WACE,KAAKqF,cAAcvG,MAAMwG,kBAAkBF,sBAAsB,IAAIG,yBAAyB,OAAOJ;;EAG9GrD,KAAKuB,mBAAmB,UAASvE;IAC/B,KAAKkB;IACLlB,KAAKr/B,OAAO,KAAK8kC;;IAEjBzF,KAAK0G,aAAa,KAAKxD,eAAe;IACtClD,KAAK2G,YAAY,KAAKvF,IAAI9gB,MAAM+X,SAAS,KAAK6K,eAAe,QAAQ;WAC9D,KAAKE,WAAWpD,MAAM;;EAG/BgD,KAAKwB,uBAAuB,UAASxE;SAC9B,KAAKN,eAAe,KAAKh4B,QAAQ4zB;MAClC,KAAK0G,MAAM,KAAKtxB,OAAO;;IAC3B,KAAKwwB;;;;QAMD,KAAKE,IAAI9gB,MAAM4V,SAAS,KAAKwL;MAAqB1B,KAAK4G,WAAW;;MAC/D5G,KAAK4G,WAAW,KAAK/F;MAAmB,KAAKc;;WAC7C,KAAKyB,WAAWpD,MAAM;;EAG/BgD,KAAKyB,uBAAuB,UAASzE;IACnC,KAAKkB;IACLlB,KAAK6G,eAAe,KAAKpB;IACzBzF,KAAK8G;IACL,KAAK/E,OAAOzhB,MAAMuV;IAClB,KAAKsJ,OAAOx/B,KAAK4jC;IACjB,KAAKhE,WAAW;;;;QAMZxV;aACKgd,aAAa,OAAO,KAAK9lC,SAASqf,MAAMwV;UAC3C,KAAK70B,SAASqf,MAAMyX,SAAS,KAAK92B,SAASqf,MAAM6X;YAC/C6O,SAAS,KAAK/lC,SAASqf,MAAMyX;YAC7BhO;UAAO,KAAKqZ,WAAWrZ,KAAK;;QAChCiW,KAAK8G,MAAMnnC,KAAKoqB,MAAM,KAAKkW;QAC3BlW,IAAI2c;QACJ,KAAKxF;YACD8F;UACFjd,IAAIppB,OAAO,KAAKkgC;;cAEZkG;YAAc,KAAKvE,iBAAiB,KAAKhE,cAAc;;UAC3DuI,aAAa;UACbhd,IAAIppB,OAAO;;QAEb,KAAKohC,OAAOzhB,MAAM6V;;aAEbpM;UAAO,KAAKyX;;QACjBzX,IAAI2c,WAAW/mC,KAAK,KAAKujC,eAAe;;;IAG5C,KAAK+D;QACDld;MAAO,KAAKqZ,WAAWrZ,KAAK;;IAChC,KAAKmX;;IACL,KAAK/B,OAAO/V;WACL,KAAKga,WAAWpD,MAAM;;EAG/BgD,KAAK0B,sBAAsB,UAAS1E;IAClC,KAAKkB;QACDnH,UAAUp5B,KAAK,KAAKi6B,MAAM3rB,MAAM,KAAKwvB,YAAY,KAAK/tB;MACtD,KAAKsxB,MAAM,KAAKvD,YAAY;;IAChCuB,KAAK4G,WAAW,KAAK/F;IACrB,KAAKc;WACE,KAAKyB,WAAWpD,MAAM;;;MAK3BkH;EAEJlE,KAAK2B,oBAAoB,UAAS3E;IAChC,KAAKkB;IACLlB,KAAK7D,QAAQ,KAAK4I;IAClB/E,KAAKmH,UAAU;QACX,KAAKlmC,SAASqf,MAAM0X;UAClBoP,SAAS,KAAKnH;MAClB,KAAKiB;UACD,KAAKE,IAAI9gB,MAAMyV;QACjBqR,OAAOC,QAAQ,KAAKC;YAChBhe,SAAS8d,OAAOC,MAAMpmC,SAAS;QACnC,KAAKs+B,WAAWjW,SAASyT,qBAAqB;QAC9C,KAAKqJ,UAAUgB,OAAOC,OAAO/d,SAASkU,oBAAoBF;QAC1D,KAAKyE,OAAOzhB,MAAM0V;;YAEd,KAAKtuB,QAAQuzB,cAAc;UAAM,KAAKuG;;QAC1C4F,OAAOC,QAAQ;QACf,KAAK9H,WAAW;;MAElB6H,OAAOjkC,OAAO,KAAK4hC,WAAW;MAC9B,KAAKkC;MACLjH,KAAKmH,UAAU,KAAK/D,WAAWgE,QAAQ;;IAEzCpH,KAAKuH,YAAY,KAAKnG,IAAI9gB,MAAMgY,YAAY,KAAKyM,eAAe;SAC3D/E,KAAKmH,YAAYnH,KAAKuH;MACvB,KAAKvF,MAAMhC,KAAKtvB,OAAO;;WACpB,KAAK0yB,WAAWpD,MAAM;;EAG/BgD,KAAK4B,oBAAoB,UAAS5E,MAAMsD;IACtC,KAAKpC;IACL,KAAK2E,SAAS7F,MAAM,OAAOsD;IAC3B,KAAK3B;WACE,KAAKyB,WAAWpD,MAAM;;EAG/BgD,KAAK6B,sBAAsB,UAAS7E;IAClC,KAAKkB;IACLlB,KAAKr/B,OAAO,KAAK8kC;IACjB,KAAKtG,OAAOx/B,KAAK0jC;IACjBrD,KAAK78B,OAAO,KAAK+/B,eAAe;IAChC,KAAK/D,OAAO/V;WACL,KAAKga,WAAWpD,MAAM;;EAG/BgD,KAAK8B,qBAAqB,UAAS9E;QAC7B,KAAKpa;MAAU,KAAKoc,MAAM,KAAKtxB,OAAO;;IAC1C,KAAKwwB;IACLlB,KAAKwH,SAAS,KAAK/B;IACnBzF,KAAK78B,OAAO,KAAK+/B,eAAe;WACzB,KAAKE,WAAWpD,MAAM;;EAG/BgD,KAAKgC,sBAAsB,UAAShF;IAClC,KAAKkB;WACE,KAAKkC,WAAWpD,MAAM;;EAG/BgD,KAAKqC,wBAAwB,UAASrF,MAAMoF,WAAWtC,MAAMpE;aAClD+I,MAAM,GAAGv3B,OAAO,KAAKivB,QAAQsI,MAAMv3B,KAAKhO,QAAQulC,OAAO;UAE1D9S,QAAQzkB,KAAKu3B;UAEb9S,MAAMntB,SAAS49B;QACf,KAAKpD,MAAMc,KAAKpyB,OAAO,YAAY00B,YAAY;;;QAEjD9B,OAAO,KAAKriC,KAAK+zB,SAAS,SAAS,KAAK/zB,SAASqf,MAAMqY,UAAU,WAAW;aACvE12B,IAAI,KAAKk9B,OAAOj9B,SAAS,GAAGD,KAAK,GAAGA;UACvCylC,UAAU,KAAKvI,OAAOl9B;UACtBylC,QAAQC,mBAAmB3H,KAAKtvB;;QAElCg3B,QAAQC,iBAAiB,KAAKj3B;QAC9Bg3B,QAAQpE,OAAOA;;;;;IAGnB,KAAKnE,OAAOx/B;MAAM6H,MAAM49B;MAAW9B,MAAMA;MAAMqE,gBAAgB,KAAKj3B;;IACpEsvB,KAAK78B,OAAO,KAAK+/B,eAAexE,UAAUA,QAAQv+B,QAAQ,cAAc,IAAIu+B,UAAU,UAAUA,UAAU;IAC1G,KAAKS,OAAO/V;IACZ4W,KAAKrL,QAAQmO;WACN,KAAKM,WAAWpD,MAAM;;EAG/BgD,KAAKiC,2BAA2B,UAASjF,MAAM8C;IAC7C9C,KAAK+C,aAAaD;IAClB,KAAKnB;WACE,KAAKyB,WAAWpD,MAAM;;;;;EAO/BgD,KAAK+B,aAAa,UAAS6C,uBAAuB5H,MAAM6H;QACjDD,+BAA+B,GAAIA,wBAAwB;QAC3D5H,cAAc,GAAIA,OAAO,KAAKC;IAEnCD,KAAK78B;IACL,KAAK4+B,OAAOzhB,MAAMuV;QACd+R;MAAyB,KAAKrI,WAAW;;WACtC,KAAKt+B,SAASqf,MAAMwV;UACrBmN,OAAO,KAAKC,eAAe;MAC/BlD,KAAK78B,KAAKxD,KAAKsjC;;QAEb4E;MAAc,KAAKjiB,SAAS;;IAChC,KAAKsb;QACD0G;MAAyB,KAAKX;;WAC3B,KAAK7D,WAAWpD,MAAM;;;;;EAO/BgD,KAAK2C,WAAW,UAAS3F,MAAMkG;IAC7BlG,KAAKkG,OAAOA;IACZ,KAAKnE,OAAOzhB,MAAM4V;IAClB8J,KAAKr/B,OAAO,KAAKM,SAASqf,MAAM4V,OAAO,OAAO,KAAK2K;IACnD,KAAKkB,OAAOzhB,MAAM4V;IAClB8J,KAAK8H,SAAS,KAAK7mC,SAASqf,MAAM0V,SAAS,OAAO,KAAK6K;IACvD,KAAKkB,OAAOzhB,MAAM0V;IAClBgK,KAAK78B,OAAO,KAAK+/B,eAAe;IAChC,KAAK+D;IACL,KAAK9H,OAAO/V;WACL,KAAKga,WAAWpD,MAAM;;;;EAM/BgD,KAAKgD,aAAa,UAAShG,MAAMkG;QAC3B6B,UAAU,KAAK9mC,SAASqf,MAAMqZ;IAClC,KAAKuH;QAGHgF,KAAKjlC,SAAS,yBACdilC,KAAKJ,aAAa,GAAGI,QAAQ,UAE1B6B,WACD,KAAKrgC,QAAQuzB,cAAc,KAC3B,KAAKrV,UACLsgB,KAAK5C,SAAS,SACd4C,KAAKJ,aAAa,GAAGlkC,GAAGX,SAAS;MAGnC,KAAK+gC,MACHkE,KAAKx1B,QACHq3B,UAAU,WAAW,YAAY;eAE5B7B,KAAKjlC,SAAS;MACvB,KAAK+gC,MAAMkE,KAAKx1B,OAAO;;IAEzBsvB,KAAKgI,OAAO9B;IACZlG,KAAKiI,QAAQF,UAAU,KAAKlH,oBAAoB,KAAKqH;IACrD,KAAKnG,OAAOzhB,MAAM0V;IAClBgK,KAAK78B,OAAO,KAAK+/B,eAAe;IAChC,KAAK+D;IACL,KAAK9H,OAAO/V;WACL,KAAKga,WAAWpD,MAAM+H,UAAU,mBAAmB;;;EAK5D/E,KAAK6C,WAAW,UAAS7F,MAAMmI,OAAO7E;IACpCtD,KAAK8F;IACL9F,KAAKsD,OAAOA;;UAEN8E,OAAO,KAAKnI;MAChB,KAAKoI,WAAWD,MAAM9E;UAClB,KAAKlC,IAAI9gB,MAAMuW;QACjBuR,KAAKlC,OAAO,KAAKgC,iBAAiBC;iBACzB7E,SAAS,aAAa,KAAKriC,SAASqf,MAAMqZ,OAAQ,KAAKjyB,QAAQuzB,eAAe,KAAK,KAAKoG,aAAa;QAC9G,KAAKG;iBACI4G,KAAKxmC,GAAGX,SAAS,kBAAkBknC,UAAU,KAAKlnC,SAASqf,MAAMqZ,OAAO,KAAK0H,aAAa;QACnG,KAAKW,MAAM,KAAKvD,YAAY;;QAE5B2J,KAAKlC,OAAO;;MAEdlG,KAAK8F,aAAanmC,KAAK,KAAKyjC,WAAWgF,MAAM;WACxC,KAAKhH,IAAI9gB,MAAM2V;;;;WAEf+J;;EAGTgD,KAAKqF,aAAa,UAASD,MAAM9E;IAC/B8E,KAAKxmC,KAAK,KAAK0lC;IACf,KAAKlB,UAAUgC,KAAKxmC,IAAI0hC,SAAS,QAAQjG,WAAWC,cAAc;;MAGhEkJ,iBAAiB,GAAGC,yBAAyB,GAAG6B,mBAAmB;;;;EAMvEtF,KAAKuD,gBAAgB,UAASvG,MAAMuI,WAAWC,qBAAqBnC;IAClE,KAAKoC,aAAazI;QACd,KAAKt4B,QAAQuzB,eAAe,KAAK,KAAKvzB,QAAQuzB,eAAe,MAAMoL;UACjE,KAAKplC,SAASqf,MAAMmX,QAAS8Q,YAAY9B;QACzC,KAAKjF;;MACTxB,KAAK7C,YAAY,KAAKiE,IAAI9gB,MAAMmX;;QAE9B,KAAK/vB,QAAQuzB,eAAe;MAC5B+E,KAAK9C,UAAUmJ;;QAEfkC,YAAY/B;MACdxG,KAAKp+B,KAAM2mC,YAAYD,oBAAqB,KAAKrnC,SAASqf,MAAM9Y,OAAO,OAAO,KAAK+9B;UAC/EvF,KAAKp+B,QAAQ2mC,YAAY9B;;;;;QAKzB,KAAKL,UAAUpG,KAAKp+B,IAAK,KAAKgkB,UAAUoa,KAAK7C,aAAa6C,KAAK9C,QAAS,KAAK6C,sBAAsB1C,WAAWC,eAAeC;;;QAG/HmL,cAAc,KAAK1J,UAAU2J,cAAc,KAAK1J,UAAU2J,mBAAmB,KAAK1J;IACtF,KAAKF,WAAW;IAChB,KAAKC,WAAW;IAChB,KAAKC,gBAAgB;IACrB,KAAKK,WAAWsJ,cAAc7I,KAAK9C,OAAO8C,KAAK7C;UAEzCoL,YAAY/B;MACdxG,KAAKp+B,KAAK,KAAKX,SAASqf,MAAM9Y,OAAO,KAAK+9B,eAAe;;IAE7D,KAAKuD,oBAAoB9I;IACzB,KAAK+I,kBAAkB/I,MAAMwI,qBAAqB;IAElD,KAAKxJ,WAAW0J;IAChB,KAAKzJ,WAAW0J;IAChB,KAAKzJ,gBAAgB0J;WACd,KAAKxF,WAAWpD,MAAOuI,YAAY/B,iBAAkB,wBAAwB;;EAGtFxD,KAAK8F,sBAAsB,UAAS9I;IAClC,KAAK+B,OAAOzhB,MAAMyV;IAClBiK,KAAKgJ,SAAS,KAAKC,iBAAiB3oB,MAAM0V,QAAQ,OAAO,KAAKtuB,QAAQuzB,eAAe;IACrF,KAAK2H;;;;EAMPI,KAAKsB,aAAa,UAAStE,MAAMkJ;IAC/B,KAAKhI;;;QAIDiI,YAAY,KAAKvjB;IACrB,KAAKA,SAAS;IAEd,KAAKwjB,aAAapJ,MAAMkJ;IACxB,KAAKG,gBAAgBrJ;QACjBsJ,YAAY,KAAKrJ;QACjBsJ,iBAAiB;IACrBD,UAAUnmC;IACV,KAAK4+B,OAAOzhB,MAAMuV;WACX,KAAK50B,SAASqf,MAAMwV;UACrB0T,UAAU,KAAKC,kBAAkBzJ,KAAKvR,eAAe;UACrD+a;QACFF,UAAUnmC,KAAKxD,KAAK6pC;YAChBA,QAAQvoC,SAAS,sBAAsBuoC,QAAQlG,SAAS;cACtDiG;YAAkB,KAAKvH,MAAMwH,QAAQ94B,OAAO;;UAChD64B,iBAAiB;;;;IAIvB,KAAK3jB,SAASujB;IACd,KAAKjI;IACLlB,KAAK78B,OAAO,KAAKigC,WAAWkG,WAAW;WAChC,KAAKlG,WAAWpD,MAAMkJ,cAAc,qBAAqB;;EAGlElG,KAAKyG,oBAAoB,UAASC;QAC5BC,SAAS;QAET,KAAKvI,IAAI9gB,MAAM4V;aAAgB;;QAE/B0T,SAAS,KAAK3J;QACd4J,gBAAgB,UAAUzlC,GAAG0lC;UAC1BA,qBAAqB,GAAIA,cAAc;UAExCp5B,QAAQi5B,OAAOj5B,OAAO2rB,WAAWsN,OAAOtN;WACvCsN,OAAOrI,cAAcl9B;eAAa;;UACnCulC,OAAO1oC,SAASqf,MAAMyV,YAAY+T,gBAAgBH,OAAOlI;eAAgC;;UACzFmI,OAAOjhC;QAAOghC,OAAOnI;;MACzBoI,OAAOG,WAAW;MAClBH,OAAOjhC,MAAMghC,OAAOK,YAAYt5B,OAAO2rB;MACvCuN,OAAOjhC,IAAInB,OAAOpD;MAClBulC,OAAOvG,WAAWwG,OAAOjhC,KAAK;aACvB;;IAGTihC,OAAOtG,OAAO;IACdsG,OAAOK,SAASJ,cAAc;QAC1BK,cAAc,KAAK9I,IAAI9gB,MAAMmX;QAC7B4O,UAAU;SACT6D;UACC,KAAKxiC,QAAQuzB,eAAe,KAAK4O,cAAc,SAAS;QAC1DxD,UAAU;QACV6D,cAAc,KAAKxiC,QAAQuzB,eAAe,KAAK,KAAKmG,IAAI9gB,MAAMmX;iBACrDoS,cAAc;QACvBD,OAAOtG,OAAO;iBACLuG,cAAc;QACvBD,OAAOtG,OAAO;;;SAGbsG,OAAOjhC;MAAO,KAAKwhC,kBAAkBP;;QACtCjhC,MAAMihC,OAAOjhC;QACbyhC,oBAAoB;SACnBR,OAAOG,aAAaH,OAAOK,WAAWthC,IAAI1H,SAAS,gBAAgB0H,IAAInB,SAAS,iBACjFmB,IAAI1H,SAAS,aAAa0H,IAAIlB,UAAU;UACtCmiC,OAAOtG,SAAS;QAAY,KAAKtB,MAAMr5B,IAAI+H,OAAO;;UAClDw5B;QAAe,KAAKlI,MAAMr5B,IAAI+H,OAAO;;UACrC21B;QAAW,KAAKrE,MAAMr5B,IAAI+H,OAAO;;MACrCk5B,OAAOtG,OAAO;MACd8G,oBAAoBV;eACXE,OAAOK,UAAUthC,IAAI1H,SAAS,gBAAgB0H,IAAInB,SAAS;MACpE,KAAKw6B,MAAMr5B,IAAI+H,OAAO;;IAExB,KAAK25B,iBAAiBT,QAAQM,aAAa7D,SAAS+D;QAChDR,OAAOtG,SAAS,SAASsG,OAAOniC,MAAMuhC,OAAO9mC,WAAW;MACxD,KAAKsgC,iBAAiBoH,OAAOniC,MAAMiJ,OAAO;;QAC1Ck5B,OAAOtG,SAAS,SAASsG,OAAOniC,MAAMuhC,OAAO9mC,WAAW;MACxD,KAAKsgC,iBAAiBoH,OAAOniC,MAAMiJ,OAAO;;QAC1Ck5B,OAAOtG,SAAS,SAASsG,OAAOniC,MAAMuhC,OAAO,GAAG/nC,SAAS;MACzD,KAAKuhC,iBAAiBoH,OAAOniC,MAAMuhC,OAAO,GAAGt4B,OAAO;;WACjDk5B;;EAGT5G,KAAKqH,mBAAmB,UAAST,QAAQM,aAAa7D,SAAS+D;IAC7DR,OAAOniC,QAAQ,KAAK6iC,YAAYJ,aAAa7D,SAAS+D;WAC/C,KAAKhH,WAAWwG,QAAQ;;EAGjC5G,KAAKoG,eAAe,UAASpJ,MAAMkJ;QAC7B,KAAKjoC,SAASqf,MAAM9Y;MACtBw4B,KAAKp+B,KAAK,KAAK2jC;UACX2D;QACA,KAAK9C,UAAUpG,KAAKp+B,IAAI07B,cAAc;;;UAEtC4L,gBAAgB;QAChB,KAAK1H;;MACTxB,KAAKp+B,KAAK;;;EAIdohC,KAAKqG,kBAAkB,UAASrJ;IAC9BA,KAAKvR,aAAa,KAAK2S,IAAI9gB,MAAM+Y,YAAY,KAAKkR,wBAAwB;;;EAK5EvH,KAAKmC,cAAc,UAASnF,MAAMz4B;IAChC,KAAK25B;;QAED,KAAKE,IAAI9gB,MAAMmX;UACb,KAAK/vB,QAAQuzB,eAAe;YAC1B,KAAKqG,cAAc;UACrBtB,KAAKwK,WAAW,KAAKjF,WAAW;UAChC,KAAKkF,YAAYljC,SAASy4B,KAAKwK,SAAShjC,MAAM,KAAKg3B;;UAEnDwB,KAAKwK,WAAW;;;MAGpB,KAAKjJ,iBAAiB;UAClB,KAAKtgC,SAASqf,MAAMhY;QAAU,KAAKk5B;;MACvCxB,KAAK32B,SAAS,KAAKqhC;MACnB,KAAK/I;aACE,KAAKyB,WAAWpD,MAAM;;QAE3B,KAAKoB,IAAI9gB,MAAM6X;;MACjB,KAAKsS,YAAYljC,SAAS,WAAW,KAAKi3B;UACtC6H;UACA,KAAKplC,SAASqf,MAAMkY,cAAc6N,UAAU,KAAKvC;YAC/C6G,QAAQ,KAAK1K;QACjB,KAAKiB;YACDmF;UAAW,KAAKnF;;QACpBlB,KAAK4K,cAAc,KAAKrE,cAAcoE,OAAOnE,iBAAiB8B,kBAAkB,OAAOjC;iBAC9E,KAAKplC,SAASqf,MAAM8Y;YACzByR,QAAQ,KAAK5K;QACjBD,KAAK4K,cAAc,KAAKtG,WAAWuG,OAAO;;QAE1C7K,KAAK4K,cAAc,KAAK1C;QACxB,KAAKvG;;aAEA,KAAKyB,WAAWpD,MAAM;;;QAG3B,KAAK8K;MACP9K,KAAK4K,cAAc,KAAK1H,eAAe;UACnClD,KAAK4K,YAAY3pC,SAAS;QAC1B,KAAK8pC,oBAAoBxjC,SAASy4B,KAAK4K,YAAY9E;;QAEnD,KAAK2E,YAAYljC,SAASy4B,KAAK4K,YAAYhpC,GAAG4F,MAAMw4B,KAAK4K,YAAYhpC,GAAG8O;;MAC5EsvB,KAAKgL;MACLhL,KAAK32B,SAAS;;;MAEd22B,KAAK4K,cAAc;MACnB5K,KAAKgL,aAAa,KAAKC,sBAAsB1jC;UACzC,KAAK+5B,cAAc;YACjB,KAAKrgC,SAASqf,MAAMhY;UAAU,KAAKk5B;;QACvCxB,KAAK32B,SAAS,KAAKqhC;;iBAEVzoC,IAAI,GAAGiO,OAAO8vB,KAAKgL,YAAY/oC,IAAIiO,KAAKhO,QAAQD,KAAK;;cAExDipC,OAAOh7B,KAAKjO;UAEhB,KAAKkpC,gBAAgBD,KAAKE;;UAE1B,KAAKC,iBAAiBH,KAAKE;;QAG7BpL,KAAK32B,SAAS;;MAEhB,KAAKs4B;;WAEA,KAAKyB,WAAWpD,MAAM;;EAG/BgD,KAAKyH,cAAc,UAASljC,SAASC,MAAM2I;SACpC5I;;;QACDynB,IAAIznB,SAASC;MACb,KAAKg7B,iBAAiBryB,KAAK,uBAAuB3I,OAAO;;IAC7DD,QAAQC,QAAQ;;EAGlBw7B,KAAKsI,qBAAqB,UAAS/jC,SAASgkC;QACtCtqC,OAAOsqC,IAAItqC;QACXA,SAAS;MACT,KAAKwpC,YAAYljC,SAASgkC,IAAI/jC,MAAM+jC,IAAI76B;eACnCzP,SAAS;eACLgB,IAAI,GAAGiO,OAAOq7B,IAAIC,YAAYvpC,IAAIiO,KAAKhO,QAAQD,KAAK;YAEvDkpB,OAAOjb,KAAKjO;QAEhB,KAAKqpC,mBAAmB/jC,SAAS4jB;;eAE9BlqB,SAAS;eACLwmC,MAAM,GAAGgE,SAASF,IAAIG,UAAUjE,MAAMgE,OAAOvpC,QAAQulC,OAAO;YACjEkE,MAAMF,OAAOhE;YAEXkE;UAAO,KAAKL,mBAAmB/jC,SAASokC;;;eAEzC1qC,SAAS;MACd,KAAKqqC,mBAAmB/jC,SAASgkC,IAAI9jC;eAChCxG,SAAS;MACd,KAAKqqC,mBAAmB/jC,SAASgkC,IAAIvD;eAChC/mC,SAAS;MACd,KAAKqqC,mBAAmB/jC,SAASgkC,IAAI3E;eAChC3lC,SAAS;MACd,KAAKqqC,mBAAmB/jC,SAASgkC,IAAIxI;;;EAG3CC,KAAK+H,sBAAsB,UAASxjC,SAASqkC;SACtCrkC;;;aACItF,IAAI,GAAGiO,OAAO07B,OAAO3pC,IAAIiO,KAAKhO,QAAQD,KAAK;UAE9CmmC,OAAOl4B,KAAKjO;MAEhB,KAAKqpC,mBAAmB/jC,SAAS6gC,KAAKxmC;;;EAI1CohC,KAAK8H,6BAA6B;WACzB,KAAK7pC,KAAK4zB,YAAY,SAC3B,KAAK5zB,KAAK4zB,YAAY,WACtB,KAAK5zB,KAAK4zB,YAAY,WACtB,KAAK5zB,KAAK4zB,YAAY,cACtB,KAAK2O,WACL,KAAKM;;;EAKTd,KAAKiI,wBAAwB,UAAS1jC;QAChCskC,YAAYC,QAAQ;;IAExB,KAAK/J,OAAOzhB,MAAMuV;YACV,KAAKuL,IAAI9gB,MAAMwV;WAChBgW;QACH,KAAK/J,OAAOzhB,MAAM2V;YACd,KAAK2L,mBAAmBthB,MAAMwV;;;;QAC3BgW,QAAQ;;UAEb9L,OAAO,KAAKC;MAChBD,KAAKoL,QAAQ,KAAK7F,WAAW;MAC7BvF,KAAKwK,WAAW,KAAKlJ,cAAc,QAAQ,KAAKiE,WAAW,QAAQvF,KAAKoL;MACxE,KAAKX,YAAYljC,SAASy4B,KAAKwK,SAAShjC,MAAMw4B,KAAKwK,SAAS95B;MAC5Dm7B,MAAMlsC,KAAK,KAAKyjC,WAAWpD,MAAM;;WAE5B6L;;;EAKT7I,KAAKkC,cAAc,UAASlF;IAC1B,KAAKkB;;QAED,KAAKjgC,SAASqf,MAAMhY;MACtB03B,KAAKgL,aAAa9D;MAClBlH,KAAK32B,SAAS,KAAKqhC;;MAEnB1K,KAAKgL,aAAa,KAAKe;MACvB,KAAKxK,iBAAiB;MACtBvB,KAAK32B,SAAS,KAAKpI,SAASqf,MAAMhY,SAAS,KAAKoiC,kBAAkB,KAAKlJ;;IAEzE,KAAKG;WACE,KAAKyB,WAAWpD,MAAM;;;EAK/BgD,KAAK+I,wBAAwB;QACvBF,YAAYC,QAAQ;QACpB,KAAK7qC,SAASqf,MAAM9Y;;UAElBw4B,OAAO,KAAKC;MAChBD,KAAKoL,QAAQ,KAAK7F;MAClB,KAAKa,UAAUpG,KAAKoL,OAAO9N;MAC3BuO,MAAMlsC,KAAK,KAAKyjC,WAAWpD,MAAM;WAC5B,KAAKoB,IAAI9gB,MAAM2V;eAAiB4V;;;QAEnC,KAAK5qC,SAASqf,MAAMmX;UAClBuU,SAAS,KAAK/L;MAClB,KAAKiB;MACL,KAAKK,iBAAiB;MACtByK,OAAOZ,QAAQ,KAAK7F;MACpB,KAAKa,UAAU4F,OAAOZ,OAAO9N;MAC7BuO,MAAMlsC,KAAK,KAAKyjC,WAAW4I,QAAQ;aAC5BH;;IAET,KAAK9J,OAAOzhB,MAAMuV;YACV,KAAKuL,IAAI9gB,MAAMwV;WAChBgW;QACH,KAAK/J,OAAOzhB,MAAM2V;YACd,KAAK2L,mBAAmBthB,MAAMwV;;;;QAC3BgW,QAAQ;;UAEbG,SAAS,KAAKhM;MAClBgM,OAAOC,WAAW,KAAK3G,WAAW;UAC9B,KAAKjE,cAAc;QACrB2K,OAAOb,QAAQ,KAAK7F;;QAEpB,KAAK4F,gBAAgBc,OAAOC;QAC5BD,OAAOb,QAAQa,OAAOC;;MAExB,KAAK9F,UAAU6F,OAAOb,OAAO9N;MAC7BuO,MAAMlsC,KAAK,KAAKyjC,WAAW6I,QAAQ;;WAE9BJ;;;EAIT7I,KAAKG,yBAAyB,UAASgJ;aAC5BlqC,IAAI,GAAGA,IAAIkqC,WAAWjqC,UAAU,KAAKkqC,qBAAqBD,WAAWlqC,OAAOA;MACnFkqC,WAAWlqC,GAAGoqC,YAAYF,WAAWlqC,GAAG8gC,WAAWuJ,IAAIr9B,MAAM,IAAI;;;EAGrE+zB,KAAKoJ,uBAAuB,UAAS7D;WAEjCA,UAAUtnC,SAAS,yBACnBsnC,UAAUxF,WAAW9hC,SAAS,oBACvBsnC,UAAUxF,WAAWt7B,UAAU;IAErC,KAAKmzB,MAAM2N,UAAU73B,WAAW,QAAQ,KAAKkqB,MAAM2N,UAAU73B,WAAW;;MAIzE67B,OAAO7O,OAAO9wB;;;EAKlB2/B,KAAKpG,eAAe,UAASnG,MAAMwM,WAAWjK;QACxC,KAAK76B,QAAQuzB,eAAe,KAAK+E;cAC3BA,KAAK/+B;aACR;cACC,KAAK2+B,WAAWI,KAAKx4B,SAAS;YAC9B,KAAKw6B,MAAMhC,KAAKtvB,OAAO;;;aAGxB;aACA;aACA;;aAGA;UACHsvB,KAAK/+B,OAAO;cACRshC;YAA0B,KAAKD,mBAAmBC,wBAAwB;;mBACrEtgC,IAAI,GAAGiO,OAAO8vB,KAAKwL,YAAYvpC,IAAIiO,KAAKhO,QAAQD,KAAK;gBACxDkpB,OAAOjb,KAAKjO;YAElB,KAAKkkC,aAAahb,MAAMqhB;;;;;;gBAOpBrhB,KAAKlqB,SAAS,kBACbkqB,KAAKyb,SAAS3lC,SAAS,kBAAkBkqB,KAAKyb,SAAS3lC,SAAS;cAEjE,KAAK+gC,MAAM7W,KAAKyb,SAASl2B,OAAO;;;;aAKjC;;cAECsvB,KAAKsD,SAAS;YAAU,KAAKtB,MAAMhC,KAAKr3B,IAAI+H,OAAO;;UACvD,KAAKy1B,aAAanG,KAAKv4B,OAAO+kC;;aAG3B;UACHxM,KAAK/+B,OAAO;cACRshC;YAA0B,KAAKD,mBAAmBC,wBAAwB;;UAC9E,KAAKkK,iBAAiBzM,KAAK0L,UAAUc;;aAGlC;UACHxM,KAAK/+B,OAAO;UACZ,KAAKklC,aAAanG,KAAK4G,UAAU4F;cAC7BxM,KAAK4G,SAAS3lC,SAAS;YACvB,KAAK+gC,MAAMhC,KAAK4G,SAASl2B,OAAO;;;aAGjC;cACCsvB,KAAKne,aAAa;YAAO,KAAKmgB,MAAMhC,KAAKgI,KAAKr3B,KAAK;;UACvDqvB,KAAK/+B,OAAO;iBACL++B,KAAKne;UACZ,KAAKskB,aAAanG,KAAKgI,MAAMwE;aAG1B;;aAGA;UACH,KAAKrG,aAAanG,KAAK+C,YAAYyJ,WAAWjK;;aAG3C;UACH,KAAKC,iBAAiBxC,KAAKtvB,OAAO;;aAG/B;eACE87B;;;;UAGL,KAAKxK,MAAMhC,KAAKtvB,OAAO;;eAEhB6xB;MAA0B,KAAKD,mBAAmBC,wBAAwB;;WAC9EvC;;;EAKTuM,KAAKE,mBAAmB,UAASC,UAAUF;QACrC77B,MAAM+7B,SAASxqC;aACVD,IAAI,GAAGA,IAAI0O,KAAK1O;UACnB0pC,MAAMe,SAASzqC;UACf0pC;QAAO,KAAKxF,aAAawF,KAAKa;;;QAEhC77B;UACEg8B,OAAOD,SAAS/7B,MAAM;UACtB,KAAKjJ,QAAQuzB,gBAAgB,KAAKuR,aAAaG,QAAQA,KAAK1rC,SAAS,iBAAiB0rC,KAAK/F,SAAS3lC,SAAS;QAC7G,KAAKugC,WAAWmL,KAAK/F,SAASl2B;;;WAE7Bg8B;;;EAKTH,KAAKK,cAAc,UAASrK;QACtBvC,OAAO,KAAKC;IAChB,KAAKiB;IACLlB,KAAK4G,WAAW,KAAKsB,iBAAiB,OAAO3F;WACtC,KAAKa,WAAWpD,MAAM;;EAG/BuM,KAAKM,mBAAmB;QAClB7M,OAAO,KAAKC;IAChB,KAAKiB;;QAGD,KAAKx5B,QAAQuzB,gBAAgB,KAAK,KAAKh6B,SAASqf,MAAM9Y;MACtD,KAAKg6B;;IAETxB,KAAK4G,WAAW,KAAKU;WAEd,KAAKlE,WAAWpD,MAAM;;;EAK/BuM,KAAKjF,mBAAmB;QAClB,KAAK5/B,QAAQuzB,eAAe;cACtB,KAAKh6B;aACRqf,MAAMqV;cACLqK,OAAO,KAAKC;UAChB,KAAKiB;UACLlB,KAAK0L,WAAW,KAAKzC,iBAAiB3oB,MAAMsV,UAAU,MAAM;iBACrD,KAAKwN,WAAWpD,MAAM;aAE1B1f,MAAMuV;iBACF,KAAKiX,SAAS;;;WAGlB,KAAKvH;;EAGdgH,KAAKtD,mBAAmB,UAAS8D,OAAOC,YAAYC;QAC9CC,WAAWpB,QAAQ;YACf,KAAK1K,IAAI2L;UACXjB;QAASA,QAAQ;;QACd,KAAK/J,OAAOzhB,MAAM2V;;UACrB+W,cAAc,KAAK/rC,SAASqf,MAAM2V;QACpCiX,KAAKvtC,KAAK;iBACDstC,sBAAsB,KAAKrL,mBAAmBmL;;iBAE9C,KAAK9rC,SAASqf,MAAMoW;YACzByW,OAAO,KAAKN;QAChB,KAAKO,qBAAqBD;QAC1BD,KAAKvtC,KAAKwtC;YACN,KAAKlsC,SAASqf,MAAM2V;UAAS,KAAK+L,MAAM,KAAKtxB,OAAO;;QACxD,KAAKqxB,OAAOgL;;;YAGRM,OAAO,KAAKC,kBAAkB,KAAK58B,OAAO,KAAK2rB;QACnD,KAAK+Q,qBAAqBC;QAC1BH,KAAKvtC,KAAK0tC;;;WAGPH;;EAGTX,KAAKa,uBAAuB,UAAS/F;WAC5BA;;;EAKTkF,KAAKe,oBAAoB,UAAS3P,UAAUtB,UAAU2L;IACpDA,OAAOA,QAAQ,KAAKV;QAChB,KAAK5/B,QAAQuzB,cAAc,MAAM,KAAKmG,IAAI9gB,MAAMuW;aAAcmR;;QAC9DhI,OAAO,KAAKgK,YAAYrM,UAAUtB;IACtC2D,KAAKgI,OAAOA;IACZhI,KAAKiI,QAAQ,KAAKC;WACX,KAAK9E,WAAWpD,MAAM;;;;;;;;EAU/BuM,KAAKnG,YAAY,UAAStD,MAAMyK,aAAaC;QACtCD,qBAAqB,GAAIA,cAAcnQ;YAEpC0F,KAAK7hC;WACR;YACCssC,gBAAgBjQ,gBAAgBwF,KAAKt7B,SAAS;UAC9C,KAAKg7B,iBAAiBM,KAAKpyB,OAAO;;YAClC,KAAKkV,UAAU,KAAKqY,wBAAwBt9B,KAAKmiC,KAAKt7B;UACtD,KAAKg7B,iBAAiBM,KAAKpyB,QAAQ68B,cAAc,aAAa,mBAAmBzK,KAAKt7B,OAAO;;YAC7FgmC;cACExe,IAAIwe,cAAc1K,KAAKt7B;YACvB,KAAKg7B,iBAAiBM,KAAKpyB,OAAO;;UACtC88B,aAAa1K,KAAKt7B,QAAQ;;YAExB+lC,gBAAgBnQ,aAAamQ,gBAAgB9P;UAAgB,KAAKgQ,YAAY3K,KAAKt7B,MAAM+lC,aAAazK,KAAKpyB;;;WAG5G;QACH,KAAK8xB,iBAAiBM,KAAKpyB,OAAO;;WAG/B;YACC68B;UAAe,KAAK/K,iBAAiBM,KAAKpyB,OAAO;;;WAGlD;iBACMzO,IAAI,GAAGiO,OAAO4yB,KAAK0I,YAAYvpC,IAAIiO,KAAKhO,QAAQD,KAAK;cAE1DkpB,OAAOjb,KAAKjO;UAEhB,KAAKmkC,UAAUjb,MAAMoiB,aAAaC;;;WAI/B;;QAEH,KAAKpH,UAAUtD,KAAKr7B,OAAO8lC,aAAaC;;WAGrC;iBACM/F,MAAM,GAAGgE,SAAS3I,KAAK4I,UAAUjE,MAAMgE,OAAOvpC,QAAQulC,OAAO;cAChE4F,OAAO5B,OAAOhE;cAEhB4F;YAAQ,KAAKjH,UAAUiH,MAAME,aAAaC;;;;WAI3C;QACH,KAAKpH,UAAUtD,KAAKkF,MAAMuF,aAAaC;;WAGpC;QACH,KAAKpH,UAAUtD,KAAK8D,UAAU2G,aAAaC;;WAGxC;QACH,KAAKpH,UAAUtD,KAAKC,YAAYwK,aAAaC;;;QAI7C,KAAKxL,MAAMc,KAAKpyB,QAAQ68B,cAAc,YAAY,kBAAkB;;;;MAMpEG,OAAOhQ,OAAO9wB;;;;;EAOlB8gC,KAAKC,iBAAiB,UAASxiB,MAAMyiB,UAAUrL;QACzC,KAAK76B,QAAQuzB,eAAe,KAAK9P,KAAKlqB,SAAS;;;QAE/C,KAAKyG,QAAQuzB,eAAe,MAAM9P,KAAK4e,YAAY5e,KAAKye,UAAUze,KAAK0iB;;;QAEvEllC,MAAMwiB,KAAKxiB;QACXnB;YACImB,IAAI1H;WACP;QAAcuG,OAAOmB,IAAInB;;WACzB;QAAWA,OAAOuD,OAAOpC,IAAIlB;;;;;QAG9B67B,OAAOnY,KAAKmY;QACZ,KAAK57B,QAAQuzB,eAAe;UAC1BzzB,SAAS,eAAe87B,SAAS;YAC/BsK,SAASnhC;cACP81B;gBACEA,uBAAuBF,cAAc;cACrCE,uBAAuBF,cAAc15B,IAAI+H;;;YAEtC,KAAK8xB,iBAAiB75B,IAAI+H,OAAO;;;QAE5Ck9B,SAASnhC,QAAQ;;;;IAIrBjF,OAAO,MAAMA;QACTypB,QAAQ2c,SAASpmC;QACjBypB;UACE6c;UACAxK,SAAS;QACXwK,eAAe,KAAKloB,UAAUqL,MAAMiV,QAAQjV,MAAMlkB,OAAOkkB,MAAM7gB;;QAE/D09B,eAAe7c,MAAMiV,QAAQjV,MAAMqS;;UAEjCwK;QACA,KAAKtL,iBAAiB75B,IAAI+H,OAAO;;;MAErCugB,QAAQ2c,SAASpmC;QACf0+B,MAAM;QACNn5B,KAAK;QACLqD,KAAK;;;IAGT6gB,MAAMqS,QAAQ;;;;;;;;;;;;;;EAkBhBoK,KAAK7M,kBAAkB,UAASkN,MAAMxL;QAChC5E,WAAW,KAAKjtB,OAAO2rB,WAAW,KAAKA;QACvCyG,OAAO,KAAKoF,iBAAiB6F,MAAMxL;QACnC,KAAKthC,SAASqf,MAAM2V;UAClB+J,OAAO,KAAKgK,YAAYrM,UAAUtB;MACtC2D,KAAKgO,eAAelL;aACb,KAAK1B,IAAI9gB,MAAM2V;QAAU+J,KAAKgO,YAAYruC,KAAK,KAAKuoC,iBAAiB6F,MAAMxL;;aAC3E,KAAKa,WAAWpD,MAAM;;WAExB8C;;;;EAMT4K,KAAKxF,mBAAmB,UAAS6F,MAAMxL,wBAAwB0L;QACzD,KAAK5M,aAAa;UAChB,KAAK1B;eAAsB,KAAKuO,WAAWH;;;;;;QAGxC,KAAKnP,cAAc;;;QAGxBuP,yBAAyB,OAAOC,kBAAkB,GAAGC,oBAAoB;QACzE9L;MACF6L,iBAAiB7L,uBAAuBJ;MACxCkM,mBAAmB9L,uBAAuBL;MAC1CK,uBAAuBJ,sBAAsBI,uBAAuBL,iBAAiB;;MAErFK,6BAA6B0D;MAC7BkI,yBAAyB;;QAGvBxQ,WAAW,KAAKjtB,OAAO2rB,WAAW,KAAKA;QACvC,KAAKp7B,SAASqf,MAAMyV,UAAU,KAAK90B,SAASqf,MAAM9Y;MAClD,KAAKu3B,mBAAmB,KAAKruB;;QAC7Bs3B,OAAO,KAAKsG,sBAAsBP,MAAMxL;QACxC0L;MAAkBjG,OAAOiG,eAAe9uC,KAAK,MAAM6oC,MAAMrK,UAAUtB;;QACnE,KAAKp7B,KAAKg0B;UACR+K,OAAO,KAAKgK,YAAYrM,UAAUtB;MACtC2D,KAAKne,WAAW,KAAKpa;MACrBu4B,KAAKgI,OAAO,KAAK/mC,SAASqf,MAAMuW,KAAK,KAAKsP,aAAa6B,MAAM,OAAOzF,0BAA0ByF;WACzFmG;QACH5L,uBAAuBJ,sBAAsBI,uBAAuBL,gBAAgBK,uBAAuBF,eAAe;;UAExHE,uBAAuBN,mBAAmBjC,KAAKgI,KAAKt3B;QACpD6xB,uBAAuBN,mBAAmB;;;MAC9C,KAAKmE,UAAU4B;MACf,KAAK9G;MACLlB,KAAKiI,QAAQ,KAAKC,iBAAiB6F;aAC5B,KAAK3K,WAAWpD,MAAM;;UAEzBmO;QAA0B,KAAKzL,sBAAsBH,wBAAwB;;;QAE/E6L,kBAAkB;MAAK7L,uBAAuBJ,sBAAsBiM;;QACpEC,oBAAoB;MAAK9L,uBAAuBL,gBAAgBmM;;WAC7DrG;;;EAKT0F,KAAKY,wBAAwB,UAASP,MAAMxL;QACtC5E,WAAW,KAAKjtB,OAAO2rB,WAAW,KAAKA;QACvCyG,OAAO,KAAKyL,aAAaR,MAAMxL;QAC/B,KAAKG,sBAAsBH;aAAkCO;;QAC7D,KAAK1B,IAAI9gB,MAAM+V;UACb2J,OAAO,KAAKgK,YAAYrM,UAAUtB;MACtC2D,KAAKr/B,OAAOmiC;MACZ9C,KAAK0G,aAAa,KAAKwB;MACvB,KAAKnG,OAAOzhB,MAAM6V;MAClB6J,KAAK2G,YAAY,KAAKuB,iBAAiB6F;aAChC,KAAK3K,WAAWpD,MAAM;;WAExB8C;;;EAKT4K,KAAKa,eAAe,UAASR,MAAMxL;QAC7B5E,WAAW,KAAKjtB,OAAO2rB,WAAW,KAAKA;QACvCyG,OAAO,KAAK0L,gBAAgBjM,wBAAwB;QACpD,KAAKG,sBAAsBH;aAAkCO;;WAC1DA,KAAKpyB,UAAUitB,YAAYmF,KAAK7hC,SAAS,4BAA4B6hC,OAAO,KAAK2L,YAAY3L,MAAMnF,UAAUtB,WAAW,GAAG0R;;;;;;;EASpIL,KAAKe,cAAc,UAASzG,MAAM0G,cAAcC,cAAcC,SAASb;QACjEzY,OAAO,KAAKr0B,KAAKm0B;QACjBE,QAAQ,UAAUyY,QAAQ,KAAK9sC,SAASqf,MAAMqZ;UAC5CrE,OAAOsZ;YACLC,UAAU,KAAK5tC,SAASqf,MAAMyW,aAAa,KAAK91B,SAASqf,MAAM0W;YAC/DY,WAAW,KAAK32B,SAASqf,MAAMsX;YAC/BA;;;UAGFtC,OAAOhV,MAAM0W,WAAW5B;;YAEtB0Z,KAAK,KAAKrnC;QACd,KAAKy5B;YACDvD,WAAW,KAAKjtB,OAAO2rB,WAAW,KAAKA;YACvC4L,QAAQ,KAAKwG,YAAY,KAAKD,gBAAgB,MAAM,QAAQ7Q,UAAUtB,UAAU/G,MAAMyY;YACtF/N,OAAO,KAAK+O,YAAYL,cAAcC,cAAc3G,MAAMC,OAAO6G,IAAID,WAAWjX;YAC/EiX,WAAW,KAAK5tC,SAASqf,MAAMsX,YAAcA,aAAa,KAAK32B,SAASqf,MAAMyW,aAAa,KAAK91B,SAASqf,MAAM0W;UAClH,KAAKwL,iBAAiB,KAAK9xB,OAAO;;eAE7B,KAAK+9B,YAAYzO,MAAM0O,cAAcC,cAAcC,SAASb;;;WAGhE/F;;EAGT0F,KAAKqB,cAAc,UAASpR,UAAUtB,UAAU2L,MAAMC,OAAO6G,IAAID;QAC3D7O,OAAO,KAAKgK,YAAYrM,UAAUtB;IACtC2D,KAAKgI,OAAOA;IACZhI,KAAKne,WAAWitB;IAChB9O,KAAKiI,QAAQA;WACN,KAAK7E,WAAWpD,MAAM6O,UAAU,sBAAsB;;;EAK/DnB,KAAKc,kBAAkB,UAASjM,wBAAwByM;QAClDrR,WAAW,KAAKjtB,OAAO2rB,WAAW,KAAKA,UAAUyG;QACjD,KAAKzB,aAAa,aAAa,KAAKzB,YAAa,KAAKF,cAAc,KAAKh4B,QAAQ8zB;MACnFsH,OAAO,KAAKmM;MACZD,WAAW;eACF,KAAK/tC,KAAKi0B;UACf8K,OAAO,KAAKC,aAAa6H,SAAS,KAAK7mC,SAASqf,MAAMwW;MAC1DkJ,KAAKne,WAAW,KAAKpa;MACrBu4B,KAAK9K,SAAS;MACd,KAAKgM;MACLlB,KAAK4G,WAAW,KAAK4H,gBAAgB,MAAM;MAC3C,KAAK9L,sBAAsBH,wBAAwB;UAC/CuF;QAAU,KAAK1B,UAAUpG,KAAK4G;iBACzB,KAAKhhB,UAAUoa,KAAKne,aAAa,YACjCme,KAAK4G,SAAS3lC,SAAS;QAC5B,KAAKuhC,iBAAiBxC,KAAKtvB,OAAO;;QAC/Bs+B,WAAW;;MAClBlM,OAAO,KAAKM,WAAWpD,MAAM8H,SAAS,qBAAqB;;MAE3DhF,OAAO,KAAKyH,oBAAoBhI;UAC5B,KAAKG,sBAAsBH;eAAkCO;;aAC1D,KAAK7hC,KAAKk0B,YAAY,KAAKsM;YAC5BuK,SAAS,KAAKhC,YAAYrM,UAAUtB;QACxC2P,OAAOnqB,WAAW,KAAKpa;QACvBukC,OAAO9W,SAAS;QAChB8W,OAAOpF,WAAW9D;QAClB,KAAKsD,UAAUtD;QACf,KAAK5B;QACL4B,OAAO,KAAKM,WAAW4I,QAAQ;;;SAI9BgD,YAAY,KAAK5N,IAAI9gB,MAAMqX;aACrB,KAAKoX,YAAYpR,UAAUtB,UAAUyG,MAAM,KAAK0L,gBAAgB,MAAM,QAAQ,MAAM;;aAEpF1L;;;;EAKb4K,KAAKnD,sBAAsB,UAAShI;QAC9B5E,WAAW,KAAKjtB,OAAO2rB,WAAW,KAAKA;QACvCyG,OAAO,KAAK4H,cAAcnI;QAC1BO,KAAK7hC,SAAS,6BAA6B,KAAK25B,MAAM3rB,MAAM,KAAKuvB,cAAc,KAAKC,gBAAgB;aAC7FqE;;QACPle,SAAS,KAAKsqB,gBAAgBpM,MAAMnF,UAAUtB;QAC9CkG,0BAA0B3d,OAAO3jB,SAAS;UACxCshC,uBAAuBJ,uBAAuBvd,OAAOlU;QAAS6xB,uBAAuBJ,uBAAuB;;UAC5GI,uBAAuBH,qBAAqBxd,OAAOlU;QAAS6xB,uBAAuBH,qBAAqB;;;WAEvGxd;;EAGT8oB,KAAKwB,kBAAkB,UAASx0B,MAAMijB,UAAUtB,UAAU8S;QACpDC,kBAAkB,KAAK1nC,QAAQuzB,eAAe,KAAKvgB,KAAKzZ,SAAS,gBAAgByZ,KAAKlT,SAAS,WAC/F,KAAKi3B,eAAe/jB,KAAK/J,QAAQ,KAAK8wB,wBAAwB/mB,KAAK/J,MAAM+J,KAAKhK,UAAU,KACxF,KAAKquB,qBAAqBrkB,KAAKhK;QAC/B2+B,kBAAkB;WAEf;UACD7F,UAAU,KAAK8F,eAAe50B,MAAMijB,UAAUtB,UAAU8S,SAASC,iBAAiBC;UAElF7F,QAAQ+F;QAAYF,kBAAkB;;UACtC7F,YAAY9uB,QAAQ8uB,QAAQvoC,SAAS;YACnCouC;cACEG,YAAY,KAAKxF,YAAYrM,UAAUtB;UAC3CmT,UAAUzM,aAAayG;UACvBA,UAAU,KAAKpG,WAAWoM,WAAW;;eAEhChG;;MAGT9uB,OAAO8uB;;;EAIXkE,KAAK4B,iBAAiB,UAAS50B,MAAMijB,UAAUtB,UAAU8S,SAASC,iBAAiBC;QAC7EI,oBAAoB,KAAK/nC,QAAQuzB,eAAe;QAChDsU,WAAWE,qBAAqB,KAAKrO,IAAI9gB,MAAMgW;QAC/C6Y,WAAWI;MAAY,KAAKvN,MAAM,KAAKxD,cAAc;;QAErDuL,WAAW,KAAK3I,IAAI9gB,MAAMqV;QAC1BoU,YAAawF,YAAY,KAAKtuC,SAASqf,MAAMyV,UAAU,KAAK90B,SAASqf,MAAMqW,aAAc,KAAKyK,IAAI9gB,MAAM8V;UACtG4J,OAAO,KAAKgK,YAAYrM,UAAUtB;MACtC2D,KAAKwH,SAAS9sB;MACdslB,KAAK0P,WAAW3F,WAAW,KAAKlJ,oBAAoB,KAAK0E,WAAW,KAAK79B,QAAQ2zB,kBAAkB;MACnG2E,KAAK+J,aAAaA;UACdA;QAAY,KAAKhI,OAAOzhB,MAAMsV;;UAC9B6Z;QACFzP,KAAKuP,WAAWA;;MAElB70B,OAAO,KAAK0oB,WAAWpD,MAAM;gBACnBmP,WAAW,KAAK/N,IAAI9gB,MAAMyV;UAChCwM,6BAA6B0D,uBAAqByC,cAAc,KAAK1J,UAAU2J,cAAc,KAAK1J,UAAU2J,mBAAmB,KAAK1J;MACxI,KAAKF,WAAW;MAChB,KAAKC,WAAW;MAChB,KAAKC,gBAAgB;UACjBwN,WAAW,KAAKiD,cAAcrvB,MAAM0V,QAAQ,KAAKtuB,QAAQuzB,eAAe,GAAG,OAAOsH;UAClF6M,oBAAoBG,aAAa,KAAK9N,wBAAwB,KAAKL,IAAI9gB,MAAMiW;QAC/E,KAAK+L,mBAAmBC,wBAAwB;QAChD,KAAKK;YACD,KAAK1D,gBAAgB;UACrB,KAAK8C,MAAM,KAAK9C,eAAe;;QACnC,KAAKF,WAAW0J;QAChB,KAAKzJ,WAAW0J;QAChB,KAAKzJ,gBAAgB0J;eACd,KAAKgH,qBAAqB,KAAK5F,YAAYrM,UAAUtB,WAAWqQ,UAAU;;MAEnF,KAAKhK,sBAAsBH,wBAAwB;MACnD,KAAKvD,WAAW0J,eAAe,KAAK1J;MACpC,KAAKC,WAAW0J,eAAe,KAAK1J;MACpC,KAAKC,gBAAgB0J,oBAAoB,KAAK1J;UAC1C8M,SAAS,KAAKhC,YAAYrM,UAAUtB;MACxC2P,OAAO6D,SAASn1B;MAChBsxB,OAAO17B,YAAYo8B;UACf+C;QACFzD,OAAOuD,WAAWA;;MAEpB70B,OAAO,KAAK0oB,WAAW4I,QAAQ;eACtB,KAAK/qC,SAASqf,MAAMqW;UACzB4Y,YAAYF;QACd,KAAKrN,MAAM,KAAKtxB,OAAO;;UAErBu7B,SAAS,KAAKjC,YAAYrM,UAAUtB;MACxC4P,OAAOpe,MAAMnT;MACbuxB,OAAO6D,QAAQ,KAAKC;QAAeC,UAAU;;MAC7Ct1B,OAAO,KAAK0oB,WAAW6I,QAAQ;;WAE1BvxB;;;;;;EAQTgzB,KAAKhD,gBAAgB,UAASnI;;;QAGxB,KAAKthC,SAASqf,MAAMoX;MAAS,KAAKuY;;QAElCjQ,MAAMkQ,aAAa,KAAKnR,qBAAqB,KAAKruB;YAC9C,KAAKzP;WACRqf,MAAM6Y;aACJ,KAAK0G;UACN,KAAKmC,MAAM,KAAKtxB,OAAO;;QAC3BsvB,OAAO,KAAKC;QACZ,KAAKiB;YACD,KAAKjgC,SAASqf,MAAMyV,WAAW,KAAK+J;UACpC,KAAKkC,MAAMhC,KAAKtvB,OAAO;;;;;;;;YAOvB,KAAKzP,SAASqf,MAAM8V,OAAO,KAAKn1B,SAASqf,MAAMqV,YAAY,KAAK10B,SAASqf,MAAMyV;UAC/E,KAAKyL;;eACF,KAAK4B,WAAWpD,MAAM;WAE1B1f,MAAM+C;QACT2c,OAAO,KAAKC;QACZ,KAAKiB;eACE,KAAKkC,WAAWpD,MAAM;WAE1B1f,MAAM9Y;YACLm2B,WAAW,KAAKjtB,OAAO2rB,WAAW,KAAKA,UAAU6B,cAAc,KAAKA;YACpEt8B,KAAK,KAAK2jC,WAAW;YACrB,KAAK79B,QAAQuzB,eAAe,MAAMiD,eAAet8B,GAAG4F,SAAS,YAAY,KAAKi6B,wBAAwB,KAAKL,IAAI9gB,MAAMkY;iBAC9G,KAAK+N,cAAc,KAAKyD,YAAYrM,UAAUtB,WAAW,GAAG,OAAO;;YAC1E6T,eAAe,KAAKzO;cAClB,KAAKL,IAAI9gB,MAAMiW;mBACR,KAAKqZ,qBAAqB,KAAK5F,YAAYrM,UAAUtB,YAAYz6B,KAAK;;cAC7E,KAAK8F,QAAQuzB,eAAe,KAAKr5B,GAAG4F,SAAS,WAAW,KAAKvG,SAASqf,MAAM9Y,SAAS02B;YACvFt8B,KAAK,KAAK2jC,WAAW;gBACjB,KAAK9D,yBAAyB,KAAKL,IAAI9gB,MAAMiW;cAC7C,KAAKiL;;mBACF,KAAKoO,qBAAqB,KAAK5F,YAAYrM,UAAUtB,YAAYz6B,KAAK;;;eAG1EA;WAEJ0e,MAAMmV;YACLhuB,QAAQ,KAAKA;QACjBu4B,OAAO,KAAKmQ,aAAa1oC,MAAMA;QAC/Bu4B,KAAKoQ;UAASC,SAAS5oC,MAAM4oC;UAAShQ,OAAO54B,MAAM44B;;eAC5CL;WAEJ1f,MAAMkV;WAAUlV,MAAMhY;eAClB,KAAK6nC,aAAa,KAAK1oC;WAE3B6Y,MAAMkZ;WAAYlZ,MAAMmZ;WAAYnZ,MAAMoZ;QAC7CsG,OAAO,KAAKC;QACZD,KAAKv4B,QAAQ,KAAKxG,SAASqf,MAAMkZ,QAAQ,OAAO,KAAKv4B,SAASqf,MAAMmZ;QACpEuG,KAAKsM,MAAM,KAAKrrC,KAAK4zB;QACrB,KAAKqM;eACE,KAAKkC,WAAWpD,MAAM;WAE1B1f,MAAMyV;YACLrlB,QAAQ,KAAKA,OAAOoyB,OAAO,KAAKwN,mCAAmCJ;YACnE3N;cACEA,uBAAuBJ,sBAAsB,MAAM,KAAKU,qBAAqBC;YAC7EP,uBAAuBJ,sBAAsBzxB;;cAC7C6xB,uBAAuBH,oBAAoB;YAC3CG,uBAAuBH,oBAAoB1xB;;;eAE1CoyB;WAEJxiB,MAAMqV;QACTqK,OAAO,KAAKC;QACZ,KAAKiB;QACLlB,KAAK0L,WAAW,KAAKiE,cAAcrvB,MAAMsV,UAAU,MAAM,MAAM2M;eACxD,KAAKa,WAAWpD,MAAM;WAE1B1f,MAAMuV;eACF,KAAKiX,SAAS,OAAOvK;WAEzBjiB,MAAMkY;QACTwH,OAAO,KAAKC;QACZ,KAAKiB;eACE,KAAKqF,cAAcvG,MAAM;WAE7B1f,MAAM8Y;eACF,KAAKkL,WAAW,KAAKrE,aAAa;WAEtC3f,MAAM4Y;eACF,KAAKqX;WAETjwB,MAAMqW;eACF,KAAKoZ;WAETzvB,MAAMiZ;YACL,KAAK7xB,QAAQuzB,eAAe;iBACvB,KAAKuV;;iBAEL,KAAKhP;;;QAId,KAAKA;;;EAITkM,KAAK8C,kBAAkB;QACjBxQ,OAAO,KAAKC;;;QAIZ,KAAK/B;MAAe,KAAKsE,iBAAiB,KAAK9xB,OAAO;;QACtD4Q,OAAO,KAAKikB,WAAW;YAEnB,KAAKtkC;WACRqf,MAAMyV;eACF,KAAK0a,mBAAmBzQ;WAC5B1f,MAAM8V;QACT4J,KAAK1e,OAAOA;eACL,KAAKovB,gBAAgB1Q;;QAE5B,KAAKwB;;;EAITkM,KAAK+C,qBAAqB,UAASzQ;IACjC,KAAKkB;;;IAGLlB,KAAK32B,SAAS,KAAK6+B;;SAGd,KAAK9G,IAAI9gB,MAAM0V;UACd2a,WAAW,KAAKjgC;UAChB,KAAK0wB,IAAI9gB,MAAM2V,UAAU,KAAKmL,IAAI9gB,MAAM0V;QAC1C,KAAKwM,iBAAiBmO,UAAU;;QAEhC,KAAKnP,WAAWmP;;;WAIb,KAAKvN,WAAWpD,MAAM;;EAG/B0N,KAAKgD,kBAAkB,UAAS1Q;IAC9B,KAAKkB;;QAEDhD,cAAc,KAAKA;IACvB8B,KAAK0P,WAAW,KAAKnK,WAAW;QAE5BvF,KAAK0P,SAASloC,SAAS;MACvB,KAAKg7B,iBAAiBxC,KAAK0P,SAASh/B,OAAO;;QAC3CwtB;MACA,KAAKsE,iBAAiBxC,KAAKtvB,OAAO;;QAClC,KAAKhJ,QAAQwzB,eAAe;MAC5B,KAAKsH,iBAAiBxC,KAAKtvB,OAAO;;WAE/B,KAAK0yB,WAAWpD,MAAM;;EAG/B0N,KAAKyC,eAAe,UAAS1oC;QACvBu4B,OAAO,KAAKC;IAChBD,KAAKv4B,QAAQA;IACbu4B,KAAKsM,MAAM,KAAK1R,MAAM3rB,MAAM,KAAKyB,OAAO,KAAKC;QACzCqvB,KAAKsM,IAAIrzB,WAAW+mB,KAAKsM,IAAIpqC,SAAS,OAAO;MAAO89B,KAAK4Q,SAAS5Q,KAAKsM,IAAIr9B,MAAM,IAAI,GAAGtE,QAAQ,MAAM;;IAC1G,KAAKu2B;WACE,KAAKkC,WAAWpD,MAAM;;EAG/B0N,KAAKjI,uBAAuB;IAC1B,KAAK1D,OAAOzhB,MAAMyV;QACd9sB,MAAM,KAAK43B;IACf,KAAKkB,OAAOzhB,MAAM0V;WACX/sB;;EAGTykC,KAAK4C,qCAAqC,UAASJ;QAC7CvS,WAAW,KAAKjtB,OAAO2rB,WAAW,KAAKA,UAAUpzB,KAAKgkC,qBAAqB,KAAKvlC,QAAQuzB,eAAe;QACvG,KAAKvzB,QAAQuzB,eAAe;MAC9B,KAAKiG;UAED2P,gBAAgB,KAAKngC,OAAOogC,gBAAgB,KAAKzU;UACjDqQ,eAAeZ,QAAQ,MAAMiF,cAAc;UAC3CxO,6BAA6B0D,uBAAqByC,cAAc,KAAK1J,UAAU2J,cAAc,KAAK1J,UAAU+R;MAChH,KAAKhS,WAAW;MAChB,KAAKC,WAAW;;aAET,KAAKh+B,SAASqf,MAAM0V;QACzB8V,QAAQA,QAAQ,QAAQ,KAAK/J,OAAOzhB,MAAM2V;YACtCgX,sBAAsB,KAAKrL,mBAAmBthB,MAAM0V,QAAQ;UAC9D+a,cAAc;;mBAEL,KAAK9vC,SAASqf,MAAMoW;UAC7Bsa,cAAc,KAAKtgC;UACnBg8B,SAAS/sC,KAAK,KAAKsxC,eAAe,KAAKpE;cACnC,KAAK5rC,SAASqf,MAAM2V;YAAS,KAAK+L,MAAM,KAAKtxB,OAAO;;;;UAGxDg8B,SAAS/sC,KAAK,KAAKuoC,iBAAiB,OAAO3F,wBAAwB,KAAK0O;;;UAGxEC,cAAc,KAAKxgC,OAAOygC,cAAc,KAAK9U;MACjD,KAAK0F,OAAOzhB,MAAM0V;UAEdka,eAAe,KAAKzO,wBAAwB,KAAKL,IAAI9gB,MAAMiW;QAC7D,KAAK+L,mBAAmBC,wBAAwB;QAChD,KAAKK;QACL,KAAK5D,WAAW0J;QAChB,KAAKzJ,WAAW0J;eACT,KAAKyI,oBAAoBzT,UAAUtB,UAAUqQ;;WAGjDA,SAASxqC,UAAU6uC;QAAe,KAAKvP,WAAW,KAAKhD;;UACxDwS;QAAe,KAAKxP,WAAWwP;;MACnC,KAAKtO,sBAAsBH,wBAAwB;MACnD,KAAKvD,WAAW0J,eAAe,KAAK1J;MACpC,KAAKC,WAAW0J,eAAe,KAAK1J;UAEhCyN,SAASxqC,SAAS;QACpB+G,MAAM,KAAK+gC,YAAY6G,eAAeC;QACtC7nC,IAAI+kC,cAActB;QAClB,KAAK2E,aAAapoC,KAAK,sBAAsBioC,aAAaC;;QAE1DloC,MAAMyjC,SAAS;;;MAGjBzjC,MAAM,KAAKw8B;;QAGT,KAAK/9B,QAAQs0B;UACXsV,MAAM,KAAKtH,YAAYrM,UAAUtB;MACrCiV,IAAIvO,aAAa95B;aACV,KAAKm6B,WAAWkO,KAAK;;aAErBroC;;;EAIXykC,KAAKuD,iBAAiB,UAASM;WACtBA;;EAGT7D,KAAK0D,sBAAsB,UAASzT,UAAUtB,UAAUqQ;WAC/C,KAAKkD,qBAAqB,KAAK5F,YAAYrM,UAAUtB,WAAWqQ;;;;;;;MASrE8E;EAEJ9D,KAAK6C,WAAW;QACV,KAAKrS;MAAe,KAAKsE,iBAAiB,KAAK9xB,OAAO;;QACtDsvB,OAAO,KAAKC;QACZ3e,OAAO,KAAKikB,WAAW;QACvB,KAAK79B,QAAQuzB,eAAe,KAAK,KAAKmG,IAAI9gB,MAAM8V;MAClD4J,KAAK1e,OAAOA;UACR4c,cAAc,KAAKA;MACvB8B,KAAK0P,WAAW,KAAKnK,WAAW;UAC5BvF,KAAK0P,SAASloC,SAAS;QACvB,KAAKg7B,iBAAiBxC,KAAK0P,SAASh/B,OAAO;;UAC3CwtB;QACA,KAAKsE,iBAAiBxC,KAAKtvB,OAAO;;WACjC,KAAK+vB;QACN,KAAK+B,iBAAiBxC,KAAKtvB,OAAO;;aAC/B,KAAK0yB,WAAWpD,MAAM;;QAE3BrC,WAAW,KAAKjtB,OAAO2rB,WAAW,KAAKA,UAAUoV,WAAW,KAAKxwC,SAASqf,MAAMiZ;IACpFyG,KAAK6P,SAAS,KAAKX,gBAAgB,KAAKxE,iBAAiB/M,UAAUtB,UAAU;QACzEoV,YAAYzR,KAAK6P,OAAO5uC,SAAS;MACnC,KAAK+gC,MAAMrE,UAAU;;QAEnB,KAAKyD,IAAI9gB,MAAMyV;MAAWiK,KAAK1vB,YAAY,KAAKq/B,cAAcrvB,MAAM0V,QAAQ,KAAKtuB,QAAQuzB,eAAe,GAAG;;MACxG+E,KAAK1vB,YAAYkhC;;WACjB,KAAKpO,WAAWpD,MAAM;;;EAK/B0N,KAAKgE,uBAAuB,UAAStX;QAC/B4V,WAAW5V,IAAI4V;QAEf3C,OAAO,KAAKpN;QACZ,KAAKh/B,SAASqf,MAAMmW;WACjBuZ;QACH,KAAKxN,iBAAiB,KAAK9xB,OAAO;;MAEpC28B,KAAK5lC;QACH6kC,KAAK,KAAK7kC;QACVkqC,QAAQ;;;MAGVtE,KAAK5lC;QACH6kC,KAAK,KAAK1R,MAAM3rB,MAAM,KAAKyB,OAAO,KAAKC,KAAKhG,QAAQ,UAAU;QAC9DgnC,QAAQ,KAAKlqC;;;IAGjB,KAAKy5B;IACLmM,KAAKuE,OAAO,KAAK3wC,SAASqf,MAAMqW;WACzB,KAAKyM,WAAWiK,MAAM;;EAG/BK,KAAKqC,gBAAgB,UAAS3V;QACvBA,aAAa,GAAIA;QAClB4V,WAAW5V,IAAI4V;QAAeA,kBAAkB,GAAIA,WAAW;QAE/DhQ,OAAO,KAAKC;IAChB,KAAKiB;IACLlB,KAAKgO;QACD6D,SAAS,KAAKH;MAAsB1B,UAAUA;;IAClDhQ,KAAK8R,UAAUD;YACPA,OAAOD;UACT,KAAK3wC,SAASqf,MAAMoV;QAAO,KAAKsM,MAAM,KAAK7xB,KAAK;;MACpD,KAAK4xB,OAAOzhB,MAAMsW;MAClBoJ,KAAKgO,YAAYruC,KAAK,KAAKkhC;MAC3B,KAAKkB,OAAOzhB,MAAMwV;MAClBkK,KAAK8R,OAAOnyC,KAAKkyC,SAAS,KAAKH;QAAsB1B,UAAUA;;;IAEjE,KAAK9O;WACE,KAAKkC,WAAWpD,MAAM;;EAG/B0N,KAAKqE,cAAc,UAAS5mB;YAClBA,KAAK4e,YAAY5e,KAAKxiB,IAAI1H,SAAS,gBAAgBkqB,KAAKxiB,IAAInB,SAAS,YAC1E,KAAKvG,SAASqf,MAAM9Y,QAAQ,KAAKvG,SAASqf,MAAMkV,OAAO,KAAKv0B,SAASqf,MAAMhY,UAAU,KAAKrH,SAASqf,MAAMqV,YAAY,KAAK10B,KAAK4zB,WAAY,KAAKntB,QAAQuzB,eAAe,KAAK,KAAKh6B,SAASqf,MAAMmX,UAChMsC,UAAUp5B,KAAK,KAAKi6B,MAAM3rB,MAAM,KAAKwvB,YAAY,KAAK/tB;;;EAK3Dg9B,KAAKZ,WAAW,UAASkF,WAAWzP;QAC9BvC,OAAO,KAAKC,aAAa6L,QAAQ,MAAM8B;IAC3C5N,KAAKwL;IACL,KAAKtK;YACG,KAAKE,IAAI9gB,MAAMwV;WAChBgW;QACH,KAAK/J,OAAOzhB,MAAM2V;YACd,KAAKvuB,QAAQuzB,eAAe,KAAK,KAAK2G,mBAAmBthB,MAAMwV;;;;QAC5DgW,QAAQ;;UAEb3gB,OAAO,KAAK8mB,cAAcD,WAAWzP;WACpCyP;QAAa,KAAKrE,eAAexiB,MAAMyiB,UAAUrL;;MACtDvC,KAAKwL,WAAW7rC,KAAKwrB;;WAEhB,KAAKiY,WAAWpD,MAAMgS,YAAY,kBAAkB;;EAG7DtE,KAAKuE,gBAAgB,UAASD,WAAWzP;QACnCpX,OAAO,KAAK8U,aAAaiK,aAAa7D,SAAS1I,UAAUtB;QACzD,KAAK30B,QAAQuzB,eAAe,KAAK,KAAKmG,IAAI9gB,MAAMoW;UAC9Csb;QACF7mB,KAAKyb,WAAW,KAAKrB,WAAW;YAC5B,KAAKtkC,SAASqf,MAAM2V;UACtB,KAAK+L,MAAM,KAAKtxB,OAAO;;eAElB,KAAK0yB,WAAWjY,MAAM;;;UAG3B,KAAKlqB,SAASqf,MAAMyV,UAAUwM;YAC5BA,uBAAuBJ,sBAAsB;UAC/CI,uBAAuBJ,sBAAsB,KAAKzxB;;YAEhD6xB,uBAAuBH,oBAAoB;UAC7CG,uBAAuBH,oBAAoB,KAAK1xB;;;;MAIpDya,KAAKyb,WAAW,KAAKsB,iBAAiB,OAAO3F;;UAEzC,KAAKthC,SAASqf,MAAM2V,SAASsM,0BAA0BA,uBAAuBL,gBAAgB;QAChGK,uBAAuBL,gBAAgB,KAAKxxB;;;aAGvC,KAAK0yB,WAAWjY,MAAM;;QAE3B,KAAKzjB,QAAQuzB,eAAe;MAC9B9P,KAAKye,SAAS;MACdze,KAAK0iB,YAAY;UACbmE,aAAazP;QACf5E,WAAW,KAAKjtB;QAChB2rB,WAAW,KAAKA;;WAEb2V;QACD9H,cAAc,KAAK9I,IAAI9gB,MAAMmX;;;QAE/ByG,cAAc,KAAKA;IACvB,KAAKiM,kBAAkBhf;SAClB6mB,cAAc9T,eAAe,KAAKx2B,QAAQuzB,eAAe,MAAMiP,eAAe,KAAK6H,YAAY5mB;MAClGkb,UAAU;MACV6D,cAAc,KAAKxiC,QAAQuzB,eAAe,KAAK,KAAKmG,IAAI9gB,MAAMmX;MAC9D,KAAK0S,kBAAkBhf,MAAMoX;;MAE7B8D,UAAU;;IAEZ,KAAK6L,mBAAmB/mB,MAAM6mB,WAAW9H,aAAa7D,SAAS1I,UAAUtB,UAAUkG,wBAAwBrE;WACpG,KAAKkF,WAAWjY,MAAM;;EAG/BuiB,KAAKwE,qBAAqB,UAAS/mB,MAAM6mB,WAAW9H,aAAa7D,SAAS1I,UAAUtB,UAAUkG,wBAAwBrE;SAC/GgM,eAAe7D,YAAY,KAAKplC,SAASqf,MAAM6V;MAChD,KAAKqL;;QAEL,KAAKJ,IAAI9gB,MAAM6V;MACjBhL,KAAK1jB,QAAQuqC,YAAY,KAAK1E,kBAAkB,KAAK58B,OAAO,KAAK2rB,YAAY,KAAK6L,iBAAiB,OAAO3F;MAC1GpX,KAAKmY,OAAO;eACH,KAAK57B,QAAQuzB,eAAe,KAAK,KAAKh6B,SAASqf,MAAMyV;UAC1Dic;QAAa,KAAKxQ;;MACtBrW,KAAKmY,OAAO;MACZnY,KAAKye,SAAS;MACdze,KAAK1jB,QAAQ,KAAK6iC,YAAYJ,aAAa7D;gBACjC2L,cAAc9T,eACf,KAAKx2B,QAAQuzB,eAAe,MAAM9P,KAAK4e,YAAY5e,KAAKxiB,IAAI1H,SAAS,iBACpEkqB,KAAKxiB,IAAInB,SAAS,SAAS2jB,KAAKxiB,IAAInB,SAAS,WAC7C,KAAKvG,SAASqf,MAAM2V,SAAS,KAAKh1B,SAASqf,MAAMwV,UAAU,KAAK70B,SAASqf,MAAMuW;UACrFqT,eAAe7D;QAAW,KAAK7E;;MACnCrW,KAAKmY,OAAOnY,KAAKxiB,IAAInB;MACrB,KAAK2iC,kBAAkBhf;MACvBA,KAAK1jB,QAAQ,KAAK6iC,YAAY;UAC1B6H,aAAahnB,KAAKmY,SAAS,QAAQ,IAAI;UACvCnY,KAAK1jB,MAAMuhC,OAAO9mC,WAAWiwC;YAC3BzhC,QAAQya,KAAK1jB,MAAMiJ;YACnBya,KAAKmY,SAAS;UACd,KAAKd,iBAAiB9xB,OAAO;;UAE7B,KAAK8xB,iBAAiB9xB,OAAO;;;YAE7Bya,KAAKmY,SAAS,SAASnY,KAAK1jB,MAAMuhC,OAAO,GAAG/nC,SAAS;UACrD,KAAKuhC,iBAAiBrX,KAAK1jB,MAAMuhC,OAAO,GAAGt4B,OAAO;;;eAE/C,KAAKhJ,QAAQuzB,eAAe,MAAM9P,KAAK4e,YAAY5e,KAAKxiB,IAAI1H,SAAS;UAC1EipC,eAAe7D;QAAW,KAAK7E;;MACnC,KAAK2J,gBAAgBhgB,KAAKxiB;UACtBwiB,KAAKxiB,IAAInB,SAAS,YAAY,KAAK03B;QACnC,KAAKA,gBAAgBvB;;MACzBxS,KAAKmY,OAAO;UACR0O;QACF7mB,KAAK1jB,QAAQ,KAAK6lC,kBAAkB3P,UAAUtB,UAAUlR,KAAKxiB;iBACpD,KAAK1H,SAASqf,MAAMuW,MAAM0L;YAC/BA,uBAAuBN,kBAAkB;UACzCM,uBAAuBN,kBAAkB,KAAKvxB;;QAClDya,KAAK1jB,QAAQ,KAAK6lC,kBAAkB3P,UAAUtB,UAAUlR,KAAKxiB;;QAE7DwiB,KAAK1jB,QAAQ0jB,KAAKxiB;;MAEpBwiB,KAAK0iB,YAAY;;MACV,KAAKrM;;;EAGhBkM,KAAKvD,oBAAoB,UAAShf;QAC5B,KAAKzjB,QAAQuzB,eAAe;UAC1B,KAAKmG,IAAI9gB,MAAMqV;QACjBxK,KAAK4e,WAAW;QAChB5e,KAAKxiB,MAAM,KAAKu/B;QAChB,KAAKnG,OAAOzhB,MAAMsV;eACXzK,KAAKxiB;;QAEZwiB,KAAK4e,WAAW;;;WAGb5e,KAAKxiB,MAAM,KAAK1H,SAASqf,MAAMkV,OAAO,KAAKv0B,SAASqf,MAAMhY,SAAS,KAAKoiC,kBAAkB,KAAKnF,WAAW,KAAK79B,QAAQ2zB,kBAAkB;;;EAKlJqS,KAAKjF,eAAe,UAASzI;IAC3BA,KAAKp+B,KAAK;QACN,KAAK8F,QAAQuzB,eAAe;MAAK+E,KAAK7C,YAAY6C,KAAK+C,aAAa;;QACpE,KAAKr7B,QAAQuzB,eAAe;MAAK+E,KAAK9C,QAAQ;;;;EAKpDwQ,KAAKpD,cAAc,UAASJ,aAAa7D,SAASvG;QAC5CE,OAAO,KAAKC,aAAayI,cAAc,KAAK1J,UAAU2J,cAAc,KAAK1J,UAAU2J,mBAAmB,KAAK1J;IAE/G,KAAKuJ,aAAazI;QACd,KAAKt4B,QAAQuzB,eAAe;MAC5B+E,KAAK7C,YAAY+M;;QACjB,KAAKxiC,QAAQuzB,eAAe;MAC5B+E,KAAK9C,UAAUmJ;;IAEnB,KAAKrH,WAAW;IAChB,KAAKC,WAAW;IAChB,KAAKC,gBAAgB;IACrB,KAAKK,WAAWsJ,cAAcxC,SAASrG,KAAK7C,aAAaH,eAAe8C,mBAAmB7C,qBAAqB;IAEhH,KAAK8E,OAAOzhB,MAAMyV;IAClBiK,KAAKgJ,SAAS,KAAKC,iBAAiB3oB,MAAM0V,QAAQ,OAAO,KAAKtuB,QAAQuzB,eAAe;IACrF,KAAK2H;IACL,KAAKmG,kBAAkB/I,MAAM,OAAO;IAEpC,KAAKhB,WAAW0J;IAChB,KAAKzJ,WAAW0J;IAChB,KAAKzJ,gBAAgB0J;WACd,KAAKxF,WAAWpD,MAAM;;;EAK/B0N,KAAKkC,uBAAuB,UAAS5P,MAAMgJ,QAAQ3C;QAC7CqC,cAAc,KAAK1J,UAAU2J,cAAc,KAAK1J,UAAU2J,mBAAmB,KAAK1J;IAEtF,KAAKK,WAAWsJ,cAAcxC,SAAS,SAASvJ;IAChD,KAAK2L,aAAazI;QACd,KAAKt4B,QAAQuzB,eAAe;MAAK+E,KAAK9C,UAAUmJ;;IAEpD,KAAKrH,WAAW;IAChB,KAAKC,WAAW;IAChB,KAAKC,gBAAgB;IAErBc,KAAKgJ,SAAS,KAAKyD,iBAAiBzD,QAAQ;IAC5C,KAAKD,kBAAkB/I,MAAM,MAAM;IAEnC,KAAKhB,WAAW0J;IAChB,KAAKzJ,WAAW0J;IAChB,KAAKzJ,gBAAgB0J;WACd,KAAKxF,WAAWpD,MAAM;;;EAK/B0N,KAAK3E,oBAAoB,UAAS/I,MAAMoS,iBAAiBC;QACnDC,eAAeF,mBAAmB,KAAKnxC,SAASqf,MAAMuV;QACtDsT,YAAY,KAAKvjB,QAAQ2sB,YAAY;QAErCD;MACFtS,KAAK78B,OAAO,KAAK+kC;MACjBlI,KAAK+C,aAAa;MAClB,KAAKyP,YAAYxS,MAAM;;UAEnByS,YAAY,KAAK/qC,QAAQuzB,eAAe,MAAM,KAAKyX,kBAAkB1S,KAAKgJ;WACzEG,aAAasJ;QAChBF,YAAY,KAAKzT,gBAAgB,KAAKnuB;;;;YAIlC4hC,aAAaE;UACb,KAAKjQ,iBAAiBxC,KAAKtvB,OAAO;;;;;UAIpCiiC,YAAY,KAAKxT;MACrB,KAAKA;UACDoT;QAAa,KAAK3sB,SAAS;;;;MAI/B,KAAK4sB,YAAYxS,OAAOmJ,cAAcoJ,cAAcH,oBAAoBC,YAAY,KAAKK,kBAAkB1S,KAAKgJ;;UAE5G,KAAKpjB,UAAUoa,KAAKp+B;QAAM,KAAKwkC,UAAUpG,KAAKp+B,IAAI67B;;MACtDuC,KAAK78B,OAAO,KAAK4hC,WAAW,OAAOllC,WAAW0yC,cAAcpJ;MAC5DnJ,KAAK+C,aAAa;MAClB,KAAKI,uBAAuBnD,KAAK78B,KAAKA;MACtC,KAAKg8B,SAASwT;;IAEhB,KAAK1L;;EAGPyG,KAAKgF,oBAAoB,UAAS1J;aACvB/mC,IAAI,GAAGiO,OAAO84B,QAAQ/mC,IAAIiO,KAAKhO,QAAQD,KAAK;UAE/ColC,QAAQn3B,KAAKjO;UAEbolC,MAAMpmC,SAAS;eAAuB;;;WAErC;;;;EAMTysC,KAAK8E,cAAc,UAASxS,MAAM4S;QAC5BC;aACK5wC,IAAI,GAAGiO,OAAO8vB,KAAKgJ,QAAQ/mC,IAAIiO,KAAKhO,QAAQD,KAAK;UAEpDolC,QAAQn3B,KAAKjO;MAEjB,KAAKmkC,UAAUiB,OAAOhK,UAAUuV,kBAAkB,OAAOC;;;;;;;;EAU7DnF,KAAKiC,gBAAgB,UAAS5C,OAAOE,oBAAoBD,YAAYzK;QAC/D2K,WAAWpB,QAAQ;YACf,KAAK1K,IAAI2L;WACVjB;QACH,KAAK/J,OAAOzhB,MAAM2V;YACdgX,sBAAsB,KAAKrL,mBAAmBmL;;;;QAC3CjB,QAAQ;;UAEbH,WAAY;UACZqB,cAAc,KAAK/rC,SAASqf,MAAM2V;QAClC0V,MAAM;iBACD,KAAK1qC,SAASqf,MAAMoW;QAC3BiV,MAAM,KAAKiB,YAAYrK;YACnBA,0BAA0B,KAAKthC,SAASqf,MAAM2V,SAASsM,uBAAuBL,gBAAgB;UAC9FK,uBAAuBL,gBAAgB,KAAKxxB;;;QAEhDi7B,MAAM,KAAKzD,iBAAiB,OAAO3F;;MAErC2K,KAAKvtC,KAAKgsC;;WAELuB;;EAGTQ,KAAKvC,kBAAkB,UAAS/Q;QAC1B1pB,QAAQ0pB,IAAI1pB;QACZC,MAAMypB,IAAIzpB;QACVnJ,OAAO4yB,IAAI5yB;QAEX,KAAKm4B,eAAen4B,SAAS;MAC7B,KAAKg7B,iBAAiB9xB,OAAO;;QAC7B,KAAKkvB,WAAWp4B,SAAS;MACzB,KAAKg7B,iBAAiB9xB,OAAO;;QAC7B,KAAKsjB,SAASrzB,KAAK6G;MACnB,KAAKw6B,MAAMtxB,OAAQ,yBAAyBlJ,OAAO;;QACnD,KAAKE,QAAQuzB,cAAc,KAC7B,KAAKL,MAAM3rB,MAAMyB,OAAOC,KAAKxQ,QAAQ,WAAW;;;QAC9CgqB,KAAK,KAAKvE,SAAS,KAAKoY,sBAAsB,KAAKnK;QACnD1J,GAAGxpB,KAAK6G;WACL,KAAKo4B,WAAWp4B,SAAS;QAC1B,KAAKg7B,iBAAiB9xB,OAAO;;MACjC,KAAK8xB,iBAAiB9xB,OAAQ,kBAAkBlJ,OAAO;;;;;;EAQ3DkmC,KAAKnI,aAAa,UAASuN,SAAStG;QAC9BxM,OAAO,KAAKC;QACZ,KAAKh/B,SAASqf,MAAM9Y;MACtBw4B,KAAKx4B,OAAO,KAAKC;eACR,KAAKxG,KAAK4zB;MACnBmL,KAAKx4B,OAAO,KAAKvG,KAAK4zB;;;;;WAMjBmL,KAAKx4B,SAAS,WAAWw4B,KAAKx4B,SAAS,gBACvC,KAAKi3B,eAAe,KAAKD,eAAe,KAAK,KAAK5D,MAAM3hB,WAAW,KAAKulB,kBAAkB;QAC7F,KAAKE,QAAQtV;;;MAGf,KAAKoY;;IAEP,KAAKN,OAAO4R;IACZ,KAAK1P,WAAWpD,MAAM;SACjB8S;MACH,KAAK3H,gBAAgBnL;UACjBA,KAAKx4B,SAAS,YAAY,KAAK03B;QAC/B,KAAKA,gBAAgBc,KAAKtvB;;;WAEzBsvB;;;EAKT0N,KAAKQ,aAAa,UAASH;SACpB,KAAK/O;MAAY,KAAKA,WAAW,KAAKtuB;;QAEvCsvB,OAAO,KAAKC;IAChB,KAAKiB;QACD,KAAKjgC,SAASqf,MAAM4V,QAAQ,KAAKuL,wBAAyB,KAAKxgC,SAASqf,MAAMmX,SAAS,KAAKx2B,KAAK8zB;MACnGiL,KAAK+S,WAAW;MAChB/S,KAAK4G,WAAW;;MAEhB5G,KAAK+S,WAAW,KAAK3R,IAAI9gB,MAAMmX;MAC/BuI,KAAK4G,WAAW,KAAKsB,iBAAiB6F;;WAEjC,KAAK3K,WAAWpD,MAAM;;EAG/B0N,KAAKuB,aAAa;SACX,KAAKhQ;MAAY,KAAKA,WAAW,KAAKvuB;;QAEvCsvB,OAAO,KAAKC;IAChB,KAAKiB;IACLlB,KAAK4G,WAAW,KAAK4H,gBAAgB,MAAM;WACpC,KAAKpL,WAAWpD,MAAM;;MAG3BgT,OAAOtV,OAAO9wB;;;;;;EAQlBomC,KAAKhR,QAAQ,UAAS7xB,KAAKvN;QACrBsG,MAAM+pC,YAAY,KAAKrY,OAAOzqB;IAClCvN,WAAW,OAAOsG,IAAI0gB,OAAO,MAAM1gB,IAAIuxB,SAAS;QAC5CrY,UAAU8wB,YAAYtwC;IAC1Bwf,IAAIjS,MAAMA;IAAKiS,IAAIlZ,MAAMA;IAAKkZ,IAAI+wB,WAAW,KAAKhjC;UAC5CiS;;EAGR4wB,KAAKxQ,mBAAmBwQ,KAAKhR;EAE7BgR,KAAK3U,cAAc;QACb,KAAK32B,QAAQg0B;iBACJnB,SAAS,KAAK6D,SAAS,KAAKjuB,MAAM,KAAKguB;;;MAIlDiV,OAAO1V,OAAO9wB;MAEdymC,QAAQ,eAAehT;IACzB,KAAKA,QAAQA;;IAEb,KAAKiT;;IAEL,KAAKC;;IAEL,KAAKC;;;EAKPJ,KAAK7T,aAAa,UAASc;IACzB,KAAKf,WAAW3/B,SAAS0zC,MAAMhT;;EAGjC+S,KAAKnM,YAAY;IACf,KAAK3H,WAAWlW;;;;;EAMlBgqB,KAAK7S,6BAA6B,UAASkT;WACjCA,MAAMpT,QAAQ3D,mBAAoB,KAAKmC,YAAa4U,MAAMpT,QAAQ5D;;EAG5E2W,KAAK3F,cAAc,UAASjmC,MAAM+lC,aAAap9B;QACzCujC,aAAa;QACbnG,gBAAgBjQ;UACdmW,QAAQ,KAAKjT;MACjBkT,aAAaD,MAAMF,QAAQpzC,QAAQqH,SAAS,KAAKisC,MAAMD,UAAUrzC,QAAQqH,SAAS,KAAKisC,MAAMH,IAAInzC,QAAQqH,SAAS;MAClHisC,MAAMF,QAAQ5zC,KAAK6H;UACf,KAAKq3B,YAAa4U,MAAMpT,QAAQ5D;eACzB,KAAK2C,iBAAiB53B;;eACxB+lC,gBAAgB/P;UACrBmW,UAAU,KAAKnT;MACnBmT,QAAQJ,QAAQ5zC,KAAK6H;eACZ+lC,gBAAgBhQ;UACrBqW,UAAU,KAAKpT;UACf,KAAKT;QACL2T,aAAaE,QAAQL,QAAQpzC,QAAQqH,SAAS;;QAE9CksC,aAAaE,QAAQL,QAAQpzC,QAAQqH,SAAS,KAAKosC,QAAQN,IAAInzC,QAAQqH,SAAS;;MACpFosC,QAAQJ,UAAU7zC,KAAK6H;;eAEdvF,IAAI,KAAKq9B,WAAWp9B,SAAS,GAAGD,KAAK,KAAKA;YAC7C4xC,UAAU,KAAKvU,WAAWr9B;YAC1B4xC,QAAQN,QAAQpzC,QAAQqH,SAAS,OAAQqsC,QAAQxT,QAAQtD,sBAAuB8W,QAAQN,QAAQ,OAAO/rC,UACtG,KAAK+4B,2BAA2BsT,YAAYA,QAAQL,UAAUrzC,QAAQqH,SAAS;UAClFksC,aAAa;;;QAGfG,QAAQP,IAAI3zC,KAAK6H;YACb,KAAKq3B,YAAagV,QAAQxT,QAAQ5D;iBAC3B,KAAK2C,iBAAiB53B;;YAC7BqsC,QAAQxT,QAAQ1D;;;;;QAGpB+W;MAAc,KAAKlR,iBAAiBryB,KAAM,iBAAiB3I,OAAO;;;EAGxE4rC,KAAK/H,mBAAmB,UAASzpC;;QAE3B,KAAK09B,WAAW,GAAGiU,QAAQpzC,QAAQyB,GAAG4F,WAAW,KACjD,KAAK83B,WAAW,GAAGgU,IAAInzC,QAAQyB,GAAG4F,WAAW;MAC/C,KAAK43B,iBAAiBx9B,GAAG4F,QAAQ5F;;;EAIrCwxC,KAAK5S,eAAe;WACX,KAAKlB,WAAW,KAAKA,WAAWp9B,SAAS;;EAGlDkxC,KAAKhT,kBAAkB;aACZn+B,IAAI,KAAKq9B,WAAWp9B,SAAS,KAAID;UACpCwxC,QAAQ,KAAKnU,WAAWr9B;UACxBwxC,MAAMpT,QAAQ1D;eAAoB8W;;;;;EAK1CL,KAAK9S,mBAAmB;aACbr+B,IAAI,KAAKq9B,WAAWp9B,SAAS,KAAID;UACpCwxC,QAAQ,KAAKnU,WAAWr9B;UACxBwxC,MAAMpT,QAAQ1D,eAAe8W,MAAMpT,QAAQvD;eAAuB2W;;;;MAItEK,OAAO,cAAclT,QAAQzwB,KAAKjH;IACpC,KAAKjI,OAAO;IACZ,KAAKyP,QAAQP;IACb,KAAKQ,MAAM;QACPiwB,OAAOl5B,QAAQg0B;MACf,KAAKxyB,UAAUwxB,eAAekG,QAAQ13B;;QACtC03B,OAAOl5B,QAAQq0B;MACf,KAAKpB,aAAaiG,OAAOl5B,QAAQq0B;;QACjC6E,OAAOl5B,QAAQm0B;MACf,KAAKW,SAASrsB,KAAK;;;;MAKrB4jC,OAAOrW,OAAO9wB;EAElBmnC,KAAK9T,YAAY;eACJ6T,KAAK,MAAM,KAAKpjC,OAAO,KAAK2rB;;EAGzC0X,KAAK/J,cAAc,UAAS75B,KAAKjH;eACpB4qC,KAAK,MAAM3jC,KAAKjH;;;EAK7B,sBAAsB82B,MAAM/+B,MAAMkP,KAAKjH;IACrC82B,KAAK/+B,OAAOA;IACZ++B,KAAKrvB,MAAMR;QACP,KAAKzI,QAAQg0B;MACbsE,KAAK92B,IAAIyH,MAAMzH;;QACf,KAAKxB,QAAQm0B;MACbmE,KAAKxD,MAAM,KAAKrsB;;WACb6vB;;EAGT+T,KAAK3Q,aAAa,UAASpD,MAAM/+B;WACxBowC,aAAalyC,KAAK,MAAM6gC,MAAM/+B,MAAM,KAAKw9B,YAAY,KAAKH;;;EAKnEyV,KAAK1C,eAAe,UAASrR,MAAM/+B,MAAMkP,KAAKjH;WACrCmoC,aAAalyC,KAAK,MAAM6gC,MAAM/+B,MAAMkP,KAAKjH;;;MAK9C8qC,aAAa,oBAAoBjrC,OAAOkrC,QAAQC,eAAeC,UAAUhX;IAC3E,KAAKp0B,QAAQA;IACb,KAAKkrC,WAAWA;IAChB,KAAKC,kBAAkBA;IACvB,KAAKC,WAAWA;IAChB,KAAKhX,cAAcA;;MAGjBiX;IACFC,YAAYL,WAAW,KAAK;IAC5BM,YAAYN,WAAW,KAAK;IAC5BO,YAAYP,WAAW,MAAM;IAC7BQ,YAAYR,WAAW,KAAK;IAC5BS,YAAYT,WAAW,KAAK;IAC5BU,YAAYV,WAAW,KAAK,MAAM,MAAM,UAAUtkB;aAAYA,EAAEilB;;IAChEC,YAAYZ,WAAW,YAAY;IACnCa,YAAYb,WAAW,YAAY;IACnCc,gBAAgBd,WAAW,YAAY,MAAM,OAAO,MAAM;IAC1De,WAAWf,WAAW,YAAY,OAAO,OAAO,MAAM;;MAGpDgB,OAAOtX,OAAO9wB;EAElBooC,KAAKrW,iBAAiB;YACZyV,QAAQC;;EAGlBW,KAAKC,eAAe,UAASC;QACvB50C,SAAS,KAAK60C;QACd70C,WAAW8zC,QAAQS,UAAUv0C,WAAW8zC,QAAQQ;aACzC;;QACPM,aAAa50B,MAAM6V,UAAU71B,WAAW8zC,QAAQC,UAAU/zC,WAAW8zC,QAAQE;cACrEh0C,OAAO2zC;;;;;QAKfiB,aAAa50B,MAAMoY,WAAWwc,aAAa50B,MAAM9Y,QAAQ,KAAKo3B;aACvD7E,UAAUp5B,KAAK,KAAKi6B,MAAM3rB,MAAM,KAAKwvB,YAAY,KAAK/tB;;QAC7DwkC,aAAa50B,MAAM+X,SAAS6c,aAAa50B,MAAM4V,QAAQgf,aAAa50B,MAAMoV,OAAOwf,aAAa50B,MAAM0V,UAAUkf,aAAa50B,MAAMiW;aAC1H;;QACP2e,aAAa50B,MAAMuV;aACZv1B,WAAW8zC,QAAQC;;QAC1Ba,aAAa50B,MAAMwY,QAAQoc,aAAa50B,MAAMyY,UAAUmc,aAAa50B,MAAM9Y;aACpE;;YACH,KAAKo3B;;EAGfoW,KAAKI,qBAAqB;aACfnzC,IAAI,KAAKy8B,QAAQx8B,SAAS,GAAGD,KAAK,GAAGA;UACxCy8B,UAAU,KAAKA,QAAQz8B;UACvBy8B,QAAQ31B,UAAU;eACX21B,QAAQvB;;;WAEd;;EAGT6X,KAAK3f,gBAAgB,UAAS6f;QACxBpN,QAAQ7mC,OAAO,KAAKA;QACpBA,KAAK4zB,WAAWqgB,aAAa50B,MAAM8V;MACnC,KAAKwI,cAAc;eACdkJ,SAAS7mC,KAAKo0B;MACnByS,OAAO3oC,KAAK,MAAM+1C;;MAElB,KAAKtW,cAAc39B,KAAK6zB;;;;EAK9BxU,MAAM0V,OAAOX,gBAAgB/U,MAAMwV,OAAOT,gBAAgB;QACpD,KAAKqJ,QAAQx8B,WAAW;MAC1B,KAAK08B,cAAc;;;QAGjBjzB,MAAM,KAAK+yB,QAAQtV;QACnBzd,QAAQyoC,QAAQC,UAAU,KAAKc,aAAapsC,UAAU;MACxD4C,MAAM,KAAK+yB,QAAQtV;;IAErB,KAAKwV,eAAejzB,IAAIsoC;;EAG1B3zB,MAAMuV,OAAOR,gBAAgB,UAAS6f;IACpC,KAAKxW,QAAQ/+B,KAAK,KAAKs1C,aAAaC,YAAYd,QAAQC,SAASD,QAAQE;IACzE,KAAK1V,cAAc;;EAGrBte,MAAMsW,aAAavB,gBAAgB;IACjC,KAAKqJ,QAAQ/+B,KAAKy0C,QAAQG;IAC1B,KAAK3V,cAAc;;EAGrBte,MAAMyV,OAAOV,gBAAgB,UAAS6f;QAChCG,kBAAkBH,aAAa50B,MAAMmY,OAAOyc,aAAa50B,MAAMiY,QAAQ2c,aAAa50B,MAAM2Y,SAASic,aAAa50B,MAAM0Y;IAC1H,KAAK0F,QAAQ/+B,KAAK01C,kBAAkBjB,QAAQI,SAASJ,QAAQK;IAC7D,KAAK7V,cAAc;;EAGrBte,MAAMwW,OAAOzB,gBAAgB;EAI7B/U,MAAMkY,UAAUnD,gBAAgB/U,MAAM8Y,OAAO/D,gBAAgB,UAAS6f;QAChEA,SAASpgB,cAAcogB,aAAa50B,MAAM4V,QAAQgf,aAAa50B,MAAM+X,WACnE6c,aAAa50B,MAAMoY,WAAWqB,UAAUp5B,KAAK,KAAKi6B,MAAM3rB,MAAM,KAAKwvB,YAAY,KAAK/tB,eACnFwkC,aAAa50B,MAAM6V,SAAS+e,aAAa50B,MAAMuV,WAAW,KAAKsf,iBAAiBf,QAAQC;MAC3F,KAAK3V,QAAQ/+B,KAAKy0C,QAAQS;;MAE1B,KAAKnW,QAAQ/+B,KAAKy0C,QAAQQ;;IAC9B,KAAKhW,cAAc;;EAGrBte,MAAMqW,UAAUtB,gBAAgB;QAC1B,KAAK8f,iBAAiBf,QAAQM;MAC9B,KAAKhW,QAAQtV;;MAEb,KAAKsV,QAAQ/+B,KAAKy0C,QAAQM;;IAC9B,KAAK9V,cAAc;;EAGrBte,MAAMmX,KAAKpC,gBAAgB,UAAS6f;QAC9BA,aAAa50B,MAAMkY;UACjBuC,QAAQ,KAAK2D,QAAQx8B,SAAS;UAC9B,KAAKw8B,QAAQ3D,WAAWqZ,QAAQS;QAChC,KAAKnW,QAAQ3D,SAASqZ,QAAQU;;QAE9B,KAAKpW,QAAQ3D,SAASqZ,QAAQW;;;IAEpC,KAAKnW,cAAc;;EAGrBte,MAAM9Y,KAAK6tB,gBAAgB,UAAS6f;QAC9BI,UAAU;QACV,KAAK5tC,QAAQuzB,eAAe,KAAKia,aAAa50B,MAAM8V;UAClD,KAAK3uB,UAAU,SAAS,KAAKm3B,eAC7B,KAAKn3B,UAAU,WAAW,KAAK2tC;QAC/BE,UAAU;;;IAEhB,KAAK1W,cAAc0W;;;;;;MAQjBC,wBAAwB;MACxBC,yBAAyBD,wBAAwB;MACjDE,yBAAyBD;MACzBE;IACF,GAAGH;IACH,IAAIC;IACJ,IAAIC;;;MAIFE,+BAA+B;;MAG/BC,oBAAoB;MACpBC,qBAAqBD,oBAAoB;MACzCE,qBAAqBD,qBAAqB;MAC1CE;IACF,GAAGH;IACH,IAAIC;IACJ,IAAIC;;MAGFz2C;EACJ,0BAA0B47B;QACpB52B,IAAIhF,KAAK47B;MACX+a,QAAQnY,YAAY6X,wBAAwBza,eAAe,MAAM0a;MACjEM;QACEC,kBAAkBrY,YAAY8X;QAC9BQ,QAAQtY,YAAYkY,oBAAoB9a;;;IAG5C52B,EAAE4xC,UAAUG,oBAAoB/xC,EAAE4xC,UAAUE;IAE5C9xC,EAAE4xC,UAAUI,KAAKhyC,EAAE4xC,UAAUC;IAC7B7xC,EAAE4xC,UAAUK,KAAKjyC,EAAE4xC,UAAUE;IAC7B9xC,EAAE4xC,UAAUM,MAAMlyC,EAAE4xC,UAAUG;;EAEhCI,iBAAiB;EACjBA,iBAAiB;EACjBA,iBAAiB;MAEbC,OAAO/Y,OAAO9wB;MAEd8pC,wBAAwB,+BAA+B9V;IACzD,KAAKA,SAASA;IACd,KAAK+V,aAAa,SAAS/V,OAAOl5B,QAAQuzB,eAAe,IAAI,OAAO,OAAO2F,OAAOl5B,QAAQuzB,eAAe,IAAI,MAAM;IACnH,KAAK2b,oBAAoBv3C,KAAKuhC,OAAOl5B,QAAQuzB,eAAe,KAAK,KAAK2F,OAAOl5B,QAAQuzB;IACrF,KAAK5xB,SAAS;IACd,KAAKg3B,QAAQ;IACb,KAAK3vB,QAAQ;IACb,KAAKmmC,UAAU;IACf,KAAKC,UAAU;IACf,KAAK3mC,MAAM;IACX,KAAK4mC,eAAe;IACpB,KAAKC,kBAAkB;IACvB,KAAKC,8BAA8B;IACnC,KAAKC,qBAAqB;IAC1B,KAAKC,mBAAmB;IACxB,KAAKC;IACL,KAAKC;;EAGPX,sBAAsB9pC,UAAU0qC,QAAQ,eAAgB5mC,OAAO2/B,SAAShQ;QAClEkX,UAAUlX,MAAMlgC,QAAQ,UAAU;IACtC,KAAKuQ,QAAQA,QAAQ;IACrB,KAAKrH,SAASgnC,UAAU;IACxB,KAAKhQ,QAAQA;IACb,KAAKwW,UAAUU,WAAW,KAAK3W,OAAOl5B,QAAQuzB,eAAe;IAC7D,KAAK6b,UAAUS,WAAW,KAAK3W,OAAOl5B,QAAQuzB,eAAe;;EAG/Dyb,sBAAsB9pC,UAAUo1B,QAAQ,eAAgBp/B;IACtD,KAAKg+B,OAAO4B,iBAAiB,KAAK9xB,OAAQ,kCAAmC,KAAKrH,SAAU,QAAQzG;;;;EAKtG8zC,sBAAsB9pC,UAAU4qC,KAAK,YAAav1C,GAAGw1C;QAC5CA,gBAAgB,GAAIA,SAAS;QAEhCC,IAAI,KAAKruC;QACTmgB,IAAIkuB,EAAEx1C;QACND,KAAKunB;cACC;;QAENjQ,IAAIm+B,EAAEz+B,WAAWhX;UACfw1C,UAAU,KAAKZ,YAAYt9B,KAAK,UAAUA,KAAK,UAAUtX,IAAI,KAAKunB;aAC/DjQ;;QAEL2nB,OAAOwW,EAAEz+B,WAAWhX,IAAI;WACrBi/B,QAAQ,UAAUA,QAAQ,UAAU3nB,KAAK,MAAM2nB,OAAO,YAAY3nB;;EAG3Em9B,sBAAsB9pC,UAAU+qC,YAAY,mBAAoB11C,GAAGw1C;QAC1DA,gBAAgB,GAAIA,SAAS;QAEhCC,IAAI,KAAKruC;QACTmgB,IAAIkuB,EAAEx1C;QACND,KAAKunB;aACAA;;QAELjQ,IAAIm+B,EAAEz+B,WAAWhX,IAAIi/B;UACnBuW,UAAU,KAAKZ,YAAYt9B,KAAK,UAAUA,KAAK,UAAUtX,IAAI,KAAKunB,MACnE0X,OAAOwW,EAAEz+B,WAAWhX,IAAI,MAAM,UAAUi/B,OAAO;aAC3Cj/B,IAAI;;WAENA,IAAI;;EAGby0C,sBAAsB9pC,UAAUgrC,UAAU,iBAAkBH;QACnDA,gBAAgB,GAAIA,SAAS;WAE7B,KAAKD,GAAG,KAAKrnC,KAAKsnC;;EAG3Bf,sBAAsB9pC,UAAUirC,YAAY,mBAAoBJ;QACvDA,gBAAgB,GAAIA,SAAS;WAE7B,KAAKD,GAAG,KAAKG,UAAU,KAAKxnC,KAAKsnC,SAASA;;EAGnDf,sBAAsB9pC,UAAUkrC,UAAU,iBAAkBL;QACnDA,gBAAgB,GAAIA,SAAS;IAEpC,KAAKtnC,MAAM,KAAKwnC,UAAU,KAAKxnC,KAAKsnC;;EAGtCf,sBAAsB9pC,UAAUw0B,MAAM,aAAc2W,IAAIN;QAC/CA,gBAAgB,GAAIA,SAAS;QAEhC,KAAKG,QAAQH,YAAYM;MAC3B,KAAKD,QAAQL;aACN;;WAEF;;EAGT,2BAA2BM;QACrBA,MAAM;aAAiBhtC,OAAO2J,aAAaqjC;;IAC/CA,MAAM;WACChtC,OAAO2J,cAAcqjC,MAAM,MAAM,SAASA,KAAK,UAAU;;;;;;;;EASlEtB,KAAKuB,sBAAsB,UAASC;QAC9BtB,aAAasB,MAAMtB;QACnBtW,QAAQ4X,MAAM5X;aAETp+B,IAAI,GAAGA,IAAIo+B,MAAMn+B,QAAQD;UAC5Bi2C,OAAO7X,MAAMc,OAAOl/B;UACpB00C,WAAWx2C,QAAQ+3C,WAAW;QAChC,KAAKlW,MAAMiW,MAAMvnC,OAAO;;UAEtB2vB,MAAMlgC,QAAQ+3C,MAAMj2C,IAAI,MAAM;QAChC,KAAK+/B,MAAMiW,MAAMvnC,OAAO;;;;;;;;;;EAW9B+lC,KAAK0B,wBAAwB,UAASF;IACpC,KAAKG,eAAeH;;;;;;SAOfA,MAAMnB,WAAW,KAAKpvC,QAAQuzB,eAAe,KAAKgd,MAAMb,WAAWl1C,SAAS;MAC/E+1C,MAAMnB,UAAU;MAChB,KAAKsB,eAAeH;;;;EAKxBxB,KAAK2B,iBAAiB,UAASH;IAC7BA,MAAM9nC,MAAM;IACZ8nC,MAAMlB,eAAe;IACrBkB,MAAMjB,kBAAkB;IACxBiB,MAAMhB,8BAA8B;IACpCgB,MAAMf,qBAAqB;IAC3Be,MAAMd,mBAAmB;IACzBc,MAAMb,WAAWl1C,SAAS;IAC1B+1C,MAAMZ,mBAAmBn1C,SAAS;IAElC,KAAKm2C,mBAAmBJ;QAEpBA,MAAM9nC,QAAQ8nC,MAAM5uC,OAAOnH;;UAEzB+1C,MAAM7W,IAAI;QACZ6W,MAAMjW,MAAM;;UAEViW,MAAM7W,IAAI,SAAiB6W,MAAM7W,IAAI;QACvC6W,MAAMjW,MAAM;;;QAGZiW,MAAMd,mBAAmBc,MAAMf;MACjCe,MAAMjW,MAAM;;aAEL//B,IAAI,GAAGiO,OAAO+nC,MAAMZ,oBAAoBp1C,IAAIiO,KAAKhO,QAAQD,KAAK;UACjEuF,OAAO0I,KAAKjO;UAEZg2C,MAAMb,WAAWj3C,QAAQqH,WAAW;QACtCywC,MAAMjW,MAAM;;;;;EAMlByU,KAAK4B,qBAAqB,UAASJ;IACjC,KAAKK,mBAAmBL;WACjBA,MAAM7W,IAAI;MACf,KAAKkX,mBAAmBL;;;QAItB,KAAKM,qBAAqBN,OAAO;MACnCA,MAAMjW,MAAM;;QAEViW,MAAM7W,IAAI;MACZ6W,MAAMjW,MAAM;;;;EAKhByU,KAAK6B,qBAAqB,UAASL;WAC1BA,MAAM9nC,MAAM8nC,MAAM5uC,OAAOnH,UAAU,KAAKs2C,eAAeP;;;EAKhExB,KAAK+B,iBAAiB,UAASP;QACzB,KAAKQ,oBAAoBR;;;;UAIvBA,MAAMhB,+BAA+B,KAAKsB,qBAAqBN;;YAE7DA,MAAMpB;UACRoB,MAAMjW,MAAM;;;aAGT;;QAGLiW,MAAMpB,UAAU,KAAK6B,eAAeT,SAAS,KAAKU,uBAAuBV;MAC3E,KAAKM,qBAAqBN;aACnB;;WAGF;;;EAITxB,KAAKgC,sBAAsB,UAASR;QAC9BvnC,QAAQunC,MAAM9nC;IAClB8nC,MAAMhB,8BAA8B;;QAGhCgB,MAAM7W,IAAI,SAAiB6W,MAAM7W,IAAI;aAChC;;;QAIL6W,MAAM7W,IAAI;UACR6W,MAAM7W,IAAI,SAAiB6W,MAAM7W,IAAI;eAChC;;MAET6W,MAAM9nC,MAAMO;;;QAIVunC,MAAM7W,IAAI,SAAiB6W,MAAM7W,IAAI;UACnCwX,aAAa;UACb,KAAKlxC,QAAQuzB,eAAe;QAC9B2d,aAAaX,MAAM7W,IAAI;;UAErB6W,MAAM7W,IAAI,SAAiB6W,MAAM7W,IAAI;QACvC,KAAKiX,mBAAmBJ;aACnBA,MAAM7W,IAAI;UACb6W,MAAMjW,MAAM;;QAEdiW,MAAMhB,+BAA+B2B;eAC9B;;;IAIXX,MAAM9nC,MAAMO;WACL;;;EAIT+lC,KAAK8B,uBAAuB,UAASN,OAAOY;QACrCA,iBAAiB,GAAIA,UAAU;QAEhC,KAAKC,2BAA2Bb,OAAOY;MACzCZ,MAAM7W,IAAI;aACH;;WAEF;;;EAITqV,KAAKqC,6BAA6B,UAASb,OAAOY;WAE9CZ,MAAM7W,IAAI,SACV6W,MAAM7W,IAAI,SACV6W,MAAM7W,IAAI,SACV,KAAK2X,2BAA2Bd,OAAOY;;EAG3CpC,KAAKsC,6BAA6B,UAASd,OAAOY;QAC5CnoC,QAAQunC,MAAM9nC;QACd8nC,MAAM7W,IAAI;UACRpxB,MAAM,GAAG4B,OAAO;UAChB,KAAKonC,wBAAwBf;QAC/BjoC,MAAMioC,MAAMlB;YACRkB,MAAM7W,IAAI,SAAiB,KAAK4X,wBAAwBf;UAC1DrmC,MAAMqmC,MAAMlB;;YAEVkB,MAAM7W,IAAI;;cAERxvB,SAAS,KAAKA,MAAM5B,QAAQ6oC;YAC9BZ,MAAMjW,MAAM;;iBAEP;;;UAGPiW,MAAMpB,YAAYgC;QACpBZ,MAAMjW,MAAM;;MAEdiW,MAAM9nC,MAAMO;;WAEP;;;EAIT+lC,KAAKiC,iBAAiB,UAAST;WAE3B,KAAKgB,4BAA4BhB,UACjCA,MAAM7W,IAAI,SACV,KAAK8X,mCAAmCjB,UACxC,KAAKkB,yBAAyBlB,UAC9B,KAAKmB,2BAA2BnB,UAChC,KAAKoB,yBAAyBpB;;EAGlCxB,KAAKyC,qCAAqC,UAASjB;QAC7CvnC,QAAQunC,MAAM9nC;QACd8nC,MAAM7W,IAAI;UACR,KAAKkY,qBAAqBrB;eACrB;;MAETA,MAAM9nC,MAAMO;;WAEP;;EAET+lC,KAAK2C,6BAA6B,UAASnB;QACrCvnC,QAAQunC,MAAM9nC;QACd8nC,MAAM7W,IAAI;UACR6W,MAAM7W,IAAI,SAAiB6W,MAAM7W,IAAI;QACvC,KAAKiX,mBAAmBJ;YACpBA,MAAM7W,IAAI;iBACL;;QAET6W,MAAMjW,MAAM;;MAEdiW,MAAM9nC,MAAMO;;WAEP;;EAET+lC,KAAK4C,2BAA2B,UAASpB;QACnCA,MAAM7W,IAAI;UACR,KAAK15B,QAAQuzB,eAAe;QAC9B,KAAKse,sBAAsBtB;iBAClBA,MAAML,cAAc;;QAC7BK,MAAMjW,MAAM;;MAEd,KAAKqW,mBAAmBJ;UACpBA,MAAM7W,IAAI;QACZ6W,MAAMf,sBAAsB;eACrB;;MAETe,MAAMjW,MAAM;;WAEP;;;EAITyU,KAAKkC,yBAAyB,UAASV;WAEnCA,MAAM7W,IAAI,SACV,KAAK8X,mCAAmCjB,UACxC,KAAKkB,yBAAyBlB,UAC9B,KAAKmB,2BAA2BnB,UAChC,KAAKoB,yBAAyBpB,UAC9B,KAAKuB,kCAAkCvB,UACvC,KAAKwB,mCAAmCxB;;;EAK5CxB,KAAK+C,oCAAoC,UAASvB;QAC5C,KAAKc,2BAA2Bd,OAAO;MACzCA,MAAMjW,MAAM;;WAEP;;;EAITyU,KAAKiD,4BAA4B,UAASzB;QACpCF,KAAKE,MAAML;QACX+B,kBAAkB5B;MACpBE,MAAMlB,eAAegB;MACrBE,MAAMH;aACC;;WAEF;;EAET,2BAA2BC;WAEvBA,OAAO;IACPA,MAAM;IAAgBA,MAAM;IAC5BA,OAAO;IACPA,OAAO;IACPA,MAAM;IAAgBA,MAAM;IAC5BA,MAAM;IAAgBA,MAAM;;;;EAMhCtB,KAAKwC,8BAA8B,UAAShB;QACtCvnC,QAAQunC,MAAM9nC;QACd4nC,KAAK;YACDA,KAAKE,MAAML,gBAAgB,MAAM+B,kBAAkB5B;MACzDE,MAAMH;;WAEDG,MAAM9nC,QAAQO;;;EAIvB+lC,KAAKgD,qCAAqC,UAASxB;QAC7CF,KAAKE,MAAML;QAEbG,QAAQ,KACRA,OAAO;MACLA,MAAM;IAAgBA,MAAM,SAC9BA,OAAO;IACPA,OAAO;IACPA,OAAO;IACPA,OAAO;IACPA,OAAO;;MAEPE,MAAMH;aACC;;WAEF;;;;;EAMTrB,KAAK8C,wBAAwB,UAAStB;QAChCA,MAAM7W,IAAI;UACR,KAAKwY,oBAAoB3B;YACvBA,MAAMb,WAAWj3C,QAAQ83C,MAAMjB,sBAAsB;UACvDiB,MAAMjW,MAAM;;QAEdiW,MAAMb,WAAWz3C,KAAKs4C,MAAMjB;;;MAG9BiB,MAAMjW,MAAM;;;;;;EAOhByU,KAAKmD,sBAAsB,UAAS3B;IAClCA,MAAMjB,kBAAkB;QACpBiB,MAAM7W,IAAI;UACR,KAAKyY,+BAA+B5B,UAAUA,MAAM7W,IAAI;eACnD;;MAET6W,MAAMjW,MAAM;;WAEP;;;;;;EAOTyU,KAAKoD,iCAAiC,UAAS5B;IAC7CA,MAAMjB,kBAAkB;QACpB,KAAK8C,gCAAgC7B;MACvCA,MAAMjB,mBAAmB+C,kBAAkB9B,MAAMlB;aAC1C,KAAKiD,+BAA+B/B;QACzCA,MAAMjB,mBAAmB+C,kBAAkB9B,MAAMlB;;aAE5C;;WAEF;;;;;;;EAQTN,KAAKqD,kCAAkC,UAAS7B;QAC1CvnC,QAAQunC,MAAM9nC;QACdsnC,SAAS,KAAK/vC,QAAQuzB,eAAe;QACrC8c,KAAKE,MAAML,QAAQH;IACvBQ,MAAMH,QAAQL;QAEVM,OAAO;IAAgB,KAAKkC,sCAAsChC,OAAOR;MAC3EM,KAAKE,MAAMlB;;QAETmD,wBAAwBnC;MAC1BE,MAAMlB,eAAegB;aACd;;IAGTE,MAAM9nC,MAAMO;WACL;;EAET,iCAAiCqnC;WACxBpU,kBAAkBoU,IAAI,SAASA,OAAO;IAAgBA,OAAO;;;;;;;;;EAUtEtB,KAAKuD,iCAAiC,UAAS/B;QACzCvnC,QAAQunC,MAAM9nC;QACdsnC,SAAS,KAAK/vC,QAAQuzB,eAAe;QACrC8c,KAAKE,MAAML,QAAQH;IACvBQ,MAAMH,QAAQL;QAEVM,OAAO;IAAgB,KAAKkC,sCAAsChC,OAAOR;MAC3EM,KAAKE,MAAMlB;;QAEToD,uBAAuBpC;MACzBE,MAAMlB,eAAegB;aACd;;IAGTE,MAAM9nC,MAAMO;WACL;;EAET,gCAAgCqnC;WACvBnU,iBAAiBmU,IAAI,SAASA,OAAO;IAAgBA,OAAO;IAAgBA,OAAO;IAAuBA,OAAO;;;EAI1HtB,KAAK6C,uBAAuB,UAASrB;QAEjC,KAAKmC,wBAAwBnC,UAC7B,KAAKoC,+BAA+BpC,UACpC,KAAKqC,0BAA0BrC,UAC9BA,MAAMnB,WAAW,KAAKyD,qBAAqBtC;aAErC;;QAELA,MAAMpB;;UAEJoB,MAAML,cAAc;;QACtBK,MAAMjW,MAAM;;MAEdiW,MAAMjW,MAAM;;WAEP;;EAETyU,KAAK2D,0BAA0B,UAASnC;QAClCvnC,QAAQunC,MAAM9nC;QACd,KAAKqqC,wBAAwBvC;UAC3B/mC,IAAI+mC,MAAMlB;UACVkB,MAAMpB;;YAEJ3lC,IAAI+mC,MAAMd;UACZc,MAAMd,mBAAmBjmC;;eAEpB;;UAELA,KAAK+mC,MAAMf;eACN;;MAETe,MAAM9nC,MAAMO;;WAEP;;EAET+lC,KAAK8D,uBAAuB,UAAStC;QAC/BA,MAAM7W,IAAI;UACR,KAAKwY,oBAAoB3B;QAC3BA,MAAMZ,mBAAmB13C,KAAKs4C,MAAMjB;eAC7B;;MAETiB,MAAMjW,MAAM;;WAEP;;;EAITyU,KAAK6D,4BAA4B,UAASrC;WAEtC,KAAKwC,wBAAwBxC,UAC7B,KAAKyC,yBAAyBzC,UAC9B,KAAK0C,eAAe1C,UACpB,KAAK2C,4BAA4B3C,UACjC,KAAKgC,sCAAsChC,OAAO,WAChDA,MAAMpB,WAAW,KAAKgE,oCAAoC5C,UAC5D,KAAK6C,yBAAyB7C;;EAGlCxB,KAAKiE,2BAA2B,UAASzC;QACnCvnC,QAAQunC,MAAM9nC;QACd8nC,MAAM7W,IAAI;UACR,KAAK2Z,wBAAwB9C;eACxB;;MAETA,MAAM9nC,MAAMO;;WAEP;;EAET+lC,KAAKkE,iBAAiB,UAAS1C;QACzBA,MAAML,cAAc;KAAiBoD,eAAe/C,MAAMJ;MAC5DI,MAAMlB,eAAe;MACrBkB,MAAMH;aACC;;WAEF;;;EAITrB,KAAKgE,0BAA0B,UAASxC;QAClCF,KAAKE,MAAML;QACXG,OAAO;;MACTE,MAAMlB,eAAe;;MACrBkB,MAAMH;aACC;;QAELC,OAAO;;MACTE,MAAMlB,eAAe;;MACrBkB,MAAMH;aACC;;QAELC,OAAO;;MACTE,MAAMlB,eAAe;;MACrBkB,MAAMH;aACC;;QAELC,OAAO;;MACTE,MAAMlB,eAAe;;MACrBkB,MAAMH;aACC;;QAELC,OAAO;;MACTE,MAAMlB,eAAe;;MACrBkB,MAAMH;aACC;;WAEF;;;EAITrB,KAAKsE,0BAA0B,UAAS9C;QAClCF,KAAKE,MAAML;QACXqD,gBAAgBlD;MAClBE,MAAMlB,eAAegB,KAAK;MAC1BE,MAAMH;aACC;;WAEF;;EAET,yBAAyBC;WAEpBA,MAAM;IAAgBA,MAAM;IAC5BA,MAAM;IAAgBA,MAAM;;;EAKjCtB,KAAKwD,wCAAwC,UAAShC,OAAOR;QACtDA,gBAAgB,GAAIA,SAAS;QAE9B/mC,QAAQunC,MAAM9nC;QACd0mC,UAAUY,UAAUQ,MAAMpB;QAE1BoB,MAAM7W,IAAI;UACR,KAAK8Z,yBAAyBjD,OAAO;YACnCkD,OAAOlD,MAAMlB;YACbF,WAAWsE,QAAQ,UAAUA,QAAQ;cACnCC,mBAAmBnD,MAAM9nC;cACzB8nC,MAAM7W,IAAI,SAAiB6W,MAAM7W,IAAI,SAAiB,KAAK8Z,yBAAyBjD,OAAO;gBACzFoD,QAAQpD,MAAMlB;gBACdsE,SAAS,UAAUA,SAAS;cAC9BpD,MAAMlB,gBAAgBoE,OAAO,UAAU,SAASE,QAAQ,UAAU;qBAC3D;;;UAGXpD,MAAM9nC,MAAMirC;UACZnD,MAAMlB,eAAeoE;;eAEhB;;UAGPtE,WACAoB,MAAM7W,IAAI,SACV,KAAKka,oBAAoBrD,UACzBA,MAAM7W,IAAI,SACVma,eAAetD,MAAMlB;eAEd;;UAELF;QACFoB,MAAMjW,MAAM;;MAEdiW,MAAM9nC,MAAMO;;WAGP;;EAET,wBAAwBqnC;WACfA,MAAM,KAAKA,MAAM;;;EAI1BtB,KAAKqE,2BAA2B,UAAS7C;QACnCA,MAAMpB;UACJ,KAAK6C,0BAA0BzB;eAC1B;;UAELA,MAAM7W,IAAI;QACZ6W,MAAMlB,eAAe;;eACd;;aAEF;;QAGLgB,KAAKE,MAAML;QACXG,OAAO;KAAkBE,MAAMnB,WAAWiB,OAAO;MACnDE,MAAMlB,eAAegB;MACrBE,MAAMH;aACC;;WAGF;;;EAITrB,KAAK+D,0BAA0B,UAASvC;IACtCA,MAAMlB,eAAe;QACjBgB,KAAKE,MAAML;QACXG,MAAM;IAAgBA,MAAM;;;QAE5BE,MAAMlB,eAAe,KAAKkB,MAAMlB,gBAAgBgB,KAAK;QACrDE,MAAMH;gBACEC,KAAKE,MAAML,cAAc;MAAgBG,MAAM;aAClD;;WAEF;;;EAITtB,KAAK4D,iCAAiC,UAASpC;QACzCF,KAAKE,MAAML;QAEX4D,uBAAuBzD;MACzBE,MAAMlB,gBAAgB;MACtBkB,MAAMH;aACC;;QAIPG,MAAMpB,WACN,KAAKnvC,QAAQuzB,eAAe,MAC3B8c,OAAO;IAAgBA,OAAO;MAE/BE,MAAMlB,gBAAgB;MACtBkB,MAAMH;UAEJG,MAAM7W,IAAI,SACV,KAAKqa,yCAAyCxD,UAC9CA,MAAM7W,IAAI;eAEH;;MAET6W,MAAMjW,MAAM;;WAGP;;EAET,gCAAgC+V;WAE5BA,OAAO;IACPA,OAAO;IACPA,OAAO;IACPA,OAAO;IACPA,OAAO;IACPA,OAAO;;;;;EAOXtB,KAAKgF,2CAA2C,UAASxD;QACnDvnC,QAAQunC,MAAM9nC;;QAGd,KAAKurC,8BAA8BzD,UAAUA,MAAM7W,IAAI;UACrD55B,OAAOywC,MAAMjB;UACb,KAAK2E,+BAA+B1D;YAClCxwC,QAAQwwC,MAAMjB;QAClB,KAAK4E,2CAA2C3D,OAAOzwC,MAAMC;eACtD;;;IAGXwwC,MAAM9nC,MAAMO;;QAGR,KAAKmrC,yCAAyC5D;UAC5C6D,cAAc7D,MAAMjB;MACxB,KAAK+E,0CAA0C9D,OAAO6D;aAC/C;;WAEF;;EAETrF,KAAKmF,6CAA6C,UAAS3D,OAAOzwC,MAAMC;SACjEunB,IAAIipB,MAAMrB,kBAAkBX,WAAWzuC;MACxCywC,MAAMjW,MAAM;;SACXiW,MAAMrB,kBAAkBX,UAAUzuC,MAAM7G,KAAK8G;MAC9CwwC,MAAMjW,MAAM;;;EAElByU,KAAKsF,4CAA4C,UAAS9D,OAAO6D;SAC1D7D,MAAMrB,kBAAkBZ,OAAOr1C,KAAKm7C;MACrC7D,MAAMjW,MAAM;;;;;EAKlByU,KAAKiF,gCAAgC,UAASzD;QACxCF,KAAK;IACTE,MAAMjB,kBAAkB;WACjBgF,+BAA+BjE,KAAKE,MAAML;MAC/CK,MAAMjB,mBAAmB+C,kBAAkBhC;MAC3CE,MAAMH;;WAEDG,MAAMjB,oBAAoB;;EAEnC,wCAAwCe;WAC/BkD,gBAAgBlD,OAAOA,OAAO;;;;EAKvCtB,KAAKkF,iCAAiC,UAAS1D;QACzCF,KAAK;IACTE,MAAMjB,kBAAkB;WACjBiF,gCAAgClE,KAAKE,MAAML;MAChDK,MAAMjB,mBAAmB+C,kBAAkBhC;MAC3CE,MAAMH;;WAEDG,MAAMjB,oBAAoB;;EAEnC,yCAAyCe;WAChCiE,+BAA+BjE,OAAOiD,eAAejD;;;;EAK9DtB,KAAKoF,2CAA2C,UAAS5D;WAChD,KAAK0D,+BAA+B1D;;;EAI7CxB,KAAK0C,2BAA2B,UAASlB;QACnCA,MAAM7W,IAAI;MACZ6W,MAAM7W,IAAI;MACV,KAAK8a,mBAAmBjE;UACpBA,MAAM7W,IAAI;eACL;;;MAGT6W,MAAMjW,MAAM;;WAEP;;;;;EAMTyU,KAAKyF,qBAAqB,UAASjE;WAC1B,KAAKkE,oBAAoBlE;UAC1BjQ,OAAOiQ,MAAMlB;UACbkB,MAAM7W,IAAI,SAAiB,KAAK+a,oBAAoBlE;YAClDhQ,QAAQgQ,MAAMlB;YACdkB,MAAMpB,YAAY7O,UAAU,KAAKC,WAAW;UAC9CgQ,MAAMjW,MAAM;;YAEVgG,UAAU,KAAKC,WAAW,KAAKD,OAAOC;UACxCgQ,MAAMjW,MAAM;;;;;;;EAQpByU,KAAK0F,sBAAsB,UAASlE;QAC9BvnC,QAAQunC,MAAM9nC;QAEd8nC,MAAM7W,IAAI;UACR,KAAKgb,sBAAsBnE;eACtB;;UAELA,MAAMpB;;YAEJwF,OAAOpE,MAAML;YACbyE,SAAS;QAAgBC,aAAaD;UACxCpE,MAAMjW,MAAM;;QAEdiW,MAAMjW,MAAM;;MAEdiW,MAAM9nC,MAAMO;;QAGVqnC,KAAKE,MAAML;QACXG,OAAO;;MACTE,MAAMlB,eAAegB;MACrBE,MAAMH;aACC;;WAGF;;;EAITrB,KAAK2F,wBAAwB,UAASnE;QAChCvnC,QAAQunC,MAAM9nC;QAEd8nC,MAAM7W,IAAI;MACZ6W,MAAMlB,eAAe;;aACd;;QAGLkB,MAAMpB,WAAWoB,MAAM7W,IAAI;MAC7B6W,MAAMlB,eAAe;;aACd;;SAGJkB,MAAMpB,WAAWoB,MAAM7W,IAAI;UAC1B,KAAKmb,6BAA6BtE;eAC7B;;MAETA,MAAM9nC,MAAMO;;WAIZ,KAAK2pC,+BAA+BpC,UACpC,KAAKqC,0BAA0BrC;;;EAKnCxB,KAAK8F,+BAA+B,UAAStE;QACvCF,KAAKE,MAAML;QACXoD,eAAejD,OAAOA,OAAO;;MAC/BE,MAAMlB,eAAegB,KAAK;MAC1BE,MAAMH;aACC;;WAEF;;;EAITrB,KAAKmE,8BAA8B,UAAS3C;QACtCvnC,QAAQunC,MAAM9nC;QACd8nC,MAAM7W,IAAI;UACR,KAAK8Z,yBAAyBjD,OAAO;eAChC;;UAELA,MAAMpB;QACRoB,MAAMjW,MAAM;;MAEdiW,MAAM9nC,MAAMO;;WAEP;;;EAIT+lC,KAAKuC,0BAA0B,UAASf;QAClCvnC,QAAQunC,MAAM9nC;QACd4nC,KAAK;IACTE,MAAMlB,eAAe;WACdiE,eAAejD,KAAKE,MAAML;MAC/BK,MAAMlB,eAAe,KAAKkB,MAAMlB,gBAAgBgB,KAAK;MACrDE,MAAMH;;WAEDG,MAAM9nC,QAAQO;;EAEvB,wBAAwBqnC;WACfA,MAAM;IAAgBA,MAAM;;;EAIrCtB,KAAK6E,sBAAsB,UAASrD;QAC9BvnC,QAAQunC,MAAM9nC;QACd4nC,KAAK;IACTE,MAAMlB,eAAe;WACdyF,WAAWzE,KAAKE,MAAML;MAC3BK,MAAMlB,eAAe,KAAKkB,MAAMlB,eAAe0F,SAAS1E;MACxDE,MAAMH;;WAEDG,MAAM9nC,QAAQO;;EAEvB,oBAAoBqnC;WAEfA,MAAM;IAAgBA,MAAM;IAC5BA,MAAM;IAAgBA,MAAM,QAC5BA,MAAM;IAAgBA,MAAM;;EAGjC,kBAAkBA;QACZA,MAAM;IAAgBA,MAAM;;aACvB,MAAMA,KAAK;;QAEhBA,MAAM;IAAgBA,MAAM;;aACvB,MAAMA,KAAK;;WAEbA,KAAK;;;;EAKdtB,KAAKoE,sCAAsC,UAAS5C;QAC9C,KAAKyE,qBAAqBzE;UACxB0E,KAAK1E,MAAMlB;UACX,KAAK2F,qBAAqBzE;YACxB2E,KAAK3E,MAAMlB;YACX4F,MAAM,KAAK,KAAKD,qBAAqBzE;UACvCA,MAAMlB,eAAe4F,KAAK,KAAKC,KAAK,IAAI3E,MAAMlB;;UAE9CkB,MAAMlB,eAAe4F,KAAK,IAAIC;;;QAGhC3E,MAAMlB,eAAe4F;;aAEhB;;WAEF;;;EAITlG,KAAKiG,uBAAuB,UAASzE;QAC/BF,KAAKE,MAAML;QACX0E,aAAavE;MACfE,MAAMlB,eAAegB,KAAK;;MAC1BE,MAAMH;aACC;;IAETG,MAAMlB,eAAe;WACd;;EAET,sBAAsBgB;WACbA,MAAM;IAAgBA,MAAM;;;;;EAMrCtB,KAAKyE,2BAA2B,UAASjD,OAAO/1C;QAC1CwO,QAAQunC,MAAM9nC;IAClB8nC,MAAMlB,eAAe;aACZ90C,IAAI,GAAGA,IAAIC,UAAUD;UACxB81C,KAAKE,MAAML;WACV4E,WAAWzE;QACdE,MAAM9nC,MAAMO;eACL;;MAETunC,MAAMlB,eAAe,KAAKkB,MAAMlB,eAAe0F,SAAS1E;MACxDE,MAAMH;;WAED;;;;;MAOL+E,QAAQ,eAAentB;IACzB,KAAKzuB,OAAOyuB,EAAEzuB;IACd,KAAKwG,QAAQioB,EAAEjoB;IACf,KAAKiJ,QAAQgf,EAAEhf;IACf,KAAKC,MAAM+e,EAAE/e;QACT+e,EAAEhoB,QAAQg0B;MACV,KAAKxyB,UAAUwxB,eAAehL,GAAGA,EAAE2M,UAAU3M,EAAE4M;;QAC/C5M,EAAEhoB,QAAQm0B;MACV,KAAKW,SAAS9M,EAAEhf,OAAOgf,EAAE/e;;;;MAK3BmsC,OAAOpf,OAAO9wB;;EAIlBkwC,KAAK5b,OAAO,UAAS6b;SACdA,iCAAiC,KAAK97C,KAAK4zB,WAAW,KAAKqJ;MAC5D,KAAKsE,iBAAiB,KAAK9xB,OAAO,gCAAgC,KAAKzP,KAAK4zB;;QAC5E,KAAKntB,QAAQi0B;MACb,KAAKj0B,QAAQi0B,YAAYkhB,MAAM;;IAEnC,KAAKpe,aAAa,KAAK9tB;IACvB,KAAK6tB,eAAe,KAAK9tB;IACzB,KAAK4tB,gBAAgB,KAAKhC;IAC1B,KAAKiC,kBAAkB,KAAKlC;IAC5B,KAAK6D;;EAGP4c,KAAKE,WAAW;IACd,KAAK9b;eACM2b,MAAM;;;aAIR7wC,WAAW;IAClB8wC,KAAK9wC,OAAOuT,YAAY;UACpBoqB,SAAS;;QAGXzI,MAAM;cACAn4B,QAAQ4gC,OAAOqT;;YAEjBC,MAAMl0C,MAAM9H,SAASqf,MAAMoV;YAC3BjuB,OAAOsB;;;;;;;;EASjB+zC,KAAK3H,aAAa;WACT,KAAKzW,QAAQ,KAAKA,QAAQx8B,SAAS;;;;EAM5C46C,KAAK5c,YAAY;QACXiV,aAAa,KAAKA;SACjBA,eAAeA,WAAWjB;MAAiB,KAAKgJ;;IAErD,KAAKxsC,QAAQ,KAAKP;QACd,KAAKzI,QAAQg0B;MAAa,KAAKW,WAAW,KAAKgC;;QAC/C,KAAKluB,OAAO,KAAKyqB,MAAM14B;aAAiB,KAAKi7C,YAAY78B,MAAMoV;;QAE/Dyf,WAAWhB;aAAmBgB,WAAWhB,SAAS;;MAC/C,KAAKiJ,UAAU,KAAKC;;;EAG7BP,KAAKM,YAAY,UAASpkC;;;QAGpB2qB,kBAAkB3qB,MAAM,KAAKtR,QAAQuzB,eAAe,MAAMjiB,SAAS;;aAC5D,KAAKskC;;WAET,KAAKC,iBAAiBvkC;;EAG/B8jC,KAAKO,oBAAoB;QACnBrkC,OAAO,KAAK4hB,MAAM3hB,WAAW,KAAK9I;QAClC6I,QAAQ,UAAUA,QAAQ;aAAiBA;;QAC3CkoB,OAAO,KAAKtG,MAAM3hB,WAAW,KAAK9I,MAAM;YACpC6I,QAAQ,MAAMkoB,OAAO;;EAG/B4b,KAAKU,mBAAmB;QAClBnhB,WAAW,KAAK30B,QAAQk0B,aAAa,KAAKyC;QAC1C3tB,QAAQ,KAAKP,KAAKQ,MAAM,KAAKiqB,MAAMz6B,QAAQ,MAAM,KAAKgQ,OAAO;QAC7DQ,SAAS;MAAK,KAAKqxB,MAAM,KAAK7xB,MAAM,GAAG;;IAC3C,KAAKA,MAAMQ,MAAM;QACb,KAAKjJ,QAAQg0B;MACf1B,WAAWa,YAAYnqB;UACnBgZ;cACIA,QAAQsQ,WAAWc,KAAK,KAAKF,WAAWlR,MAAMqR,QAAQ,KAAK5qB;UAC/D,KAAKiuB;QACP,KAAKD,YAAYzU,MAAMqR,QAAQrR,MAAM,GAAGxnB;;;QAGxC,KAAKwF,QAAQk0B;MACb,KAAKl0B,QAAQk0B,UAAU,MAAM,KAAKhB,MAAM3rB,MAAMyB,QAAQ,GAAGC,MAAMD,OAAO,KAAKP,KACtDksB,UAAU,KAAKgC;;;EAG1Cye,KAAKzd,kBAAkB,UAASoe;QAC1B/sC,QAAQ,KAAKP;QACbksB,WAAW,KAAK30B,QAAQk0B,aAAa,KAAKyC;QAC1C0Z,KAAK,KAAKnd,MAAM3hB,WAAW,KAAK9I,OAAOstC;WACpC,KAAKttC,MAAM,KAAKyqB,MAAM14B,WAAWw7C,UAAU3F;MAChDA,KAAK,KAAKnd,MAAM3hB,aAAa,KAAK9I;;QAEhC,KAAKzI,QAAQk0B;MACb,KAAKl0B,QAAQk0B,UAAU,OAAO,KAAKhB,MAAM3rB,MAAMyB,QAAQ+sC,WAAW,KAAKttC,MAAMO,OAAO,KAAKP,KACpEksB,UAAU,KAAKgC;;;;;EAM1Cye,KAAKI,YAAY;IACfS,aAAa,KAAKxtC,MAAM,KAAKyqB,MAAM14B;UAC7B61C,KAAK,KAAKnd,MAAM3hB,WAAW,KAAK9I;cAC5B4nC;aACH;aAAS;;YACV,KAAK5nC;;aAEJ;cACC,KAAKyqB,MAAM3hB,WAAW,KAAK9I,MAAM,OAAO;cACxC,KAAKA;;aAEN;aAAS;aAAW;YACrB,KAAKA;cACH,KAAKzI,QAAQg0B;cACb,KAAK0C;YACP,KAAKD,YAAY,KAAKhuB;;;aAGrB;;kBACK,KAAKyqB,MAAM3hB,WAAW,KAAK9I,MAAM;iBACpC;;cACH,KAAKqtC;;iBAEF;cACH,KAAKne,gBAAgB;;;oBAGfse;;;;cAIJ5F,KAAK,KAAKA,KAAK,MAAMA,MAAM,QAAQ7d,mBAAmBv5B,KAAKoK,OAAO2J,aAAaqjC;cAC/E,KAAK5nC;;kBAEDwtC;;;;;;;;;EAWdb,KAAKK,cAAc,UAASl8C,MAAMgI;IAChC,KAAK0H,MAAM,KAAKR;QACZ,KAAKzI,QAAQg0B;MAAa,KAAKY,SAAS,KAAK+B;;QAC7C6W,WAAW,KAAKj0C;IACpB,KAAKA,OAAOA;IACZ,KAAKwG,QAAQwB;IAEb,KAAKosB,cAAc6f;;;;;;;;;;EAYrB4H,KAAKc,gBAAgB;QACf1c,OAAO,KAAKtG,MAAM3hB,WAAW,KAAK9I,MAAM;QACxC+wB,QAAQ,MAAMA,QAAQ;aAAa,KAAK2c,WAAW;;QACnDC,QAAQ,KAAKljB,MAAM3hB,WAAW,KAAK9I,MAAM;QACzC,KAAKzI,QAAQuzB,eAAe,KAAKiG,SAAS,MAAM4c,UAAU;;MAC5D,KAAK3tC,OAAO;aACL,KAAKgtC,YAAY78B,MAAMoW;;QAE5B,KAAKvmB;aACA,KAAKgtC,YAAY78B,MAAM8V;;;EAIlC0mB,KAAKiB,kBAAkB;;QACjB7c,OAAO,KAAKtG,MAAM3hB,WAAW,KAAK9I,MAAM;QACxC,KAAKyuB;QAAiB,KAAKzuB;aAAY,KAAK8/B;;QAC5C/O,SAAS;aAAa,KAAK8c,SAAS19B,MAAMI,QAAQ;;WAC/C,KAAKs9B,SAAS19B,MAAMoX,OAAO;;EAGpColB,KAAKmB,4BAA4B,UAASjlC;;QACpCkoB,OAAO,KAAKtG,MAAM3hB,WAAW,KAAK9I,MAAM;QACxC9B,OAAO;QACP6vC,YAAYllC,SAAS,KAAKsH,MAAMmX,OAAOnX,MAAMkX;;QAG7C,KAAK9vB,QAAQuzB,eAAe,KAAKjiB,SAAS,MAAMkoB,SAAS;QACzD7yB;MACF6vC,YAAY59B,MAAMqX;MAClBuJ,OAAO,KAAKtG,MAAM3hB,WAAW,KAAK9I,MAAM;;QAGtC+wB,SAAS;aAAa,KAAK8c,SAAS19B,MAAMI,QAAQrS,OAAO;;WACtD,KAAK2vC,SAASE,WAAW7vC;;EAGlCyuC,KAAKqB,qBAAqB,UAASnlC;;QAC7BkoB,OAAO,KAAKtG,MAAM3hB,WAAW,KAAK9I,MAAM;QACxC+wB,SAASloB;UACP,KAAKtR,QAAQuzB,eAAe;YAC1B6iB,QAAQ,KAAKljB,MAAM3hB,WAAW,KAAK9I,MAAM;YACzC2tC,UAAU;iBAAa,KAAKE,SAAS19B,MAAMI,QAAQ;;;aAElD,KAAKs9B,SAAShlC,SAAS,MAAMsH,MAAMyW,YAAYzW,MAAM0W,YAAY;;QAEtEkK,SAAS;aAAa,KAAK8c,SAAS19B,MAAMI,QAAQ;;WAC/C,KAAKs9B,SAAShlC,SAAS,MAAMsH,MAAM2W,YAAY3W,MAAM6W,YAAY;;EAG1E2lB,KAAKsB,kBAAkB;;QACjBld,OAAO,KAAKtG,MAAM3hB,WAAW,KAAK9I,MAAM;QACxC+wB,SAAS;aAAa,KAAK8c,SAAS19B,MAAMI,QAAQ;;WAC/C,KAAKs9B,SAAS19B,MAAM4W,YAAY;;EAGzC4lB,KAAKuB,qBAAqB,UAASrlC;;QAC7BkoB,OAAO,KAAKtG,MAAM3hB,WAAW,KAAK9I,MAAM;QACxC+wB,SAASloB;UACPkoB,SAAS,OAAO,KAAKrC,YAAY,KAAKjE,MAAM3hB,WAAW,KAAK9I,MAAM,OAAO,OACxE,KAAKsuB,eAAe,KAAK1E,UAAUp5B,KAAK,KAAKi6B,MAAM3rB,MAAM,KAAKwvB,YAAY,KAAKtuB;;QAElF,KAAKkvB,gBAAgB;QACrB,KAAK6d;eACE,KAAKhd;;aAEP,KAAK8d,SAAS19B,MAAMwW,QAAQ;;QAEjCoK,SAAS;aAAa,KAAK8c,SAAS19B,MAAMI,QAAQ;;WAC/C,KAAKs9B,SAAS19B,MAAMiX,SAAS;;EAGtCulB,KAAKwB,kBAAkB,UAAStlC;;QAC1BkoB,OAAO,KAAKtG,MAAM3hB,WAAW,KAAK9I,MAAM;QACxC9B,OAAO;QACP6yB,SAASloB;MACX3K,OAAO2K,SAAS,MAAM,KAAK4hB,MAAM3hB,WAAW,KAAK9I,MAAM,OAAO,KAAK,IAAI;UACnE,KAAKyqB,MAAM3hB,WAAW,KAAK9I,MAAM9B,UAAU;eAAa,KAAK2vC,SAAS19B,MAAMI,QAAQrS,OAAO;;aACxF,KAAK2vC,SAAS19B,MAAMgX,UAAUjpB;;QAEnC6yB,SAAS,MAAMloB,SAAS,OAAO,KAAK6lB,YAAY,KAAKjE,MAAM3hB,WAAW,KAAK9I,MAAM,OAAO,MACxF,KAAKyqB,MAAM3hB,WAAW,KAAK9I,MAAM,OAAO;;MAE1C,KAAKkvB,gBAAgB;MACrB,KAAK6d;aACE,KAAKhd;;QAEVgB,SAAS;MAAM7yB,OAAO;;WACnB,KAAK2vC,SAAS19B,MAAM+W,YAAYhpB;;EAGzCyuC,KAAKyB,oBAAoB,UAASvlC;;QAC5BkoB,OAAO,KAAKtG,MAAM3hB,WAAW,KAAK9I,MAAM;QACxC+wB,SAAS;aAAa,KAAK8c,SAAS19B,MAAM8W,UAAU,KAAKwD,MAAM3hB,WAAW,KAAK9I,MAAM,OAAO,KAAK,IAAI;;QACrG6I,SAAS,MAAMkoB,SAAS,MAAM,KAAKx5B,QAAQuzB,eAAe;;MAC5D,KAAK9qB,OAAO;aACL,KAAKgtC,YAAY78B,MAAMiW;;WAEzB,KAAKynB,SAAShlC,SAAS,KAAKsH,MAAMuW,KAAKvW,MAAM4U,QAAQ;;EAG9D4nB,KAAK0B,qBAAqB;;QACpBvjB,cAAc,KAAKvzB,QAAQuzB;QAC3BA,eAAe;UACbiG,OAAO,KAAKtG,MAAM3hB,WAAW,KAAK9I,MAAM;UACxC+wB,SAAS;YACP4c,QAAQ,KAAKljB,MAAM3hB,WAAW,KAAK9I,MAAM;YACzC2tC,QAAQ,MAAMA,QAAQ;iBAAa,KAAKE,SAAS19B,MAAMgW,aAAa;;;UAEtE4K,SAAS;YACPjG,eAAe;cACbwjB,UAAU,KAAK7jB,MAAM3hB,WAAW,KAAK9I,MAAM;cAC3CsuC,YAAY;mBAAa,KAAKT,SAAS19B,MAAMI,QAAQ;;;eAEpD,KAAKs9B,SAAS19B,MAAMsX,UAAU;;;WAGlC,KAAKomB,SAAS19B,MAAM+V,UAAU;;EAGvCymB,KAAKS,mBAAmB,UAASvkC;YACvBA;WAGH;;eACI,KAAK4kC;WAGT;UAAM,KAAKztC;eAAY,KAAKgtC,YAAY78B,MAAMyV;WAC9C;UAAM,KAAK5lB;eAAY,KAAKgtC,YAAY78B,MAAM0V;WAC9C;UAAM,KAAK7lB;eAAY,KAAKgtC,YAAY78B,MAAM4V;WAC9C;UAAM,KAAK/lB;eAAY,KAAKgtC,YAAY78B,MAAM2V;WAC9C;UAAM,KAAK9lB;eAAY,KAAKgtC,YAAY78B,MAAMqV;WAC9C;UAAM,KAAKxlB;eAAY,KAAKgtC,YAAY78B,MAAMsV;WAC9C;UAAO,KAAKzlB;eAAY,KAAKgtC,YAAY78B,MAAMuV;WAC/C;UAAO,KAAK1lB;eAAY,KAAKgtC,YAAY78B,MAAMwV;WAC/C;UAAM,KAAK3lB;eAAY,KAAKgtC,YAAY78B,MAAM6V;WAE9C;;YACC,KAAKzuB,QAAQuzB,cAAc;;;UAC7B,KAAK9qB;eACA,KAAKgtC,YAAY78B,MAAMqW;WAE3B;;YACCuK,OAAO,KAAKtG,MAAM3hB,WAAW,KAAK9I,MAAM;YACxC+wB,SAAS,OAAOA,SAAS;iBAAa,KAAKwd,gBAAgB;;;YAC3D,KAAKh3C,QAAQuzB,eAAe;cAC1BiG,SAAS,OAAOA,SAAS;mBAAa,KAAKwd,gBAAgB;;;cAC3Dxd,SAAS,MAAMA,SAAS;mBAAa,KAAKwd,gBAAgB;;;WAK7D;WAAS;WAAS;WAAS;WAAS;WAAS;WAAS;WAAS;WAAS;;eACpE,KAAKb,WAAW;WAGpB;WAAS;;eACL,KAAKc,WAAW3lC;WAOpB;;eACI,KAAK+kC;WAET;WAAS;;eACL,KAAKE,0BAA0BjlC;WAEnC;WAAU;;eACN,KAAKmlC,mBAAmBnlC;WAE5B;;eACI,KAAKolC;WAET;WAAS;;eACL,KAAKC,mBAAmBrlC;WAE5B;WAAS;;eACL,KAAKslC,gBAAgBtlC;WAEzB;WAAS;;eACL,KAAKulC,kBAAkBvlC;WAE3B;;eACI,KAAKwlC;WAET;;eACI,KAAKR,SAAS19B,MAAM4U,QAAQ;;IAGrC,KAAK8M,MAAM,KAAK7xB,KAAK,2BAA2ByuC,oBAAoB5lC,QAAQ;;EAG9E8jC,KAAKkB,WAAW,UAAS/8C,MAAMoN;QACzBpG,MAAM,KAAK2yB,MAAM3rB,MAAM,KAAKkB,KAAK,KAAKA,MAAM9B;IAChD,KAAK8B,OAAO9B;WACL,KAAK8uC,YAAYl8C,MAAMgH;;EAGhC60C,KAAK7M,aAAa;QACZ4O,SAASC,SAASpuC,QAAQ,KAAKP;;UAE7B,KAAKA,OAAO,KAAKyqB,MAAM14B;QAAU,KAAK8/B,MAAMtxB,OAAO;;UACnDqnC,KAAK,KAAKnd,MAAMuG,OAAO,KAAKhxB;UAC5B4pB,UAAUp5B,KAAKo3C;QAAO,KAAK/V,MAAMtxB,OAAO;;WACvCmuC;YACC9G,OAAO;UAAO+G,UAAU;mBACnB/G,OAAO,OAAO+G;UAAWA,UAAU;mBACnC/G,OAAO,QAAQ+G;;;QACxBD,UAAU9G,OAAO;;QACV8G,UAAU;;QACjB,KAAK1uC;;QAELkgC,UAAU,KAAKzV,MAAM3rB,MAAMyB,OAAO,KAAKP;MACzC,KAAKA;QACH4uC,aAAa,KAAK5uC;QAClBkwB,QAAQ,KAAK2e;QACb,KAAK9gB;MAAe,KAAKsD,WAAWud;;;QAGpC9G,QAAQ,KAAKzY,gBAAgB,KAAKA,kBAAkBkX,sBAAsB;IAC9EuB,MAAMX,MAAM5mC,OAAO2/B,SAAShQ;IAC5B,KAAK2X,oBAAoBC;IACzB,KAAKE,sBAAsBF;;QAGvBxwC,QAAQ;;MAEVA,YAAY3B,OAAOuqC,SAAShQ;aACrB/8B;WAKF,KAAK65C,YAAY78B,MAAMmV;MAAS4a,SAASA;MAAShQ,OAAOA;MAAO54B,OAAOA;;;;;;EAOhFq1C,KAAKmC,UAAU,UAASC,OAAO3vC,KAAK4vC;;QAE9BC,kBAAkB,KAAK13C,QAAQuzB,eAAe,MAAM1rB,QAAQ1P;;;;QAK5Dw/C,8BAA8BF,kCAAkC,KAAKvkB,MAAM3hB,WAAW,KAAK9I,SAAS;QAEpGO,QAAQ,KAAKP,KAAKmvC,QAAQ,GAAGC,WAAW;aACnCt9C,IAAI,GAAGqB,IAAIiM,OAAO,OAAO6J,WAAW7J,KAAKtN,IAAIqB,MAAKrB,KAAK,KAAKkO;UAC/D6I,OAAO,KAAK4hB,MAAM3hB,WAAW,KAAK9I,MAAMlH,WAAY;UAEpDm2C,mBAAmBpmC,SAAS;YAC1BqmC;UAA+B,KAAK7c,iBAAiB,KAAKryB,KAAK;;YAC/DovC,aAAa;UAAM,KAAK/c,iBAAiB,KAAKryB,KAAK;;YACnDlO,MAAM;UAAK,KAAKugC,iBAAiB,KAAKryB,KAAK;;QAC/CovC,WAAWvmC;;;UAITA,QAAQ;QAAM/P,MAAM+P,OAAO,KAAK;;;UAC3BA,QAAQ;QAAM/P,MAAM+P,OAAO,KAAK;;;UAChCA,QAAQ,MAAMA,QAAQ;QAAM/P,MAAM+P,OAAO;;;;QAC3C/P,MAAMmQ;;UACTnQ,OAAOi2C;;;MACXK,WAAWvmC;MACXsmC,QAAQA,QAAQJ,QAAQj2C;;QAGtBm2C,mBAAmBG,aAAa;MAAM,KAAK/c,iBAAiB,KAAKryB,MAAM,GAAG;;QAC1E,KAAKA,QAAQO,SAASnB,OAAO,QAAQ,KAAKY,MAAMO,UAAUnB;aAAc;;WAErE+vC;;EAGT,wBAAwBr3C,KAAKo3C;QACvBA;aACKnsC,SAASjL,KAAK;;;WAIhBu3C,WAAWv3C,IAAI0C,QAAQ,MAAM;;EAGtC,wBAAwB1C;eACXw3C,WAAW;aACb;;;WAIFA,OAAOx3C,IAAI0C,QAAQ,MAAM;;EAGlCmyC,KAAK4B,kBAAkB,UAASQ;QAC1BxuC,QAAQ,KAAKP;IACjB,KAAKA,OAAO;;QACRlH,MAAM,KAAKg2C,QAAQC;QACnBj2C,OAAO;MAAQ,KAAK+4B,MAAM,KAAKtxB,QAAQ,GAAG,8BAA8BwuC;;QACxE,KAAKx3C,QAAQuzB,eAAe,MAAM,KAAKL,MAAM3hB,WAAW,KAAK9I,SAAS;MACxElH,MAAMy2C,eAAe,KAAK9kB,MAAM3rB,MAAMyB,OAAO,KAAKP;QAChD,KAAKA;eACEwzB,kBAAkB,KAAK0Z;MAAwB,KAAKrb,MAAM,KAAK7xB,KAAK;;WACxE,KAAKgtC,YAAY78B,MAAMkV,KAAKvsB;;;EAKrC6zC,KAAKe,aAAa,UAAS8B;QACrBjvC,QAAQ,KAAKP;SACZwvC,iBAAiB,KAAKV,QAAQ,IAAIp/C,WAAW,UAAU;MAAQ,KAAKmiC,MAAMtxB,OAAO;;QAClFkvC,QAAQ,KAAKzvC,MAAMO,SAAS,KAAK,KAAKkqB,MAAM3hB,WAAWvI,WAAW;QAClEkvC,SAAS,KAAKh6B;MAAU,KAAKoc,MAAMtxB,OAAO;;QAC1CwwB,OAAO,KAAKtG,MAAM3hB,WAAW,KAAK9I;SACjCyvC,UAAUD,iBAAiB,KAAKj4C,QAAQuzB,eAAe,MAAMiG,SAAS;UACrE2e,QAAQH,eAAe,KAAK9kB,MAAM3rB,MAAMyB,OAAO,KAAKP;QACtD,KAAKA;UACHwzB,kBAAkB,KAAK0Z;QAAwB,KAAKrb,MAAM,KAAK7xB,KAAK;;aACjE,KAAKgtC,YAAY78B,MAAMkV,KAAKqqB;;QAEjCD,UAAS,QAAOj/C,KAAK,KAAKi6B,MAAM3rB,MAAMyB,OAAO,KAAKP;MAASyvC,QAAQ;;QACnE1e,SAAS,OAAO0e;;QAChB,KAAKzvC;MACP,KAAK8uC,QAAQ;MACb/d,OAAO,KAAKtG,MAAM3hB,WAAW,KAAK9I;;SAE/B+wB,SAAS,MAAMA,SAAS,SAAS0e;;MACpC1e,OAAO,KAAKtG,MAAM3hB,aAAa,KAAK9I;UAChC+wB,SAAS,MAAMA,SAAS;UAAQ,KAAK/wB;;;UACrC,KAAK8uC,QAAQ,QAAQ;QAAQ,KAAKjd,MAAMtxB,OAAO;;;QAEjDizB,kBAAkB,KAAK0Z;MAAwB,KAAKrb,MAAM,KAAK7xB,KAAK;;QAEpElH,MAAM62C,eAAe,KAAKllB,MAAM3rB,MAAMyB,OAAO,KAAKP,MAAMyvC;WACrD,KAAKzC,YAAY78B,MAAMkV,KAAKvsB;;;EAKrC6zC,KAAKiD,gBAAgB;QACfhI,KAAK,KAAKnd,MAAM3hB,WAAW,KAAK9I,MAAM6I;QAEtC++B,OAAO;;UACL,KAAKrwC,QAAQuzB,cAAc;QAAK,KAAKuG;;UACrCwe,YAAY,KAAK7vC;MACrB6I,OAAO,KAAKinC,YAAY,KAAKrlB,MAAMz6B,QAAQ,KAAK,KAAKgQ,OAAO,KAAKA;QAC/D,KAAKA;UACH6I,OAAO;QAAY,KAAKknC,mBAAmBF,SAAS;;;MAExDhnC,OAAO,KAAKinC,YAAY;;WAEnBjnC;;EAGT,6BAA6BA;;QAEvBA,QAAQ;aAAiBjO,OAAO2J,aAAasE;;IACjDA,QAAQ;WACDjO,OAAO2J,cAAcsE,QAAQ,MAAM,SAASA,OAAO,QAAQ;;EAGpE8jC,KAAK6B,aAAa,UAASwB;QACrBx0C,MAAM,IAAIy0C,eAAe,KAAKjwC;;UAE5B,KAAKA,OAAO,KAAKyqB,MAAM14B;QAAU,KAAK8/B,MAAM,KAAKtxB,OAAO;;UACxDqnC,KAAK,KAAKnd,MAAM3hB,WAAW,KAAK9I;UAChC4nC,OAAOoI;;;UACPpI,OAAO;;QACTpsC,OAAO,KAAKivB,MAAM3rB,MAAMmxC,YAAY,KAAKjwC;QACzCxE,OAAO,KAAK00C,gBAAgB;QAC5BD,aAAa,KAAKjwC;;YAEdutC,UAAU3F,IAAI,KAAKrwC,QAAQuzB,eAAe;UAAO,KAAK+G,MAAM,KAAKtxB,OAAO;;UAC1E,KAAKP;;;IAGXxE,OAAO,KAAKivB,MAAM3rB,MAAMmxC,YAAY,KAAKjwC;WAClC,KAAKgtC,YAAY78B,MAAMhY,QAAQqD;;;MAKpC20C;EAEJxD,KAAKnI,uBAAuB;IAC1B,KAAK4L,oBAAoB;;MAEvB,KAAKC;aACEp+B;UACHA,QAAQk+B;QACV,KAAKG;;cAECr+B;;;IAIV,KAAKm+B,oBAAoB;;EAG3BzD,KAAKoD,qBAAqB,UAASQ,UAAU99C;QACvC,KAAK29C,qBAAqB,KAAK74C,QAAQuzB,eAAe;YAClDqlB;;MAEN,KAAKte,MAAM0e,UAAU99C;;;EAIzBk6C,KAAK0D,gBAAgB;QACf70C,MAAM,IAAIy0C,aAAa,KAAKjwC;;UAE1B,KAAKA,OAAO,KAAKyqB,MAAM14B;QAAU,KAAK8/B,MAAM,KAAKtxB,OAAO;;UACxDqnC,KAAK,KAAKnd,MAAM3hB,WAAW,KAAK9I;UAChC4nC,OAAO,MAAMA,OAAO,MAAM,KAAKnd,MAAM3hB,WAAW,KAAK9I,MAAM,OAAO;;YAChE,KAAKA,QAAQ,KAAKO,UAAU,KAAKzP,SAASqf,MAAMkW,YAAY,KAAKv1B,SAASqf,MAAMmW;cAC9EshB,OAAO;YACT,KAAK5nC,OAAO;mBACL,KAAKgtC,YAAY78B,MAAMsW;;cAE5B,KAAKzmB;mBACA,KAAKgtC,YAAY78B,MAAMqW;;;QAGlChrB,OAAO,KAAKivB,MAAM3rB,MAAMmxC,YAAY,KAAKjwC;eAClC,KAAKgtC,YAAY78B,MAAMkW,UAAU7qB;;UAEtCosC,OAAO;;QACTpsC,OAAO,KAAKivB,MAAM3rB,MAAMmxC,YAAY,KAAKjwC;QACzCxE,OAAO,KAAK00C,gBAAgB;QAC5BD,aAAa,KAAKjwC;iBACTutC,UAAU3F;QACnBpsC,OAAO,KAAKivB,MAAM3rB,MAAMmxC,YAAY,KAAKjwC;UACvC,KAAKA;gBACC4nC;eACH;gBACC,KAAKnd,MAAM3hB,WAAW,KAAK9I,SAAS;gBAAQ,KAAKA;;eAClD;YACHxE,OAAO;;;YAGPA,OAAOZ,OAAO2J,aAAaqjC;;;YAGzB,KAAKrwC,QAAQg0B;YACb,KAAK0C;UACP,KAAKD,YAAY,KAAKhuB;;QAExBiwC,aAAa,KAAKjwC;;UAEhB,KAAKA;;;;;EAMb2sC,KAAK2D,2BAA2B;WACvB,KAAKtwC,MAAM,KAAKyqB,MAAM14B,QAAQ,KAAKiO;cAChC,KAAKyqB,MAAM,KAAKzqB;aACnB;YACD,KAAKA;;aAGJ;cACC,KAAKyqB,MAAM,KAAKzqB,MAAM,OAAO;;;aAK9B;iBACI,KAAKgtC,YAAY78B,MAAMmW,iBAAiB,KAAKmE,MAAM3rB,MAAM,KAAKyB,OAAO,KAAKP;;;IAKrF,KAAK6xB,MAAM,KAAKtxB,OAAO;;;EAKzBosC,KAAKuD,kBAAkB,UAASM;QAC1B5I,KAAK,KAAKnd,MAAM3hB,aAAa,KAAK9I;MACpC,KAAKA;YACC4nC;WACH;eAAY;WACZ;eAAY;WACZ;eAAYhtC,OAAO2J,aAAa,KAAKurC,YAAY;WACjD;eAAYrB,oBAAoB,KAAKmB;WACrC;eAAY;WACZ;eAAW;WACX;eAAY;WACZ;eAAY;WACZ;YAAQ,KAAKnlB,MAAM3hB,WAAW,KAAK9I,SAAS;YAAQ,KAAKA;;WACzD;;YACC,KAAKzI,QAAQg0B;UAAa,KAAKyC,YAAY,KAAKhuB;YAAO,KAAKiuB;;eACzD;WACJ;WACA;YACCuiB;cACEX,UAAU,KAAK7vC,MAAM;UAEzB,KAAK+vC,mBACHF,SACA;iBAGK;;;YAGLjI,MAAM,MAAMA,MAAM;cAChB6I,WAAW,KAAKhmB,MAAMznB,OAAO,KAAKhD,MAAM,GAAG,GAAGuZ,MAAM,WAAW;cAC/Dk2B,QAAQ1sC,SAAS0tC,UAAU;cAC3BhB,QAAQ;YACVgB,WAAWA,SAAS3xC,MAAM,IAAI;YAC9B2wC,QAAQ1sC,SAAS0tC,UAAU;;UAE7B,KAAKzwC,OAAOywC,SAAS1+C,SAAS;UAC9B61C,KAAK,KAAKnd,MAAM3hB,WAAW,KAAK9I;eAC3BywC,aAAa,OAAO7I,OAAO,MAAMA,OAAO,QAAQ,KAAKnyB,UAAU+6B;YAClE,KAAKT,mBACH,KAAK/vC,MAAM,IAAIywC,SAAS1+C,QACxBy+C,aACI,qCACA;;iBAGD51C,OAAO2J,aAAakrC;;YAEzBlC,UAAU3F;;;iBAGL;;eAEFhtC,OAAO2J,aAAaqjC;;;;EAM/B+E,KAAKmD,cAAc,UAAS1wC;QACtBywC,UAAU,KAAK7vC;QACfe,IAAI,KAAK+tC,QAAQ,IAAI1vC;QACrB2B,MAAM;MAAQ,KAAKgvC,mBAAmBF,SAAS;;WAC5C9uC;;;;;;;EAST4rC,KAAKkC,YAAY;IACf,KAAK9gB,cAAc;QACf2iB,OAAO,IAAI/U,QAAQ,MAAMsU,aAAa,KAAKjwC;QAC3CqkB,SAAS,KAAK9sB,QAAQuzB,eAAe;WAClC,KAAK9qB,MAAM,KAAKyqB,MAAM14B;UACvB61C,KAAK,KAAKsF;UACVzZ,iBAAiBmU,IAAIvjB;QACvB,KAAKrkB,OAAO4nC,MAAM,SAAS,IAAI;iBACtBA,OAAO;;QAChB,KAAK7Z,cAAc;QACnB2iB,QAAQ,KAAKjmB,MAAM3rB,MAAMmxC,YAAY,KAAKjwC;YACtC2wC,WAAW,KAAK3wC;YAChB,KAAKyqB,MAAM3hB,aAAa,KAAK9I,SAAS;;UACtC,KAAK+vC,mBAAmB,KAAK/vC,KAAK;;UACpC,KAAKA;YACH4wC,MAAM,KAAKhB;cACTjU,QAAQnI,oBAAoBC,kBAAkBmd,KAAKvsB;UACrD,KAAK0rB,mBAAmBY,UAAU;;QACtCD,QAAQjC,oBAAoBmC;QAC5BX,aAAa,KAAKjwC;;;;MAIpB27B,QAAQ;;WAEH+U,OAAO,KAAKjmB,MAAM3rB,MAAMmxC,YAAY,KAAKjwC;;;;EAMlD2sC,KAAKQ,WAAW;QACVuD,OAAO,KAAK7B;QACZ/9C,OAAOqf,MAAM9Y;QACb,KAAKwsB,SAASrzB,KAAKkgD;MACrB5/C,OAAOs0B,WAAWsrB;;WAEb,KAAK1D,YAAYl8C,MAAM4/C;;;MAK5BtiC,UAAU;EAEdmf,OAAO9J;IACL8J,QAAQA;IACRnf,SAASA;IACTyc,gBAAgBA;IAChBT,UAAUA;IACVG,gBAAgBA;IAChBuY,aAAaA;IACba,MAAMA;IACNpf,WAAWA;IACXssB,UAAU1gC;IACV2gC,cAAc1rB;IACdye,YAAYA;IACZkN,aAAa9M;IACbxQ,kBAAkBA;IAClBD,mBAAmBA;IACnBkZ,OAAOA;IACPa,WAAWA;IACX3jB,WAAWA;IACXC,YAAYA;IACZE,oBAAoBA;;;;;;;;EAUtB,eAAeU,OAAOlzB;WACbg2B,OAAO18B,MAAM45B,OAAOlzB;;;;;EAO7B,2BAA2BkzB,OAAOzqB,KAAKzI;WAC9Bg2B,OAAOzc,kBAAkB2Z,OAAOzqB,KAAKzI;;;;EAM9C,mBAAmBkzB,OAAOlzB;WACjBg2B,OAAOoD,UAAUlG,OAAOlzB;;EAGjCH,QAAQusC,OAAOA;EACfvsC,QAAQm2B,SAASA;EACjBn2B,QAAQgzB,WAAWA;EACnBhzB,QAAQmzB,iBAAiBA;EACzBnzB,QAAQysC,aAAaA;EACrBzsC,QAAQs1C,QAAQA;EAChBt1C,QAAQmtB,YAAYA;EACpBntB,QAAQyzB,iBAAiBA;EACzBzzB,QAAQ0rC,cAAcA;EACtB1rC,QAAQq8B,mBAAmBA;EAC3Br8B,QAAQo8B,oBAAoBA;EAC5Bp8B,QAAQm2C,YAAYA;EACpBn2C,QAAQ05C,eAAe1rB;EACvBhuB,QAAQwyB,YAAYA;EACpBxyB,QAAQyyB,aAAaA;EACrBzyB,QAAQ2yB,qBAAqBA;EAC7B3yB,QAAQvG,QAAQA;EAChBuG,QAAQ0Z,oBAAoBA;EAC5B1Z,QAAQ25C,cAAc9M;EACtB7sC,QAAQy5C,WAAW1gC;EACnB/Y,QAAQu5B,YAAYA;EACpBv5B,QAAQgX,UAAUA;EAElB9V,OAAOoE,eAAetF,SAAS;IAAgBE,OAAO;;;;;AC/jKxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzvSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AClnxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACtvvHA;AACA;AACA;AACA;;;ACHA;;IAEI05C,gBAAgBr6C,QAAQ;IACxBsC,UAAUtC,QAAQ;AAEtBlI,OAAO2I,UAAUnG;AAEjB,kCAAkCggD;UACxBA;SACD;aACI;SACJ;aACI;;;AAIb,gBAAgB55C,MAAMS,KAAKP,SAAS25C,kBAAkBC;EACpDA,WAAWA,YAAY;MACnBC;;;MAGAA,SAASn4C,QAAQo4C,KAAK,mBAAmBh6C;QACvCe,SAAS84C,oBAAoBtmC,QAAQD;;aAEhCtP;MACP+1C,SAASz6C,QAAQsC,QAAQ,mBAAmB5B;;WAEvCgE;QACH4W,UAAUra,MAAM,sBAAsBP,OAAO;IACjD4a,IAAIpJ,OAAO;UACLoJ;;MAEJq/B,KAAKN,cAAcr6C,QAAQy6C;;MAE3B38B,SAAS68B,GAAGH,UAAUr5C,KAAKP,SAASA,SAASvE;MAC7CuE,WAAWA,QAAQg6C;QACjBC,mBAAmBC,yBAAyBH,GAAGL;QAC/CO;;QAEA/8B,SAASxjB,OAAOugD,kBAAkB/8B,QAAQ,MAAMy8B;eACzC71C;;;SAKNotpNA;;;;;;;;;;;;AAYAhmB,OAAO2I,UAAUs6C;AACjB,iBAAiBC;OACRxkC,MAAMpb;IACP6/C;IACAC,WAAW;;;EAGf1kC,MAAMA,MAAMpb,UAAU4/C;;IAGtBxkC;;;IAGA0kC,WAAW;;;;IAIXD;;;;IAIAhnB,QAAQ;;;;IAIRknB,WAAW;;;;;;;AAQf;SACWlnB,QAAQzd,MAAMpb;QACbggD,eAAennB;;;IAGnBA,QAAQA,QAAQ;IAChBzd,MAAM4kC,cAAc/iD;;;;;;QAMhB47B,QAAQknB;;;eAGCE,OAAO,GAAGC,YAAY9kC,MAAMpb,SAAS64B,OAAOonB,OAAOC,WAAWD;QACnE7kC,MAAM6kC,QAAQ7kC,MAAM6kC,OAAOpnB;;MAE/Bzd,MAAMpb,UAAU64B;MAChBA,QAAQ;;;EAGhBzd,MAAMpb,SAAS;EACf64B,QAAQ;EACRinB,WAAW;;;;;;;;;;IAaXvO,eAAevmB,WAAW,cAAcA,SAAS3iB;IACjD83C,0BAA0B5O,MAAM6O,oBAAoB7O,MAAM8O;;;;;;;;;;;;WAanDF,4BAA4B;EACnCN,eAAeS,oCAAoCC;;EA8BnDV,eAAeW,yBAAyBD;;;;;;;AAQ5CZ,QAAQE,eAAeA;;;AAIvB,6CAA6CY;MACrCC,SAAS;MACTC,eAAeR,wBAAwBM;MACvC3iB,OAAO98B,SAAS4/C,eAAe;EACnCD,SAASE,QAAQ/iB;IAAOgjB,eAAe;;SAChC;IACHJ,UAAUA;IACV5iB,KAAK3gC,OAAOujD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CpB,kCAAkCD;SACvB;;;;;QAKCM,gBAAgBx9C,WAAWy9C,aAAa;;;;QAIxCC,iBAAiBC,YAAYF,aAAa;IAE9C;;;MAGIhmC,aAAa+lC;MACbI,cAAcF;MACdR;;;;;;;AAQZd,QAAQa,2BAA2BA;;;ACvNnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACfjIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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CAAZ;AACA,MAAI69B,GAAG,GAAGkqE,gBAAgB,CAACliG,GAAD,CAA1B;A;AACA,MAAI,CAACg4B,GAAL,EAAU;AACRA,IAAAA,GAAG,GAAGjD,MAAN;A;AACA,SAAK,MAAM71B,MAAX,IAAqBkjG,UAArB,EAAiC;AAC/BpqE,MAAAA,GAAG,GAAGu5D,YAAY,CAACryF,MAAD,CAAZ,CAAqB84B,GAArB,CAAN;AACD;A;AACDkqE,IAAAA,gBAAgB,CAACliG,GAAD,CAAhB,GAAwBg4B,GAAxB;AACD;A;AACD,SAAOA,GAAP;AACD;A;A;A;A;A;;ACnroBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxzmJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACtuCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxrGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC1BA;AAEAl4B,OAAOoE,eAAetF,SAAS;EAC7BE,OAAO;;AAETF,QAAQyjG,mCAAmCzjG,QAAQ0jG,8BAA8B1jG,QAAQ2jG,oBAAoB3jG,QAAQ4jG,4BAA4B5jG,QAAQ6jG,+BAA+B7jG,QAAQ8jG,sBAAsB;IAElNC,MAAMxkG,QAAQ;IAEdykG,qBAAqBzkG,QAAQ;IAE7B0kG,6BAA6B1kG,QAAQ;IAErC2kG,aAAa3kG,QAAQ;IAErB4kG,SAAS5kG,QAAQ;CAEpB,GAAG4kG,OAAOpnC,SAAS;EAClBqnC;IACEjgE;MACEkgE,WAAW,GAAGF,OAAO/xC,QAAQ,GAAG+xC,OAAOG,iBAAiB,WAAW,GAAGH,OAAOI,aAAa,GAAGJ,OAAOK,uBAAuB,QAAQ,cAAc;MACjJznC,2BAAoDzkE;;;EAGxDmsG,UAAU;EACVC,UAAU;;CAEX,GAAGP,OAAOpnC,SAAS;EAClBqnC;IACE9pF;MACE+pF,WAAU;;kBAEE,GAAGF,OAAOG,iBAAiB;;cAG/BnS,cAAc,GAAGgS,OAAOQ,gBAAgBT,WAAWU;cACnD97D,WAAW,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,kBAAkB,cAAc;eACnCL;;;IAGXriE;MACEu6B,SAAS;;IAEX/0B;MACEq8D,wBAAiD,GAAGF,OAAOG,iBAAiB,cAAc,GAAGH,OAAO/xC,QAAQ,GAAG+xC,OAAOG,iBAAiB,aAAa,GAAGH,OAAOgC;;;;CAInK,GAAGhC,OAAOpnC,SAAS;EAClB0nC,UAAU,UAAU,aAAa,kBAAkB;EACnDM,UAAU,UAAU,aAAa;EACjCL,UAAU;EACVN;IACE97D;MACE+7D,WAAW,GAAGF,OAAOW,gBAAgB;;IAEvC/7F;MACEs7F,WAAW,GAAGF,OAAO/xC,QAAQ,GAAG+xC,OAAOG,iBAAiB,WAAW,GAAGH,OAAOI,aAAa,GAAGJ,OAAOW,gBAAgB,cAAc,iBAAiB,qBAAqB;;IAE1K98D;MACEq8D,wBAAiD,GAAGF,OAAOG,iBAAiB,cAAc,GAAGH,OAAO/xC,QAAQ,GAAG+xC,OAAOG,iBAAiB,aAAa,GAAGH,OAAOgC;;IAEhKj+B;MACEm8B,WAAW,GAAGF,OAAOW,gBAAgB;MACrC98D,UAAU;;IAEZ6oB;MACEwzC,WAAW,GAAGF,OAAOW,gBAAgB;MACrC98D,UAAU;;;;;;AC78ChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC/CA;AAEA9mC,OAAOoE,eAAetF,SAAS;EAC7BE,OAAO;;AAETF,QAAQqkG,WAAWA;AACnBrkG,QAAQomG,SAASA;AACjBpmG,QAAQqmG,eAAeA;AACvBrmG,QAAQ6lG,mBAAmBA;AAC3B7lG,QAA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AkB;;;;CAI3I,GAAGX,OAAOpnC,SAAS;EAClBqnC;IACEjgE;MACEkgE,WAAW,GAAGF,OAAO/xC,QAAQ,GAAG+xC,OAAOG,iBAAiB,WAAW,GAAGH,OAAOI,aAAa,GAAGJ,OAAOW,gBAAgB,cAAc;MAClI/nC;;;EAGJ0nC,UAAU;EACVC,UAAU;;CAEX,GAAGP,OAAOpnC,SAAS;EAClBgoC,UAAU;EACVX;IACElkG;MACEmkG,WAAW,GAAGF,OAAOG,iBAAiB;;;EAG1CI,UAAU,cAAc,WAAW,WAAW;;CAE/C,GAAGP,OAAOpnC,SAAS;EAClB0nC,UAAU;EACVL;IACExoG;MACEyoG,WAAW,GAAGF,OAAO/xC,QAAQ,GAAG+xC,OAAOG,iBAAiB,WAAW,GAAGH,OAAOI,aAAa,GAAGJ,OAAOW,gBAAgB;;;EAGxHJ,UAAU,YAAY;;CAEvB,GAAGP,OAAOpnC,SAAS;EAClB0nC,UAAU;EACVL;IACExoG;MACEyoG,WAAW,GAAGF,OAAOW,gBAAgB;;;EAGzCJ,UAAU;;;;ACphbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACflBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC5EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACphHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzrjGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjlHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AEdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC7MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACh/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjrJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;ACpBA,0CAAoC;AACpC,2CAA6C;AAC7C,gDAAkC;AAClC,wDAA+B;AAE/B,MAAM,YAAY,GAAG;IACnB,0BAA0B,EAAE,IAAI;IAChC,2BAA2B,EAAE,IAAI;CAClC,CAAC;AAEF;A;A;A;A;A;GAMG;AACH,SAAwB,OAAO,CAC7B,GAAW,EACX,GAAW,EACX,UAAoB,EAAE;IAEtB,sDAAsD;IACtD,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC;IACf,sDAAsD;IACtD,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC;IAEf,IAAI,GAAG,CAAC;IACR,IAAI;QACF,GAAG,GAAG,cAAK,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;KAChC;IAAC,OAAO,CAAC,EAAE;QACV,MAAM,MAAM,CAAC,MAAM,CACjB,IAAI,KAAK,CAAC,2CAA2C,CAAC,EACtD;YACE,SAAS,EAAE,KAAK;YAChB,YAAY,EAAE,CAAC;SAChB,CACF,CAAC;KACH;IACD,IAAI,MAAM,CAAC;IACX,IAAI;QACF,MAAM,GAAG,cAAK,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;KACnC;IAAC,OAAO,CAAC,EAAE;QACV,MAAM,MAAM,CAAC,MAAM,CACjB,IAAI,KAAK,CAAC,kDAAkD,CAAC,EAC7D;YACE,SAAS,EAAE,KAAK;YAChB,YAAY,EAAE,CAAC;SAChB,CACF,CAAC;KACH;IACD,MAAM,UAAU,GAAG,IAAI,GAAG,CAAC;QACzB,WAAW;QACX,MAAM;QACN,GAAG,OAAO;QACV,GAAG,iBAAM,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;KACrC,CAAC,CAAC;IAEH,MAAM,IAAI,GAAG,IAAI,GAAG,CAClB,iBAAM,CAAC,GAAG,CAAC;SACR,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC;SAC5B,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CACrC,CAAC;IAEF,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC;QAAE,OAAO,GAAG,CAAC;IAEhC,IAAI,YAAY,GAAG,EAAE,CAAC;IACtB,IAAI,KAAK,GAAG,iBAAiB,CAAC;IAC9B,IAAI,MAAM,GAAG,gBAAgB,CAAC;IAC9B,IAAI,CAAC,CAAC,iBAAiB,CAAC,GAAG,CAAC,EAAE;QAC5B,KAAK,GAAG,GAAG,CAAC;KACb;SAAM;QACL,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;YAC/C,KAAK,IAAI,GAAG,CAAC;SACd;QACD,YAAY,GAAG,OAAO,KAAK,OAAO,GAAG,IAAI,CAAC;KAC3C;IACD,OAAO,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;QACjD,MAAM,IAAI,GAAG,CAAC;KACf;IAED,MAAM,IAAI,GAAG;QACX,MAAM;QACN,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CACrB,CAAC,CAAC,EAAE,EAAE,CACJ,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,KAAK;UAC9B,KAAK,IAAI,CAAC;iBACH,CAAC,sBAAsB,CAAC,cAAc,CAClD;KACF,CAAC;IAEF,MAAM,SAAS,GAAG,aAAa,CAAC,GAAG,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC;IAElD,OAAO;MACH,YAAY;MACZ,SAAS,CAAC,MAAM;iBACL,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;QACpC,SAAS,CAAC,IAAI;aACT,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;MACtB,SAAS,CAAC,KAAK,GAAG,CAAC;AACzB,CAAC;AAnFD,0BAmFC;AAOD,MAAM,qBAAqB,GAAG,sBAAI,CAAqB;IACrD,QAAQ,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE;QACxB,gDAAgD;IAClD,CAAC;IAED,eAAe,CAAC,IAAI,EAAE,KAAK;QACzB,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC;QACvB,IAAI,KAAK,GAAG,EAAE,CAAC;QACf,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,KAAK,GAAG,WAAW,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;SACnD;QACD,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,WAAW,KAAK,IAAI,CAAC,CAAC;IAC5C,CAAC;CACF,CAAC,CAAC;AAEH;A;A;A;A;A;GAMG;AACH,SAAS,aAAa,CAAC,GAAW,EAAE,GAAW,EAAE,MAAc;IAC7D,MAAM,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IAEhC,MAAM,KAAK,GAAuB;QAChC,SAAS,EAAE,KAAK;QAChB,MAAM,CAAC,IAAI;YACT,OAAO,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,KAAM,EAAE,IAAI,CAAC,GAAI,CAAC,CAAC;QAC3C,CAAC;QACD,OAAO,CAAC,IAAI,EAAE,GAAG;YACf,SAAS,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,KAAM,EAAE,IAAI,CAAC,GAAI,CAAC,CAAC;YAC3C,SAAS,CAAC,IAAI,CAAC,KAAM,CAAC,GAAG,GAAG,CAAC;QAC/B,CAAC;KACF,CAAC;IAEF,qBAAqB,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IAElC,OAAO;QACL,MAAM,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,MAAM,KAAK,CAAC,CAAC,CAAC,EAAE;QACjD,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC;QACxB,KAAK,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,MAAM,YAAY,MAAM,QAAQ,CAAC,CAAC,CAAC,EAAE;KACvE,CAAC;AACJ,CAAC;AAED,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC;AACzB,MAAM,CAAC,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC;;;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;ACzJjC,gDAAkC;AAClC,wDAAgC;AAEhC,MAAM,YAAY,GAA+B,CAAS,CAAC,YAAY,CAAC;AACxE,IACE,CAAC,CACC,YAAY;IACZ,mDAAmD;IACnD,OAAO,YAAY,KAAK,QAAQ;IAChC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,KAAK,CAC7B,CAAC,GAAG,EAAE,EAAE,CACN,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QAChC,mDAAmD;QACnD,YAAY,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,QAAQ,CAAC,CACxD,CACF,EACD;IACA,MAAM,IAAI,KAAK,CACb,6DAA6D,CAC9D,CAAC;CACH;AAoBD,SAAgB,MAAM,CAAgB,QAAgC;IACpE,MAAM,GAAG,GAAG,iBAAO,CAAC,QAAQ,CAAC,CAAC;IAC9B,OAAO,CAAC,IAAY,EAAE,KAAa,EAAE,EAAE;QACrC,CAAC,SAAS,OAAO,CAAC,IAAI;YACpB,IAAI,CAAC,IAAI;gBAAE,OAAO;YAElB,MAAM,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAE/B,IAAI,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK,EAAE;gBAClB,KAAK,MAAM,CAAC,IAAI,OAAO,CAAC,KAAK,EAAE;oBAC7B,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;iBAChB;aACF;YAED,KAAK,MAAM,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE;gBAC/C,MAAM,OAAO,GAAI,IAAY,CAAC,GAAG,CAAC,CAAC;gBACnC,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;oBAC1B,KAAK,MAAM,UAAU,IAAI,OAAO,EAAE;wBAChC,OAAO,CAAC,UAAU,CAAC,CAAC;qBACrB;iBACF;qBAAM;oBACL,OAAO,CAAC,OAAO,CAAC,CAAC;iBAClB;aACF;YAED,IAAI,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,IAAI,EAAE;gBACjB,KAAK,MAAM,CAAC,IAAI,OAAO,CAAC,IAAI,EAAE;oBAC5B,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;iBAChB;aACF;QACH,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IACX,CAAC,CAAC;AACJ,CAAC;AAhCD,wBAgCC;AAiBD,SAAgB,QAAQ,CAAgB,QAAiC;IACvE,MAAM,GAAG,GAAG,iBAAO,CAAC,QAAQ,CAAC,CAAC;IAC9B,OAAO,CAAC,IAAY,EAAE,KAAa,EAAE,EAAE;QACrC,MAAM,SAAS,GAAa,EAAE,CAAC;QAE/B,CAAC,SAAS,OAAO,CAAC,IAAI;YACpB,IAAI,CAAC,IAAI;gBAAE,OAAO;YAElB,MAAM,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAE/B,MAAM,KAAK,GAAG,IAAI,KAAK,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YACvD,IAAI,KAAK;gBAAE,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAEhC,IAAI,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK,EAAE;gBAClB,KAAK,MAAM,CAAC,IAAI,OAAO,CAAC,KAAK,EAAE;oBAC7B,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;iBAC3B;aACF;YAED,KAAK,MAAM,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE;gBAC/C,MAAM,OAAO,GAAI,IAAY,CAAC,GAAG,CAAC,CAAC;gBACnC,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;oBAC1B,KAAK,MAAM,UAAU,IAAI,OAAO,EAAE;wBAChC,OAAO,CAAC,UAAU,CAAC,CAAC;qBACrB;iBACF;qBAAM;oBACL,OAAO,CAAC,OAAO,CAAC,CAAC;iBAClB;aACF;YAED,IAAI,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,IAAI,EAAE;gBACjB,KAAK,MAAM,CAAC,IAAI,OAAO,CAAC,IAAI,EAAE;oBAC5B,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;iBAC3B;aACF;YAED,IAAI,KAAK;gBAAE,SAAS,CAAC,GAAG,EAAE,CAAC;QAC7B,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IACX,CAAC,CAAC;AACJ,CAAC;AAvCD,4BAuCC;AAUD,SAAgB,SAAS,CAAgB,QAAmC;IAC1E,MAAM,GAAG,GAAG,iBAAO,CAAC,QAAQ,CAAC,CAAC;IAC9B,OAAO,CAAC,IAAY,EAAE,KAAa,EAAE,EAAE;QACrC,CAAC,SAAS,OAAO,CAAC,IAAY;YAC5B,IAAI,CAAC,IAAI;gBAAE,OAAO;YAElB,MAAM,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC/B,IAAI,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,KAAK,EAAE;gBAClB,KAAK,MAAM,CAAC,IAAI,OAAO,CAAC,KAAK,EAAE;oBAC7B,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;iBACzB;aACF;iBAAM;gBACL,KAAK,MAAM,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE;oBAC/C,MAAM,OAAO,GAAI,IAAY,CAAC,GAAG,CAAC,CAAC;oBACnC,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;wBAC1B,KAAK,MAAM,UAAU,IAAI,OAAO,EAAE;4BAChC,OAAO,CAAC,UAAU,CAAC,CAAC;yBACrB;qBACF;yBAAM;wBACL,OAAO,CAAC,OAAO,CAAC,CAAC;qBAClB;iBACF;aACF;QACH,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IACX,CAAC,CAAC;AACJ,CAAC;AAzBD,8BAyBC;;;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;ACnKD,gDAAkC;AAElC,IACE,CAAC,CACC,KAAK,CAAC,OAAO,CAAE,CAAS,CAAC,KAAK,CAAC;IAC9B,CAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,QAAQ,CAAC,CAC1D,EACD;IACA,MAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAAC;CACzE;AAED,MAAM,kBAAkB,GAA+B,CAAS;KAC7D,kBAAkB,CAAC;AACtB,MAAM,KAAK,GAAG,IAAI,GAAG,CAAU,CAAS,CAAC,KAAK,CAAC,CAAC;AAEhD,IACE,CAAC,CACC,kBAAkB;IAClB,mDAAmD;IACnD,OAAO,kBAAkB,KAAK,QAAQ;IACtC,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,KAAK,CACnC,CAAC,GAAG,EAAE,EAAE,CACN,KAAK,CAAC,OAAO,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;QACtC,mDAAmD;QACnD,kBAAkB,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,QAAQ,CAAC,CAC9D,CACF,EACD;IACA,MAAM,IAAI,KAAK,CACb,mEAAmE,CACpE,CAAC;CACH;AAED;A;A;A;A;A;GAMG;AACH,SAAwB,OAAO,CAAC,KAAU;IACxC,MAAM,OAAO,GAAQ,EAAE,CAAC;IACxB,KAAK,MAAM,GAAG,IAAI,KAAK,EAAE;QACvB,MAAM,OAAO,GAAG,kBAAkB,CAAC,GAAG,CAAC,CAAC;QACxC,IAAI,OAAO,EAAE;YACX,KAAK,MAAM,WAAW,IAAI,OAAO,EAAE;gBACjC,IAAI,WAAW,IAAI,OAAO,EAAE;oBAC1B,IAAI,OAAO,KAAK,CAAC,GAAG,CAAC,KAAK,UAAU,EAAE;wBACpC,OAAO,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;qBAC7C;yBAAM;wBACL,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK;4BAClB,OAAO,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC;wBACpD,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI;4BACjB,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;qBACnD;iBACF;qBAAM;oBACL,IAAI,OAAO,KAAK,CAAC,GAAG,CAAC,KAAK,UAAU,EAAE;wBACpC,OAAO,CAAC,WAAW,CAAC,GAAG;4BACrB,KAAK,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;4BACnB,IAAI,EAAE,EAAE;yBACT,CAAC;qBACH;yBAAM;wBACL,OAAO,CAAC,WAAW,CAAC,GAAG;4BACrB,KAAK,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;4BACjD,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;yBAC/C,CAAC;qBACH;iBACF;aACF;SACF;aAAM,IAAI,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;YACzB,IAAI,GAAG,IAAI,OAAO,EAAE;gBAClB,IAAI,OAAO,KAAK,CAAC,GAAG,CAAC,KAAK,UAAU,EAAE;oBACpC,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;iBACrC;qBAAM;oBACL,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK;wBAAE,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC;oBAChE,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI;wBAAE,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;iBAC9D;aACF;iBAAM;gBACL,IAAI,OAAO,KAAK,CAAC,GAAG,CAAC,KAAK,UAAU,EAAE;oBACpC,OAAO,CAAC,GAAG,CAAC,GAAG;wBACb,KAAK,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;wBACnB,IAAI,EAAE,EAAE;qBACT,CAAC;iBACH;qBAAM;oBACL,OAAO,CAAC,GAAG,CAAC,GAAG;wBACb,KAAK,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;wBACjD,IAAI,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;qBAC/C,CAAC;iBACH;aACF;SACF;KACF;IACD,OAAO,OAAO,CAAC;AACjB,CAAC;AArDD,0BAqDC;;;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;AC7FD,gEAAuC;AACvC,2CAA4C;AAC5C,gDAAkC;AAClC,4DAAuC;AAEvC,MAAM,OAAO,GAAG,CAAC,IAAY,EAAE,EAAE,CAAC,CAAC,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;AAChF,MAAM,YAAY,GAAG,CAAC,IAAY,EAAE,EAAE,CACpC,CAAC,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC;AAE5C,MAAM,iBAAiB,GAAG,CAAC,IAAY,EAAE,EAAE,CACzC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,yBAAyB,CAAC,IAAI,CAAC,CAAC;AAE3D,MAAM,YAAY,GAAG,iBAAiB,CAAC;AAEvC,MAAM,aAAa,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;AAEvC,MAAM,SAAS,GAAG,CAAC,IAAY,EAA2B,EAAE,CACzD,IAAY,CAAC,aAAa,CAAC,CAAC;AAC/B,MAAM,aAAa,GAAG,CAAC,IAAY,EAAe,EAAE,CAClD,CAAE,IAAY,CAAC,aAAa,CAAC,GAAI,IAAY,CAAC,aAAa,CAAC,IAAI,IAAI,GAAG,EAAE,CAAC,CAAC;AAE7E,MAAM,QAAQ,GAAG,CAAC,IAAY,EAAE,IAAY,EAAE,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAE/E,aAAa;AAEb,SAAS,eAAe,CAAC,IAAgB;IACvC,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,MAAM,EAAE;QAC/B,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;KAC7B;IACD,MAAM,EAAE,GAAI,IAA8B,CAAC,EAAE,CAAC;IAC9C,IAAI,EAAE,EAAE;QACN,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC;KACzB;AACH,CAAC;AAED,SAAS,cAAc,CAAC,IAAY,EAAE,MAAc;IAClD,QAAQ,IAAI,CAAC,IAAI,EAAE;QACjB,KAAK,YAAY;YACf,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;YAC5B,MAAM;QACR,KAAK,eAAe;YAClB,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,UAAU,EAAE;gBAClC,QAAQ,IAAI,CAAC,IAAI,EAAE;oBACjB,KAAK,aAAa;wBAChB,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;wBACtC,MAAM;oBACR,KAAK,gBAAgB;wBACnB,cAAc,CAAC,IAAI,CAAC,KAAe,EAAE,MAAM,CAAC,CAAC;wBAC7C,MAAM;oBACR;wBACE,sBAAW,CAAC,IAAI,CAAC,CAAC;wBAClB,MAAM;iBACT;aACF;YACD,MAAM;QACR,KAAK,cAAc;YACjB,KAAK,MAAM,OAAO,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACnC,IAAI,OAAO;oBAAE,cAAc,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;aAC9C;YACD,MAAM;QACR,KAAK,aAAa;YAChB,cAAc,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;YACtC,MAAM;QACR,KAAK,mBAAmB;YACtB,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;YAClC,MAAM;QACR,uBAAuB;QACvB;YACE,MAAM,IAAI,KAAK,CAAC,6BAA6B,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;KAC9D;AACH,CAAC;AAED,SAAS,sBAAsB,CAC7B,IAG8B,EAC9B,MAAe,EACf,OAAiB;IAEjB,KAAK,IAAI,CAAC,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;QAC5C,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;YACvB,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACtC,OAAO;SACR;KACF;AACH,CAAC;AAED,MAAM,SAAS,GAAG,qBAAI,CAAC;IACrB,mBAAmB,CAAC,IAAI,EAAE,MAAM,EAAE,OAAO;QACvC,KAAK,IAAI,CAAC,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;YAC5C,IACE,IAAI,CAAC,IAAI,KAAK,KAAK;gBACjB,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBAChC,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAC5B;gBACA,KAAK,MAAM,WAAW,IAAI,IAAI,CAAC,YAAY,EAAE;oBAC3C,cAAc,CAAC,WAAW,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;iBAC5C;gBACD,OAAO;aACR;SACF;IACH,CAAC;IACD,mBAAmB,CAAC,IAAI,EAAE,MAAM,EAAE,OAAO;QACvC,IAAI,IAAI,CAAC,EAAE,EAAE;YACX,KAAK,IAAI,CAAC,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;gBAC5C,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;oBACvB,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;oBACnC,OAAO;iBACR;aACF;SACF;IACH,CAAC;IACD,QAAQ,EAAE,eAAe;IACzB,gBAAgB,CAAC,IAAI,EAAE,MAAM,EAAE,OAAO;QACpC,KAAK,IAAI,CAAC,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;YAC5C,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE;gBACvB,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;gBACnC,OAAO;aACR;SACF;IACH,CAAC;IACD,YAAY,CAAC,IAAI;QACf,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI;YAAE,OAAO;QAClC,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,KAAK,IAAI;YAAE,OAAO;QACxC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACnD,CAAC;IACD,sBAAsB,EAAE,sBAAsB;IAC9C,eAAe,EAAE,sBAAsB;IACvC,wBAAwB,EAAE,sBAAsB;CACjD,CAAC,CAAC;AAEH,cAAc;AAEd,MAAM,UAAU,GAAG,qBAAI,CAEpB;IACD,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO;A;QAC7B,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACvB,IAAI,IAAI,KAAK,WAAW;YAAE,OAAO;QAEjC,MAAM,UAAU,GAAG,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAC/C,IAAI,UAAU,EAAE;YACd,IAAI,CAAC,mBAAY,CAAC,IAAI,EAAE,UAAU,CAAC;gBAAE,OAAO;YAE5C,KAAK,MAAM,MAAM,IAAI,OAAO,EAAE;gBAC5B,IAAI,IAAI,KAAK,WAAW,IAAI,iBAAiB,CAAC,MAAM,CAAC,EAAE;oBACrD,OAAO;iBACR;gBACD,UAAI,SAAS,CAAC,MAAM,CAAC,0CAAE,GAAG,CAAC,IAAI,GAAG;oBAChC,OAAO;iBACR;aACF;SACF;QAED,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAED,cAAc,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO;QACjC,KAAK,MAAM,MAAM,IAAI,OAAO,EAAE;YAC5B,IAAI,YAAY,CAAC,MAAM,CAAC,EAAE;gBACxB,OAAO;aACR;SACF;QAED,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;CACF,CAAC,CAAC;AAEH,SAAwB,WAAW,CAAC,GAAW;IAC7C,MAAM,OAAO,GAAwC,EAAE,CAAC;IAExD,qBAAqB;IACrB,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;QAClB,MAAM,IAAI,SAAS,CAAC,8BAA8B,CAAC,CAAC;KACrD;IAED,SAAS,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;IAC1B,UAAU,CAAC,GAAG,EAAE,EAAC,OAAO,EAAC,CAAC,CAAC;IAE3B,MAAM,cAAc,GAAG,IAAI,GAAG,EAA+C,CAAC;IAC9E,KAAK,MAAM,IAAI,IAAI,OAAO,EAAE;QAC1B,MAAM,IAAI,GAAW,IAAI,CAAC,IAAI,KAAK,gBAAgB,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;QACzE,MAAM,QAAQ,GAAG,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC1C,IAAI,QAAQ,EAAE;YACZ,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACrB;aAAM;YACL,cAAc,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;SAClC;KACF;IAED,OAAO,CAAC,GAAG,cAAc,CAAC;SACvB,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC,EAAC,IAAI,EAAE,KAAK,EAAC,CAAC,CAAC;SACvC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC;AAzBD,8BAyBC;;;AClMD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;AClCA,gDAAkC;AAElC,SAAwB,YAAY,CAAC,IAAY,EAAE,MAAc;IAC/D,QAAQ,MAAM,CAAC,IAAI,EAAE;QACnB,sBAAsB;QACtB,gBAAgB;QAChB,mBAAmB;QACnB,KAAK,gBAAgB;YACnB,OAAO,MAAM,CAAC,KAAK,KAAK,IAAI,IAAI,MAAM,CAAC,QAAQ,CAAC;QAElD,kBAAkB;QAClB,qBAAqB;QACrB,KAAK,gBAAgB,CAAC;QACtB,KAAK,mBAAmB;YACtB,OAAO,KAAK,CAAC;QAEf,oBAAoB;QACpB,qBAAqB;QACrB,KAAK,sBAAsB;YACzB,OAAO,IAAI,CAAC;KACf;IAED,OAAO,CAAC,CAAC,YAAY,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;AACtC,CAAC;AArBD,+BAqBC;;;ACvBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["./node_modules/@parcel/runtime-browser-hmr/lib/HMRRuntime.js","./src/pages/login/index.js","./node_modules/pug/lib/index.js","./node_modules/buffer/index.js","./node_modules/base64-js/index.js","./node_modules/ieee754/index.js","./node_modules/@parcel/node-resolver-core/lib/_empty.js","./node_modules/path-browserify/index.js","./node_modules/process/browser.js","./node_modules/pug-lexer/index.js","./node_modules/assert/build/assert.js","./node_modules/assert/build/internal/errors.js","./node_modules/util/util.js","./node_modules/util/support/types.js","./node_modules/is-arguments/index.js","./node_modules/call-bind/callBound.js","./node_modules/get-intrinsic/index.js","./node_modules/has-symbols/index.js","./node_modules/has-symbols/shams.js","./node_modules/function-bind/index.js","./node_modules/function-bind/implementation.js","./node_modules/has/src/index.js","./node_modules/call-bind/index.js","./node_modules/is-generator-function/index.js","./node_modules/which-typed-array/index.js","./node_modules/foreach/index.js","./node_modules/available-typed-arrays/index.js","./node_modules/es-abstract/helpers/getOwnPropertyDescriptor.js","./node_modules/is-typed-array/index.js","./node_modules/util/support/isBufferBrowser.js","./node_modules/inherits/inherits_browser.js","./node_modules/assert/build/internal/assert/assertion_error.js","./node_modules/es6-object-assign/index.js","./node_modules/object-is/index.js","./node_modules/define-properties/index.js","./node_modules/object-keys/index.js","./node_modules/object-keys/isArguments.js","./node_modules/object-keys/implementation.js","./node_modules/object-is/implementation.js","./node_modules/object-is/polyfill.js","./node_modules/object-is/shim.js","./node_modules/assert/build/internal/util/comparisons.js","./node_modules/is-nan/index.js","./node_modules/is-nan/implementation.js","./node_modules/is-nan/polyfill.js","./node_modules/is-nan/shim.js","./node_modules/is-expression/index.js","./node_modules/is-expression/node_modules/acorn/dist/acorn.js","./node_modules/object-assign/index.js","./node_modules/character-parser/index.js","./node_modules/is-regex/index.js","./node_modules/pug-error/index.js","./node_modules/pug-strip-comments/index.js","./node_modules/pug-parser/index.js","./node_modules/token-stream/index.js","./node_modules/pug-parser/lib/inline-tags.js","./node_modules/pug-load/index.js","./node_modules/pug-walk/index.js","./node_modules/pug-filters/index.js","./node_modules/pug-filters/lib/run-filter.js","./node_modules/jstransformer/index.js","./node_modules/promise/index.js","./node_modules/promise/lib/index.js","./node_modules/promise/lib/core.js","./node_modules/asap/browser-raw.js","./node_modules/promise/lib/done.js","./node_modules/promise/lib/finally.js","./node_modules/promise/lib/es6-extensions.js","./node_modules/promise/lib/node-extensions.js","./node_modules/asap/browser-asap.js","./node_modules/promise/lib/synchronous.js","./node_modules/is-promise/index.js","./node_modules/resolve/index.js","./node_modules/resolve/lib/async.js","./node_modules/resolve/lib/caller.js","./node_modules/resolve/lib/node-modules-paths.js","./node_modules/path-parse/index.js","./node_modules/resolve/lib/normalize-options.js","./node_modules/is-core-module/index.js","./node_modules/is-core-module/core.json","./node_modules/resolve/lib/core.js","./node_modules/resolve/lib/core.json","./node_modules/resolve/lib/is-core.js","./node_modules/resolve/lib/sync.js","./node_modules/pug-filters/lib/handle-filters.js","./node_modules/constantinople/lib/index.js","./node_modules/@babel/parser/src/tokenizer/types.js","./node_modules/@babel/parser/src/util/whitespace.js","./node_modules/@babel/parser/src/util/location.js","./node_modules/@babel/parser/src/parser/base.js","./node_modules/@babel/parser/src/parser/comments.js","./node_modules/@babel/parser/src/parser/error-codes.js","./node_modules/@babel/parser/src/parser/error-message.js","./node_modules/@babel/parser/src/parser/error.js","./node_modules/@babel/parser/src/plugins/estree.js","./node_modules/@babel/parser/src/tokenizer/context.js","./node_modules/@babel/babel-helper-validator-identifier/src/identifier.ts","./node_modules/@babel/babel-helper-validator-identifier/src/keyword.ts","./node_modules/@babel/parser/src/util/identifier.js","./node_modules/@babel/parser/src/util/scopeflags.js","./node_modules/@babel/parser/src/util/scope.js","./node_modules/@babel/parser/src/plugins/flow/scope.js","./node_modules/@babel/parser/src/plugins/flow/index.js","./node_modules/@babel/parser/src/plugins/jsx/xhtml.js","./node_modules/@babel/parser/src/tokenizer/state.js","./node_modules/@babel/parser/src/plugins/jsx/index.js","./node_modules/@babel/parser/src/plugins/typescript/scope.js","./node_modules/@babel/parser/src/util/production-parameter.js","./node_modules/@babel/parser/src/plugins/typescript/index.js","./node_modules/@babel/parser/src/plugins/placeholders.js","./node_modules/@babel/parser/src/plugins/v8intrinsic.js","./node_modules/@babel/parser/src/plugin-utils.js","./node_modules/@babel/parser/src/options.js","./node_modules/@babel/parser/src/tokenizer/index.js","./node_modules/@babel/parser/src/util/class-scope.js","./node_modules/@babel/parser/src/util/expression-scope.js","./node_modules/@babel/parser/src/parser/util.js","./node_modules/@babel/parser/src/parser/node.js","./node_modules/@babel/parser/src/parser/lval.js","./node_modules/@babel/parser/src/parser/expression.js","./node_modules/@babel/parser/src/parser/statement.js","./node_modules/@babel/parser/src/parser/index.js","./node_modules/@babel/parser/src/index.js","./node_modules/@babel/types/lib/index.js","./node_modules/@babel/types/lib/validators/react/isReactComponent.js","./node_modules/@babel/types/lib/validators/buildMatchMemberExpression.js","./node_modules/@babel/types/lib/validators/matchesPattern.js","./node_modules/@babel/types/lib/validators/generated/index.js","./node_modules/@babel/types/lib/utils/shallowEqual.js","./node_modules/@babel/types/lib/validators/react/isCompatTag.js","./node_modules/@babel/types/lib/builders/react/buildChildren.js","./node_modules/@babel/types/lib/utils/react/cleanJSXElementLiteralChild.js","./node_modules/@babel/types/lib/builders/generated/index.js","./node_modules/@babel/types/lib/builders/builder.js","./node_modules/@babel/types/lib/definitions/index.js","./node_modules/to-fast-properties/index.js","./node_modules/@babel/types/lib/definitions/core.js","./node_modules/@babel/types/lib/validators/is.js","./node_modules/@babel/types/lib/validators/isType.js","./node_modules/@babel/types/lib/validators/isPlaceholderType.js","./node_modules/@babel/types/lib/validators/isValidIdentifier.js","./node_modules/@babel/helper-validator-identifier/lib/index.js","./node_modules/@babel/helper-validator-identifier/lib/identifier.js","./node_modules/@babel/helper-validator-identifier/lib/keyword.js","./node_modules/@babel/types/lib/constants/index.js","./node_modules/@babel/types/lib/definitions/utils.js","./node_modules/@babel/types/lib/validators/validate.js","./node_modules/@babel/types/lib/definitions/flow.js","./node_modules/@babel/types/lib/definitions/jsx.js","./node_modules/@babel/types/lib/definitions/misc.js","./node_modules/@babel/types/lib/definitions/placeholders.js","./node_modules/@babel/types/lib/definitions/experimental.js","./node_modules/@babel/types/lib/definitions/typescript.js","./node_modules/@babel/types/lib/asserts/assertNode.js","./node_modules/@babel/types/lib/validators/isNode.js","./node_modules/@babel/types/lib/asserts/generated/index.js","./node_modules/@babel/types/lib/builders/flow/createTypeAnnotationBasedOnTypeof.js","./node_modules/@babel/types/lib/builders/flow/createFlowUnionType.js","./node_modules/@babel/types/lib/modifications/flow/removeTypeDuplicates.js","./node_modules/@babel/types/lib/builders/typescript/createTSUnionType.js","./node_modules/@babel/types/lib/modifications/typescript/removeTypeDuplicates.js","./node_modules/@babel/types/lib/builders/generated/uppercase.js","./node_modules/@babel/types/lib/clone/cloneNode.js","./node_modules/@babel/types/lib/clone/clone.js","./node_modules/@babel/types/lib/clone/cloneDeep.js","./node_modules/@babel/types/lib/clone/cloneDeepWithoutLoc.js","./node_modules/@babel/types/lib/clone/cloneWithoutLoc.js","./node_modules/@babel/types/lib/comments/addComment.js","./node_modules/@babel/types/lib/comments/addComments.js","./node_modules/@babel/types/lib/comments/inheritInnerComments.js","./node_modules/@babel/types/lib/utils/inherit.js","./node_modules/@babel/types/lib/comments/inheritLeadingComments.js","./node_modules/@babel/types/lib/comments/inheritsComments.js","./node_modules/@babel/types/lib/comments/inheritTrailingComments.js","./node_modules/@babel/types/lib/comments/removeComments.js","./node_modules/@babel/types/lib/constants/generated/index.js","./node_modules/@babel/types/lib/converters/ensureBlock.js","./node_modules/@babel/types/lib/converters/toBlock.js","./node_modules/@babel/types/lib/converters/toBindingIdentifierName.js","./node_modules/@babel/types/lib/converters/toIdentifier.js","./node_modules/@babel/types/lib/converters/toComputedKey.js","./node_modules/@babel/types/lib/converters/toExpression.js","./node_modules/@babel/types/lib/converters/toKeyAlias.js","./node_modules/@babel/types/lib/modifications/removePropertiesDeep.js","./node_modules/@babel/types/lib/traverse/traverseFast.js","./node_modules/@babel/types/lib/modifications/removeProperties.js","./node_modules/@babel/types/lib/converters/toSequenceExpression.js","./node_modules/@babel/types/lib/converters/gatherSequenceExpressions.js","./node_modules/@babel/types/lib/retrievers/getBindingIdentifiers.js","./node_modules/@babel/types/lib/converters/toStatement.js","./node_modules/@babel/types/lib/converters/valueToNode.js","./node_modules/@babel/types/lib/modifications/appendToMemberExpression.js","./node_modules/@babel/types/lib/modifications/inherits.js","./node_modules/@babel/types/lib/modifications/prependToMemberExpression.js","./node_modules/@babel/types/lib/retrievers/getOuterBindingIdentifiers.js","./node_modules/@babel/types/lib/traverse/traverse.js","./node_modules/@babel/types/lib/validators/isBinding.js","./node_modules/@babel/types/lib/validators/isBlockScoped.js","./node_modules/@babel/types/lib/validators/isLet.js","./node_modules/@babel/types/lib/validators/isImmutable.js","./node_modules/@babel/types/lib/validators/isNodesEquivalent.js","./node_modules/@babel/types/lib/validators/isReferenced.js","./node_modules/@babel/types/lib/validators/isScope.js","./node_modules/@babel/types/lib/validators/isSpecifierDefault.js","./node_modules/@babel/types/lib/validators/isValidES3Identifier.js","./node_modules/@babel/types/lib/validators/isVar.js","./node_modules/@babel/types/lib/ast-types/generated/index.js","./node_modules/constantinople/lib/binaryOperation.js","./node_modules/pug-linker/index.js","./node_modules/pug-code-gen/index.js","./node_modules/doctypes/index.js","./node_modules/pug-runtime/build.js","./node_modules/pug-runtime/lib/dependencies.js","./node_modules/pug-runtime/lib/internals.js","./node_modules/pug-runtime/lib/sources.js","./node_modules/pug-runtime/index.js","./node_modules/pug-attrs/index.js","./node_modules/js-stringify/index.js","./node_modules/void-elements/index.js","./node_modules/with/src/index.ts","./node_modules/babel-walk/src/index.ts","./node_modules/babel-walk/src/explode.ts","./node_modules/with/src/globals.ts","./node_modules/assert-never/index.js","./node_modules/with/src/reference.ts","./node_modules/pug-runtime/wrap.js"],"sourcesContent":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"// @flow\nimport type { TokContext } from \"./context\";\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between 1) binary\n// expression (<) and JSX Tag start (<name>); 2) object literal and JSX\n// texts. It is set on the `updateContext` function in the JSX plugin.\n\n// The `startsExpr` property is used to determine whether an expression\n// may be the “argument” subexpression of a `yield` expression or\n// `yield` statement. It is set on all token types that may be at the\n// start of a subexpression.\n\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\n\ntype TokenOptions = {\n  keyword?: string,\n  beforeExpr?: boolean,\n  startsExpr?: boolean,\n  rightAssociative?: boolean,\n  isLoop?: boolean,\n  isAssign?: boolean,\n  prefix?: boolean,\n  postfix?: boolean,\n  binop?: ?number,\n};\n\nexport class TokenType {\n  label: string;\n  keyword: ?string;\n  beforeExpr: boolean;\n  startsExpr: boolean;\n  rightAssociative: boolean;\n  isLoop: boolean;\n  isAssign: boolean;\n  prefix: boolean;\n  postfix: boolean;\n  binop: ?number;\n  updateContext: ?(context: Array<TokContext>) => void;\n\n  constructor(label: string, conf: TokenOptions = {}) {\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n}\n\nexport const keywords = new Map<string, TokenType>();\n\nfunction createKeyword(name: string, options: TokenOptions = {}): TokenType {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name: string, binop: number) {\n  return new TokenType(name, { beforeExpr, binop });\n}\n\nexport const types: { [name: string]: TokenType } = {\n  num: new TokenType(\"num\", { startsExpr }),\n  bigint: new TokenType(\"bigint\", { startsExpr }),\n  decimal: new TokenType(\"decimal\", { startsExpr }),\n  regexp: new TokenType(\"regexp\", { startsExpr }),\n  string: new TokenType(\"string\", { startsExpr }),\n  name: new TokenType(\"name\", { startsExpr }),\n  privateName: new TokenType(\"#name\", { startsExpr }),\n  eof: new TokenType(\"eof\"),\n\n  // Punctuation token types.\n  bracketL: new TokenType(\"[\", { beforeExpr, startsExpr }),\n  bracketHashL: new TokenType(\"#[\", { beforeExpr, startsExpr }),\n  bracketBarL: new TokenType(\"[|\", { beforeExpr, startsExpr }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", { beforeExpr, startsExpr }),\n  braceBarL: new TokenType(\"{|\", { beforeExpr, startsExpr }),\n  braceHashL: new TokenType(\"#{\", { beforeExpr, startsExpr }),\n  braceR: new TokenType(\"}\", { beforeExpr }),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", { beforeExpr, startsExpr }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", { beforeExpr }),\n  semi: new TokenType(\";\", { beforeExpr }),\n  colon: new TokenType(\":\", { beforeExpr }),\n  doubleColon: new TokenType(\"::\", { beforeExpr }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", { beforeExpr }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", { beforeExpr }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", { beforeExpr }),\n  backQuote: new TokenType(\"`\", { startsExpr }),\n  dollarBraceL: new TokenType(\"${\", { beforeExpr, startsExpr }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", { startsExpr }),\n\n  // Special hashbang token.\n  interpreterDirective: new TokenType(\"#!...\"),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  eq: new TokenType(\"=\", { beforeExpr, isAssign }),\n  assign: new TokenType(\"_=\", { beforeExpr, isAssign }),\n  slashAssign: new TokenType(\"_=\", { beforeExpr, isAssign }),\n  incDec: new TokenType(\"++/--\", { prefix, postfix, startsExpr }),\n  bang: new TokenType(\"!\", { beforeExpr, prefix, startsExpr }),\n  tilde: new TokenType(\"~\", { beforeExpr, prefix, startsExpr }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", { beforeExpr, binop: 9, prefix, startsExpr }),\n  // startsExpr: required by v8intrinsic plugin\n  modulo: new TokenType(\"%\", { beforeExpr, binop: 10, startsExpr }),\n  // unset `beforeExpr` as it can be `function *`\n  star: new TokenType(\"*\", { binop: 10 }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true,\n  }),\n\n  // Keywords\n  // Don't forget to update packages/babel-helper-validator-identifier/src/keyword.js\n  // when new keywords are added\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", { beforeExpr }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", { beforeExpr }),\n  _do: createKeyword(\"do\", { isLoop, beforeExpr }),\n  _else: createKeyword(\"else\", { beforeExpr }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", { isLoop }),\n  _function: createKeyword(\"function\", { startsExpr }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", { beforeExpr }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", { beforeExpr, prefix, startsExpr }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", { isLoop }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", { beforeExpr, startsExpr }),\n  _this: createKeyword(\"this\", { startsExpr }),\n  _super: createKeyword(\"super\", { startsExpr }),\n  _class: createKeyword(\"class\", { startsExpr }),\n  _extends: createKeyword(\"extends\", { beforeExpr }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", { startsExpr }),\n  _null: createKeyword(\"null\", { startsExpr }),\n  _true: createKeyword(\"true\", { startsExpr }),\n  _false: createKeyword(\"false\", { startsExpr }),\n  _in: createKeyword(\"in\", { beforeExpr, binop: 7 }),\n  _instanceof: createKeyword(\"instanceof\", { beforeExpr, binop: 7 }),\n  _typeof: createKeyword(\"typeof\", { beforeExpr, prefix, startsExpr }),\n  _void: createKeyword(\"void\", { beforeExpr, prefix, startsExpr }),\n  _delete: createKeyword(\"delete\", { beforeExpr, prefix, startsExpr }),\n};\n","// @flow\n\nimport * as charCodes from \"charcodes\";\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\nexport const lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nexport const lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n// https://tc39.github.io/ecma262/#sec-line-terminators\nexport function isNewLine(code: number): boolean {\n  switch (code) {\n    case charCodes.lineFeed:\n    case charCodes.carriageReturn:\n    case charCodes.lineSeparator:\n    case charCodes.paragraphSeparator:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nexport const skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\n// https://tc39.github.io/ecma262/#sec-white-space\nexport function isWhitespace(code: number): boolean {\n  switch (code) {\n    case 0x0009: // CHARACTER TABULATION\n    case 0x000b: // LINE TABULATION\n    case 0x000c: // FORM FEED\n    case charCodes.space:\n    case charCodes.nonBreakingSpace:\n    case charCodes.oghamSpaceMark:\n    case 0x2000: // EN QUAD\n    case 0x2001: // EM QUAD\n    case 0x2002: // EN SPACE\n    case 0x2003: // EM SPACE\n    case 0x2004: // THREE-PER-EM SPACE\n    case 0x2005: // FOUR-PER-EM SPACE\n    case 0x2006: // SIX-PER-EM SPACE\n    case 0x2007: // FIGURE SPACE\n    case 0x2008: // PUNCTUATION SPACE\n    case 0x2009: // THIN SPACE\n    case 0x200a: // HAIR SPACE\n    case 0x202f: // NARROW NO-BREAK SPACE\n    case 0x205f: // MEDIUM MATHEMATICAL SPACE\n    case 0x3000: // IDEOGRAPHIC SPACE\n    case 0xfeff: // ZERO WIDTH NO-BREAK SPACE\n      return true;\n\n    default:\n      return false;\n  }\n}\n","// @flow\n\nimport { lineBreakG } from \"./whitespace\";\n\nexport type Pos = {\n  start: number,\n};\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nexport class Position {\n  line: number;\n  column: number;\n\n  constructor(line: number, col: number) {\n    this.line = line;\n    this.column = col;\n  }\n}\n\nexport class SourceLocation {\n  start: Position;\n  end: Position;\n  filename: string;\n  identifierName: ?string;\n\n  constructor(start: Position, end?: Position) {\n    this.start = start;\n    // $FlowIgnore (may start as null, but initialized later)\n    this.end = end;\n  }\n}\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\nexport function getLineInfo(input: string, offset: number): Position {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport type State from \"../tokenizer/state\";\nimport type { PluginsMap } from \"./index\";\nimport type ScopeHandler from \"../util/scope\";\nimport type ExpressionScopeHandler from \"../util/expression-scope\";\nimport type ClassScopeHandler from \"../util/class-scope\";\nimport type ProductionParameterHandler from \"../util/production-parameter\";\n\nexport default class BaseParser {\n  // Properties set by constructor in index.js\n  declare options: Options;\n  declare inModule: boolean;\n  declare scope: ScopeHandler<*>;\n  declare classScope: ClassScopeHandler;\n  declare prodParam: ProductionParameterHandler;\n  declare expressionScope: ExpressionScopeHandler;\n  declare plugins: PluginsMap;\n  declare filename: ?string;\n  // Names of exports store. `default` is stored as a name for both\n  // `export default foo;` and `export { foo as default };`.\n  declare exportedIdentifiers: Set<string>;\n  sawUnambiguousESM: boolean = false;\n  ambiguousScriptDifferentAst: boolean = false;\n\n  // Initialized by Tokenizer\n  declare state: State;\n  // input and length are not in state as they are constant and we do\n  // not want to ever copy them, which happens if state gets cloned\n  declare input: string;\n  declare length: number;\n\n  hasPlugin(name: string): boolean {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin: string, name: string) {\n    // $FlowIssue\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n}\n","// @flow\n\n/**\n * Based on the comment attachment algorithm used in espree and estraverse.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright\n *   notice, this list of conditions and the following disclaimer.\n * * Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport BaseParser from \"./base\";\nimport type { Comment, Node } from \"../types\";\n\nfunction last<T>(stack: $ReadOnlyArray<T>): T {\n  return stack[stack.length - 1];\n}\n\nexport default class CommentsParser extends BaseParser {\n  addComment(comment: Comment): void {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.trailingComments.push(comment);\n    this.state.leadingComments.push(comment);\n  }\n\n  adjustCommentsAfterTrailingComma(\n    node: Node,\n    elements: (Node | null)[],\n    // When the current node is followed by a token which hasn't a respective AST node, we\n    // need to take all the trailing comments to prevent them from being attached to an\n    // unrelated node. e.g. in\n    //     var { x } /* cmt */ = { y }\n    // we don't want /* cmt */ to be attached to { y }.\n    // On the other hand, in\n    //     fn(x) [new line] /* cmt */ [new line] y\n    // /* cmt */ is both a trailing comment of fn(x) and a leading comment of y\n    takeAllComments?: boolean,\n  ) {\n    if (this.state.leadingComments.length === 0) {\n      return;\n    }\n\n    let lastElement = null;\n    let i = elements.length;\n    while (lastElement === null && i > 0) {\n      lastElement = elements[--i];\n    }\n    if (lastElement === null) {\n      return;\n    }\n\n    for (let j = 0; j < this.state.leadingComments.length; j++) {\n      if (\n        this.state.leadingComments[j].end < this.state.commentPreviousNode.end\n      ) {\n        this.state.leadingComments.splice(j, 1);\n        j--;\n      }\n    }\n\n    const newTrailingComments = [];\n    for (let i = 0; i < this.state.leadingComments.length; i++) {\n      const leadingComment = this.state.leadingComments[i];\n      if (leadingComment.end < node.end) {\n        newTrailingComments.push(leadingComment);\n\n        // Perf: we don't need to splice if we are going to reset the array anyway\n        if (!takeAllComments) {\n          this.state.leadingComments.splice(i, 1);\n          i--;\n        }\n      } else {\n        if (node.trailingComments === undefined) {\n          node.trailingComments = [];\n        }\n        node.trailingComments.push(leadingComment);\n      }\n    }\n    if (takeAllComments) this.state.leadingComments = [];\n\n    if (newTrailingComments.length > 0) {\n      lastElement.trailingComments = newTrailingComments;\n    } else if (lastElement.trailingComments !== undefined) {\n      lastElement.trailingComments = [];\n    }\n  }\n\n  processComment(node: Node): void {\n    if (node.type === \"Program\" && node.body.length > 0) return;\n\n    const stack = this.state.commentStack;\n\n    let firstChild, lastChild, trailingComments, i, j;\n\n    if (this.state.trailingComments.length > 0) {\n      // If the first comment in trailingComments comes after the\n      // current node, then we're good - all comments in the array will\n      // come after the node and so it's safe to add them as official\n      // trailingComments.\n      if (this.state.trailingComments[0].start >= node.end) {\n        trailingComments = this.state.trailingComments;\n        this.state.trailingComments = [];\n      } else {\n        // Otherwise, if the first comment doesn't come after the\n        // current node, that means we have a mix of leading and trailing\n        // comments in the array and that leadingComments contains the\n        // same items as trailingComments. Reset trailingComments to\n        // zero items and we'll handle this by evaluating leadingComments\n        // later.\n        this.state.trailingComments.length = 0;\n      }\n    } else if (stack.length > 0) {\n      const lastInStack = last(stack);\n      if (\n        lastInStack.trailingComments &&\n        lastInStack.trailingComments[0].start >= node.end\n      ) {\n        trailingComments = lastInStack.trailingComments;\n        delete lastInStack.trailingComments;\n      }\n    }\n\n    // Eating the stack.\n    if (stack.length > 0 && last(stack).start >= node.start) {\n      firstChild = stack.pop();\n    }\n\n    while (stack.length > 0 && last(stack).start >= node.start) {\n      lastChild = stack.pop();\n    }\n\n    if (!lastChild && firstChild) lastChild = firstChild;\n\n    // Adjust comments that follow a trailing comma on the last element in a\n    // comma separated list of nodes to be the trailing comments on the last\n    // element\n    if (firstChild) {\n      switch (node.type) {\n        case \"ObjectExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties);\n          break;\n        case \"ObjectPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties, true);\n          break;\n        case \"CallExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.arguments);\n          break;\n        case \"ArrayExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements);\n          break;\n        case \"ArrayPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements, true);\n          break;\n      }\n    } else if (\n      this.state.commentPreviousNode &&\n      ((this.state.commentPreviousNode.type === \"ImportSpecifier\" &&\n        node.type !== \"ImportSpecifier\") ||\n        (this.state.commentPreviousNode.type === \"ExportSpecifier\" &&\n          node.type !== \"ExportSpecifier\"))\n    ) {\n      this.adjustCommentsAfterTrailingComma(node, [\n        this.state.commentPreviousNode,\n      ]);\n    }\n\n    if (lastChild) {\n      if (lastChild.leadingComments) {\n        if (\n          lastChild !== node &&\n          lastChild.leadingComments.length > 0 &&\n          last(lastChild.leadingComments).end <= node.start\n        ) {\n          node.leadingComments = lastChild.leadingComments;\n          delete lastChild.leadingComments;\n        } else {\n          // A leading comment for an anonymous class had been stolen by its first ClassMethod,\n          // so this takes back the leading comment.\n          // See also: https://github.com/eslint/espree/issues/158\n          for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {\n            if (lastChild.leadingComments[i].end <= node.start) {\n              node.leadingComments = lastChild.leadingComments.splice(0, i + 1);\n              break;\n            }\n          }\n        }\n      }\n    } else if (this.state.leadingComments.length > 0) {\n      if (last(this.state.leadingComments).end <= node.start) {\n        if (this.state.commentPreviousNode) {\n          for (j = 0; j < this.state.leadingComments.length; j++) {\n            if (\n              this.state.leadingComments[j].end <\n              this.state.commentPreviousNode.end\n            ) {\n              this.state.leadingComments.splice(j, 1);\n              j--;\n            }\n          }\n        }\n        if (this.state.leadingComments.length > 0) {\n          node.leadingComments = this.state.leadingComments;\n          this.state.leadingComments = [];\n        }\n      } else {\n        // https://github.com/eslint/espree/issues/2\n        //\n        // In special cases, such as return (without a value) and\n        // debugger, all comments will end up as leadingComments and\n        // will otherwise be eliminated. This step runs when the\n        // commentStack is empty and there are comments left\n        // in leadingComments.\n        //\n        // This loop figures out the stopping point between the actual\n        // leading and trailing comments by finding the location of the\n        // first comment that comes after the given node.\n        for (i = 0; i < this.state.leadingComments.length; i++) {\n          if (this.state.leadingComments[i].end > node.start) {\n            break;\n          }\n        }\n\n        // Split the array based on the location of the first comment\n        // that comes after the node. Keep in mind that this could\n        // result in an empty array, and if so, the array must be\n        // deleted.\n        const leadingComments = this.state.leadingComments.slice(0, i);\n\n        if (leadingComments.length) {\n          node.leadingComments = leadingComments;\n        }\n\n        // Similarly, trailing comments are attached later. The variable\n        // must be reset to null if there are no trailing comments.\n        trailingComments = this.state.leadingComments.slice(i);\n        if (trailingComments.length === 0) {\n          trailingComments = null;\n        }\n      }\n    }\n\n    this.state.commentPreviousNode = node;\n\n    if (trailingComments) {\n      if (\n        trailingComments.length &&\n        trailingComments[0].start >= node.start &&\n        last(trailingComments).end <= node.end\n      ) {\n        node.innerComments = trailingComments;\n      } else {\n        // TrailingComments maybe contain innerComments\n        const firstTrailingCommentIndex = trailingComments.findIndex(\n          comment => comment.end >= node.end,\n        );\n\n        if (firstTrailingCommentIndex > 0) {\n          node.innerComments = trailingComments.slice(\n            0,\n            firstTrailingCommentIndex,\n          );\n          node.trailingComments = trailingComments.slice(\n            firstTrailingCommentIndex,\n          );\n        } else {\n          node.trailingComments = trailingComments;\n        }\n      }\n    }\n\n    stack.push(node);\n  }\n}\n","// @flow\n\nexport const ErrorCodes = Object.freeze({\n  SyntaxError: \"BABEL_PARSER_SYNTAX_ERROR\",\n  SourceTypeModuleError: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\",\n});\n\nexport type ErrorCode = $Values<typeof ErrorCodes>;\n","// @flow\n\nimport { makeErrorTemplates, ErrorCodes } from \"./error\";\n\n/* eslint sort-keys: \"error\" */\n\n/**\n * @module parser/error-message\n */\n\n// The Errors key follows https://cs.chromium.org/chromium/src/v8/src/common/message-template.h unless it does not exist\nexport const ErrorMessages = makeErrorTemplates(\n  {\n    AccessorIsGenerator: \"A %0ter cannot be a generator.\",\n    ArgumentsInClass:\n      \"'arguments' is only allowed in functions and class methods.\",\n    AsyncFunctionInSingleStatementContext:\n      \"Async functions can only be declared at the top level or inside a block.\",\n    AwaitBindingIdentifier:\n      \"Can not use 'await' as identifier inside an async function.\",\n    AwaitBindingIdentifierInStaticBlock:\n      \"Can not use 'await' as identifier inside a static block.\",\n    AwaitExpressionFormalParameter:\n      \"'await' is not allowed in async function parameters.\",\n    AwaitNotInAsyncContext:\n      \"'await' is only allowed within async functions and at the top levels of modules.\",\n    AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\n    BadGetterArity: \"A 'get' accesor must not have any formal parameters.\",\n    BadSetterArity: \"A 'set' accesor must have exactly one formal parameter.\",\n    BadSetterRestParameter:\n      \"A 'set' accesor function argument must not be a rest parameter.\",\n    ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n    ConstructorClassPrivateField:\n      \"Classes may not have a private field named '#constructor'.\",\n    ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n    ConstructorIsAsync: \"Constructor can't be an async function.\",\n    ConstructorIsGenerator: \"Constructor can't be a generator.\",\n    DeclarationMissingInitializer: \"'%0' require an initialization value.\",\n    DecoratorBeforeExport:\n      \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax.\",\n    DecoratorConstructor:\n      \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n    DecoratorExportClass:\n      \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n    DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n    DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n    DeletePrivateField: \"Deleting a private field is not allowed.\",\n    DestructureNamedImport:\n      \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n    DuplicateConstructor: \"Duplicate constructor in the same class.\",\n    DuplicateDefaultExport: \"Only one default export allowed per module.\",\n    DuplicateExport:\n      \"`%0` has already been exported. Exported identifiers must be unique.\",\n    DuplicateProto: \"Redefinition of __proto__ property.\",\n    DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n    ElementAfterRest: \"Rest element must be last element.\",\n    EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n    ExportBindingIsString:\n      \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n    ExportDefaultFromAsIdentifier:\n      \"'from' is not allowed as an identifier after 'export default'.\",\n    ForInOfLoopInitializer:\n      \"'%0' loop variable declaration may not have an initializer.\",\n    ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n    ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n    GeneratorInSingleStatementContext:\n      \"Generators can only be declared at the top level or inside a block.\",\n    IllegalBreakContinue: \"Unsyntactic %0.\",\n    IllegalLanguageModeDirective:\n      \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n    IllegalReturn: \"'return' outside of function.\",\n    ImportBindingIsString:\n      'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n    ImportCallArgumentTrailingComma:\n      \"Trailing comma is disallowed inside import(...) arguments.\",\n    ImportCallArity: \"`import()` requires exactly %0.\",\n    ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n    ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n    InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n    InvalidCodePoint: \"Code point out of bounds.\",\n    InvalidDecimal: \"Invalid decimal.\",\n    InvalidDigit: \"Expected number in radix %0.\",\n    InvalidEscapeSequence: \"Bad character escape sequence.\",\n    InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n    InvalidEscapedReservedWord: \"Escape sequence in keyword %0.\",\n    InvalidIdentifier: \"Invalid identifier %0.\",\n    InvalidLhs: \"Invalid left-hand side in %0.\",\n    InvalidLhsBinding: \"Binding invalid left-hand side in %0.\",\n    InvalidNumber: \"Invalid number.\",\n    InvalidOrMissingExponent:\n      \"Floating-point numbers require a valid exponent after the 'e'.\",\n    InvalidOrUnexpectedToken: \"Unexpected character '%0'.\",\n    InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n    InvalidPrivateFieldResolution: \"Private name #%0 is not defined.\",\n    InvalidPropertyBindingPattern: \"Binding member expression.\",\n    InvalidRecordProperty:\n      \"Only properties and spread elements are allowed in record definitions.\",\n    InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n    LabelRedeclaration: \"Label '%0' is already declared.\",\n    LetInLexicalBinding:\n      \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n    LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n    MalformedRegExpFlags: \"Invalid regular expression flag.\",\n    MissingClassName: \"A class name is required.\",\n    MissingEqInAssignment:\n      \"Only '=' operator can be used for specifying default value.\",\n    MissingSemicolon: \"Missing semicolon.\",\n    MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n    MixingCoalesceWithLogical:\n      \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n    ModuleAttributeDifferentFromType:\n      \"The only accepted module attribute is `type`.\",\n    ModuleAttributeInvalidValue:\n      \"Only string literals are allowed as module attribute values.\",\n    ModuleAttributesWithDuplicateKeys:\n      'Duplicate key \"%0\" is not allowed in module attributes.',\n    ModuleExportNameHasLoneSurrogate:\n      \"An export name cannot include a lone surrogate, found '\\\\u%0'.\",\n    ModuleExportUndefined: \"Export '%0' is not defined.\",\n    MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n    NewlineAfterThrow: \"Illegal newline after throw.\",\n    NoCatchOrFinally: \"Missing catch or finally clause.\",\n    NumberIdentifier: \"Identifier directly after number.\",\n    NumericSeparatorInEscapeSequence:\n      \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n    ObsoleteAwaitStar:\n      \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n    OptionalChainingNoNew:\n      \"Constructors in/after an Optional Chain are not allowed.\",\n    OptionalChainingNoTemplate:\n      \"Tagged Template Literals are not allowed in optionalChain.\",\n    OverrideOnConstructor:\n      \"'override' modifier cannot appear on a constructor declaration.\",\n    ParamDupe: \"Argument name clash.\",\n    PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n    PatternHasMethod: \"Object pattern can't contain methods.\",\n    PipelineBodyNoArrow:\n      'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n    PipelineBodySequenceExpression:\n      \"Pipeline body may not be a comma-separated sequence expression.\",\n    PipelineHeadSequenceExpression:\n      \"Pipeline head should not be a comma-separated sequence expression.\",\n    PipelineTopicUnused:\n      \"Pipeline is in topic style but does not use topic reference.\",\n    PrimaryTopicNotAllowed:\n      \"Topic reference was used in a lexical context without topic binding.\",\n    PrimaryTopicRequiresSmartPipeline:\n      \"Primary Topic Reference found but pipelineOperator not passed 'smart' for 'proposal' option.\",\n    PrivateInExpectedIn:\n      \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`).\",\n    PrivateNameRedeclaration: \"Duplicate private name #%0.\",\n    RecordExpressionBarIncorrectEndSyntaxType:\n      \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n    RecordExpressionBarIncorrectStartSyntaxType:\n      \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n    RecordExpressionHashIncorrectStartSyntaxType:\n      \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n    RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n    RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n    SloppyFunction:\n      \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n    StaticPrototype: \"Classes may not have static property named prototype.\",\n    StrictDelete: \"Deleting local variable in strict mode.\",\n    StrictEvalArguments: \"Assigning to '%0' in strict mode.\",\n    StrictEvalArgumentsBinding: \"Binding '%0' in strict mode.\",\n    StrictFunction:\n      \"In strict mode code, functions can only be declared at top level or inside a block.\",\n    StrictNumericEscape:\n      \"The only valid numeric escape in strict mode is '\\\\0'.\",\n    StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n    StrictWith: \"'with' in strict mode.\",\n    SuperNotAllowed:\n      \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n    SuperPrivateField: \"Private fields can't be accessed on super.\",\n    TrailingDecorator: \"Decorators must be attached to a class element.\",\n    TupleExpressionBarIncorrectEndSyntaxType:\n      \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n    TupleExpressionBarIncorrectStartSyntaxType:\n      \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n    TupleExpressionHashIncorrectStartSyntaxType:\n      \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n    UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n    UnexpectedAwaitAfterPipelineBody:\n      'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n    UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n    UnexpectedImportExport:\n      \"'import' and 'export' may only appear at the top level.\",\n    UnexpectedKeyword: \"Unexpected keyword '%0'.\",\n    UnexpectedLeadingDecorator:\n      \"Leading decorators must be attached to a class declaration.\",\n    UnexpectedLexicalDeclaration:\n      \"Lexical declaration cannot appear in a single-statement context.\",\n    UnexpectedNewTarget:\n      \"`new.target` can only be used in functions or class properties.\",\n    UnexpectedNumericSeparator:\n      \"A numeric separator is only allowed between two digits.\",\n    UnexpectedPrivateField:\n      \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n    UnexpectedReservedWord: \"Unexpected reserved word '%0'.\",\n    UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n    UnexpectedToken: \"Unexpected token '%0'.\",\n    UnexpectedTokenUnaryExponentiation:\n      \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n    UnsupportedBind: \"Binding should be performed on object property.\",\n    UnsupportedDecoratorExport:\n      \"A decorated export must export a class declaration.\",\n    UnsupportedDefaultExport:\n      \"Only expressions, functions or classes are allowed as the `default` export.\",\n    UnsupportedImport:\n      \"`import` can only be used in `import()` or `import.meta`.\",\n    UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1.\",\n    UnsupportedParameterDecorator:\n      \"Decorators cannot be used to decorate parameters.\",\n    UnsupportedPropertyDecorator:\n      \"Decorators cannot be used to decorate object literal properties.\",\n    UnsupportedSuper:\n      \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n    UnterminatedComment: \"Unterminated comment.\",\n    UnterminatedRegExp: \"Unterminated regular expression.\",\n    UnterminatedString: \"Unterminated string constant.\",\n    UnterminatedTemplate: \"Unterminated template.\",\n    VarRedeclaration: \"Identifier '%0' has already been declared.\",\n    YieldBindingIdentifier:\n      \"Can not use 'yield' as identifier inside a generator.\",\n    YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n    ZeroDigitNumericSeparator:\n      \"Numeric separator can not be used after leading 0.\",\n  },\n  /* code */ ErrorCodes.SyntaxError,\n);\n\nexport const SourceTypeModuleErrorMessages = makeErrorTemplates(\n  {\n    ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n    ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`,\n  },\n  /* code */ ErrorCodes.SourceTypeModuleError,\n);\n","// @flow\n/* eslint sort-keys: \"error\" */\nimport { getLineInfo, type Position } from \"../util/location\";\nimport CommentsParser from \"./comments\";\nimport { type ErrorCode, ErrorCodes } from \"./error-codes\";\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\ntype ErrorContext = {\n  pos: number,\n  loc: Position,\n  missingPlugin?: Array<string>,\n  code?: string,\n  reasonCode?: String,\n};\nexport type ParsingError = SyntaxError & ErrorContext;\n\nexport type ErrorTemplate = {\n  code: ErrorCode,\n  template: string,\n  reasonCode: string,\n};\nexport type ErrorTemplates = {\n  [key: string]: ErrorTemplate,\n};\n\nexport function makeErrorTemplates(\n  messages: {\n    [key: string]: string,\n  },\n  code: ErrorCode,\n): ErrorTemplates {\n  const templates: ErrorTemplates = {};\n  Object.keys(messages).forEach(reasonCode => {\n    templates[reasonCode] = Object.freeze({\n      code,\n      reasonCode,\n      template: messages[reasonCode],\n    });\n  });\n  return Object.freeze(templates);\n}\n\nexport { ErrorCodes };\nexport {\n  ErrorMessages as Errors,\n  SourceTypeModuleErrorMessages as SourceTypeModuleErrors,\n} from \"./error-message\";\n\nexport type raiseFunction = (number, ErrorTemplate, ...any) => void;\n\nexport default class ParserError extends CommentsParser {\n  // Forward-declaration: defined in tokenizer/index.js\n  /*::\n  +isLookahead: boolean;\n  */\n\n  getLocationForPosition(pos: number): Position {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;\n    else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;\n    else if (pos === this.state.end) loc = this.state.endLoc;\n    else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;\n    else loc = getLineInfo(this.input, pos);\n\n    return loc;\n  }\n\n  raise(\n    pos: number,\n    { code, reasonCode, template }: ErrorTemplate,\n    ...params: any\n  ): Error | empty {\n    return this.raiseWithData(pos, { code, reasonCode }, template, ...params);\n  }\n\n  /**\n   * Raise a parsing error on given position pos. If errorRecovery is true,\n   * it will first search current errors and overwrite the error thrown on the exact\n   * position before with the new error message. If errorRecovery is false, it\n   * fallbacks to `raise`.\n   *\n   * @param {number} pos\n   * @param {string} errorTemplate\n   * @param {...any} params\n   * @returns {(Error | empty)}\n   * @memberof ParserError\n   */\n  raiseOverwrite(\n    pos: number,\n    { code, template }: ErrorTemplate,\n    ...params: any\n  ): Error | empty {\n    const loc = this.getLocationForPosition(pos);\n    const message =\n      template.replace(/%(\\d+)/g, (_, i: number) => params[i]) +\n      ` (${loc.line}:${loc.column})`;\n    if (this.options.errorRecovery) {\n      const errors = this.state.errors;\n      for (let i = errors.length - 1; i >= 0; i--) {\n        const error = errors[i];\n        if (error.pos === pos) {\n          return Object.assign(error, { message });\n        } else if (error.pos < pos) {\n          break;\n        }\n      }\n    }\n    return this._raise({ code, loc, pos }, message);\n  }\n\n  raiseWithData(\n    pos: number,\n    data?: {\n      missingPlugin?: Array<string>,\n      code?: string,\n    },\n    errorTemplate: string,\n    ...params: any\n  ): Error | empty {\n    const loc = this.getLocationForPosition(pos);\n    const message =\n      errorTemplate.replace(/%(\\d+)/g, (_, i: number) => params[i]) +\n      ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign(({ loc, pos }: Object), data), message);\n  }\n\n  _raise(errorContext: ErrorContext, message: string): Error | empty {\n    // $FlowIgnore\n    const err: SyntaxError & ErrorContext = new SyntaxError(message);\n    Object.assign(err, errorContext);\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n}\n","// @flow\n\nimport { TokenType } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport type { ExpressionErrors } from \"../parser/util\";\nimport * as N from \"../types\";\nimport type { Position } from \"../util/location\";\nimport { Errors } from \"../parser/error\";\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    parseRegExpLiteral({ pattern, flags }): N.Node {\n      let regex = null;\n      try {\n        regex = new RegExp(pattern, flags);\n      } catch (e) {\n        // In environments that don't support these flags value will\n        // be null as the regex can't be represented natively.\n      }\n      const node = this.estreeParseLiteral<N.EstreeRegExpLiteral>(regex);\n      node.regex = { pattern, flags };\n\n      return node;\n    }\n\n    parseBigIntLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/es2020.md#bigintliteral\n      let bigInt;\n      try {\n        // $FlowIgnore\n        bigInt = BigInt(value);\n      } catch {\n        bigInt = null;\n      }\n      const node = this.estreeParseLiteral<N.EstreeBigIntLiteral>(bigInt);\n      node.bigint = String(node.value || value);\n\n      return node;\n    }\n\n    parseDecimalLiteral(value: any): N.Node {\n      // https://github.com/estree/estree/blob/master/experimental/decimal.md\n      // todo: use BigDecimal when node supports it.\n      const decimal = null;\n      const node = this.estreeParseLiteral(decimal);\n      node.decimal = String(node.value || value);\n\n      return node;\n    }\n\n    estreeParseLiteral<T: N.Node>(value: any) {\n      return this.parseLiteral<T>(value, \"Literal\");\n    }\n\n    parseStringLiteral(value: any): N.Node {\n      return this.estreeParseLiteral(value);\n    }\n\n    parseNumericLiteral(value: any): any {\n      return this.estreeParseLiteral(value);\n    }\n\n    parseNullLiteral(): N.Node {\n      return this.estreeParseLiteral(null);\n    }\n\n    parseBooleanLiteral(value: boolean): N.BooleanLiteral {\n      return this.estreeParseLiteral(value);\n    }\n\n    directiveToStmt(directive: N.Directive): N.ExpressionStatement {\n      const directiveLiteral = directive.value;\n\n      const stmt = this.startNodeAt(directive.start, directive.loc.start);\n      const expression = this.startNodeAt(\n        directiveLiteral.start,\n        directiveLiteral.loc.start,\n      );\n\n      expression.value = directiveLiteral.extra.expressionValue;\n      expression.raw = directiveLiteral.extra.raw;\n\n      stmt.expression = this.finishNodeAt(\n        expression,\n        \"Literal\",\n        directiveLiteral.end,\n        directiveLiteral.loc.end,\n      );\n      stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n\n      return this.finishNodeAt(\n        stmt,\n        \"ExpressionStatement\",\n        directive.end,\n        directive.loc.end,\n      );\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    initFunction(\n      node: N.BodilessFunctionOrMethodBase,\n      isAsync: ?boolean,\n    ): void {\n      super.initFunction(node, isAsync);\n      node.expression = false;\n    }\n\n    checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n      if (node != null && this.isObjectProperty(node)) {\n        this.checkDeclaration(((node: any): N.EstreeProperty).value);\n      } else {\n        super.checkDeclaration(node);\n      }\n    }\n\n    getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n      return ((method: any): N.EstreeProperty | N.EstreeMethodDefinition).value\n        .params;\n    }\n\n    isValidDirective(stmt: N.Statement): boolean {\n      return (\n        stmt.type === \"ExpressionStatement\" &&\n        stmt.expression.type === \"Literal\" &&\n        typeof stmt.expression.value === \"string\" &&\n        !stmt.expression.extra?.parenthesized\n      );\n    }\n\n    stmtToDirective(stmt: N.Statement): N.Directive {\n      const directive = super.stmtToDirective(stmt);\n      const value = stmt.expression.value;\n\n      // Record the expression value as in estree mode we want\n      // the stmt to have the real value e.g. (\"use strict\") and\n      // not the raw value e.g. (\"use\\\\x20strict\")\n      this.addExtra(directive.value, \"expressionValue\", value);\n\n      return directive;\n    }\n\n    parseBlockBody(\n      node: N.BlockStatementLike,\n      ...args: [?boolean, boolean, TokenType, void | (boolean => void)]\n    ): void {\n      super.parseBlockBody(node, ...args);\n\n      const directiveStatements = node.directives.map(d =>\n        this.directiveToStmt(d),\n      );\n      node.body = directiveStatements.concat(node.body);\n      // $FlowIgnore - directives isn't optional in the type definition\n      delete node.directives;\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      );\n      if (method.typeParameters) {\n        // $FlowIgnore\n        method.value.typeParameters = method.typeParameters;\n        delete method.typeParameters;\n      }\n      classBody.body.push(method);\n    }\n\n    parseMaybePrivateName(...args: [boolean]): any {\n      const node = super.parseMaybePrivateName(...args);\n      if (\n        node.type === \"PrivateName\" &&\n        this.getPluginOption(\"estree\", \"classFeatures\")\n      ) {\n        return this.convertPrivateNameToPrivateIdentifier(node);\n      }\n      return node;\n    }\n\n    convertPrivateNameToPrivateIdentifier(\n      node: N.PrivateName,\n    ): N.EstreePrivateIdentifier {\n      const name = super.getPrivateNameSV(node);\n      node = (node: any);\n      delete node.id;\n      node.name = name;\n      node.type = \"PrivateIdentifier\";\n      return node;\n    }\n\n    isPrivateName(node: N.Node): boolean {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return super.isPrivateName(node);\n      }\n      return node.type === \"PrivateIdentifier\";\n    }\n\n    getPrivateNameSV(node: N.Node): string {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return super.getPrivateNameSV(node);\n      }\n      return node.name;\n    }\n\n    parseLiteral<T: N.Node>(value: any, type: $ElementType<T, \"type\">): T {\n      const node = super.parseLiteral<T>(value, type);\n      node.raw = node.extra.raw;\n      delete node.extra;\n\n      return node;\n    }\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpression: ?boolean,\n      isMethod?: boolean = false,\n    ): void {\n      super.parseFunctionBody(node, allowExpression, isMethod);\n      node.expression = node.body.type !== \"BlockStatement\";\n    }\n\n    parseMethod<T: N.MethodLike>(\n      node: T,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowDirectSuper: boolean,\n      type: string,\n      inClassScope: boolean = false,\n    ): T {\n      let funcNode = this.startNode();\n      funcNode.kind = node.kind; // provide kind, so super method correctly sets state\n      funcNode = super.parseMethod(\n        funcNode,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowDirectSuper,\n        type,\n        inClassScope,\n      );\n      funcNode.type = \"FunctionExpression\";\n      delete funcNode.kind;\n      // $FlowIgnore\n      node.value = funcNode;\n      if (type === \"ClassPrivateMethod\") {\n        // $FlowIgnore\n        node.computed = false;\n      }\n      type = \"MethodDefinition\";\n      return this.finishNode(node, type);\n    }\n\n    parseClassProperty(...args: [N.ClassProperty]): any {\n      const propertyNode = (super.parseClassProperty(...args): any);\n      if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n        propertyNode.type = \"PropertyDefinition\";\n      }\n      return (propertyNode: N.EstreePropertyDefinition);\n    }\n\n    parseClassPrivateProperty(...args: [N.ClassPrivateProperty]): any {\n      const propertyNode = (super.parseClassPrivateProperty(...args): any);\n      if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n        propertyNode.type = \"PropertyDefinition\";\n        propertyNode.computed = false;\n      }\n      return (propertyNode: N.EstreePropertyDefinition);\n    }\n\n    parseObjectMethod(\n      prop: N.ObjectMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n    ): ?N.ObjectMethod {\n      const node: N.EstreeProperty = (super.parseObjectMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ): any);\n\n      if (node) {\n        node.type = \"Property\";\n        if (((node: any): N.ClassMethod).kind === \"method\") node.kind = \"init\";\n        node.shorthand = false;\n      }\n\n      return (node: any);\n    }\n\n    parseObjectProperty(\n      prop: N.ObjectProperty,\n      startPos: ?number,\n      startLoc: ?Position,\n      isPattern: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): ?N.ObjectProperty {\n      const node: N.EstreeProperty = (super.parseObjectProperty(\n        prop,\n        startPos,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      ): any);\n\n      if (node) {\n        node.kind = \"init\";\n        node.type = \"Property\";\n      }\n\n      return (node: any);\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): N.Node {\n      if (node != null && this.isObjectProperty(node)) {\n        this.toAssignable(node.value, isLHS);\n\n        return node;\n      }\n\n      return super.toAssignable(node, isLHS);\n    }\n\n    toAssignableObjectExpressionProp(prop: N.Node, ...args) {\n      if (prop.kind === \"get\" || prop.kind === \"set\") {\n        this.raise(prop.key.start, Errors.PatternHasAccessor);\n      } else if (prop.method) {\n        this.raise(prop.key.start, Errors.PatternHasMethod);\n      } else {\n        super.toAssignableObjectExpressionProp(prop, ...args);\n      }\n    }\n\n    finishCallExpression<T: N.CallExpression | N.OptionalCallExpression>(\n      node: T,\n      optional: boolean,\n    ): N.Expression {\n      super.finishCallExpression(node, optional);\n\n      if (node.callee.type === \"Import\") {\n        ((node: N.Node): N.EstreeImportExpression).type = \"ImportExpression\";\n        ((node: N.Node): N.EstreeImportExpression).source = node.arguments[0];\n        if (this.hasPlugin(\"importAssertions\")) {\n          ((node: N.Node): N.EstreeImportExpression).attributes =\n            node.arguments[1] ?? null;\n        }\n        // $FlowIgnore - arguments isn't optional in the type definition\n        delete node.arguments;\n        // $FlowIgnore - callee isn't optional in the type definition\n        delete node.callee;\n      }\n\n      return node;\n    }\n\n    toReferencedArguments(\n      node:\n        | N.CallExpression\n        | N.OptionalCallExpression\n        | N.EstreeImportExpression,\n      /* isParenthesizedExpr?: boolean, */\n    ) {\n      // ImportExpressions do not have an arguments array.\n      if (node.type === \"ImportExpression\") {\n        return;\n      }\n\n      super.toReferencedArguments(node);\n    }\n\n    parseExport(node: N.Node) {\n      super.parseExport(node);\n\n      switch (node.type) {\n        case \"ExportAllDeclaration\":\n          node.exported = null;\n          break;\n\n        case \"ExportNamedDeclaration\":\n          if (\n            node.specifiers.length === 1 &&\n            node.specifiers[0].type === \"ExportNamespaceSpecifier\"\n          ) {\n            node.type = \"ExportAllDeclaration\";\n            node.exported = node.specifiers[0].exported;\n            delete node.specifiers;\n          }\n\n          break;\n      }\n\n      return node;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      state: N.ParseSubscriptState,\n    ) {\n      const node = super.parseSubscript(\n        base,\n        startPos,\n        startLoc,\n        noCalls,\n        state,\n      );\n\n      if (state.optionalChainMember) {\n        // https://github.com/estree/estree/blob/master/es2020.md#chainexpression\n        if (\n          node.type === \"OptionalMemberExpression\" ||\n          node.type === \"OptionalCallExpression\"\n        ) {\n          node.type = node.type.substring(8); // strip Optional prefix\n        }\n        if (state.stop) {\n          const chain = this.startNodeAtNode(node);\n          chain.expression = node;\n          return this.finishNode(chain, \"ChainExpression\");\n        }\n      } else if (\n        node.type === \"MemberExpression\" ||\n        node.type === \"CallExpression\"\n      ) {\n        node.optional = false;\n      }\n\n      return node;\n    }\n\n    hasPropertyAsPrivateName(node: N.Node): boolean {\n      if (node.type === \"ChainExpression\") {\n        node = node.expression;\n      }\n      return super.hasPropertyAsPrivateName(node);\n    }\n\n    isOptionalChain(node: N.Node): boolean {\n      return node.type === \"ChainExpression\";\n    }\n\n    isObjectProperty(node: N.Node): boolean {\n      return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n    }\n\n    isObjectMethod(node: N.Node): boolean {\n      return node.method || node.kind === \"get\" || node.kind === \"set\";\n    }\n  };\n","// @flow\n\n// The token context is used to track whether the apostrophe \"`\"\n// starts or ends a string template\n\nimport { types as tt } from \"./types\";\n\nexport class TokContext {\n  constructor(token: string, preserveSpace?: boolean) {\n    this.token = token;\n    this.preserveSpace = !!preserveSpace;\n  }\n\n  token: string;\n  preserveSpace: boolean;\n}\n\nexport const types: {\n  [key: string]: TokContext,\n} = {\n  brace: new TokContext(\"{\"),\n  template: new TokContext(\"`\", true),\n};\n\n// Token-specific context update code\n// Note that we should avoid accessing `this.prodParam` in context update,\n// because it is executed immediately when last token is consumed, which may be\n// before `this.prodParam` is updated. e.g.\n// ```\n// function *g() { () => yield / 2 }\n// ```\n// When `=>` is eaten, the context update of `yield` is executed, however,\n// `this.prodParam` still has `[Yield]` production because it is not yet updated\n\ntt.braceR.updateContext = context => {\n  context.pop();\n};\n\n// we don't need to update context for tt.braceBarL because we do not pop context for tt.braceBarR\n// ideally only dollarBraceL \"${\" needs a non-template context\n// in order to indicate that the last \"`\" in `${`\" starts a new string template\n// inside a template element within outer string template.\n// but when we popped such context in `}`, we lost track of whether this\n// `}` matches a `${` or other tokens matching `}`, so we have to push\n// such context in every token that `}` will match.\ntt.braceL.updateContext =\n  tt.braceHashL.updateContext =\n  tt.dollarBraceL.updateContext =\n    context => {\n      context.push(types.brace);\n    };\n\ntt.backQuote.updateContext = context => {\n  if (context[context.length - 1] === types.template) {\n    context.pop();\n  } else {\n    context.push(types.template);\n  }\n};\n","import * as charCodes from \"charcodes\";\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point between 0x80 and 0xffff.\n// Generated by `scripts/generate-identifier-regex.js`.\n\n/* prettier-ignore */\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n/* prettier-ignore */\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\nconst nonASCIIidentifierStart = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + \"]\",\n);\nconst nonASCIIidentifier = new RegExp(\n  \"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\",\n);\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset-encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by `scripts/generate-identifier-regex.js`.\n/* prettier-ignore */\n/* prettier-ignore */\nconst astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,107,20,28,22,13,52,76,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,230,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,190,0,80,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8952,286,50,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,2357,44,11,6,17,0,370,43,1301,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42717,35,4148,12,221,3,5761,15,7472,3104,541,1507,4938];\n/* prettier-ignore */\nconst astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,154,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,419,13,1495,6,110,6,6,9,4759,9,787719,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code: number, set: readonly number[]): boolean {\n  let pos = 0x10000;\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n  return false;\n}\n\n// Test whether a given character code starts an identifier.\n\nexport function isIdentifierStart(code: number): boolean {\n  if (code < charCodes.uppercaseA) return code === charCodes.dollarSign;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return (\n      code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code))\n    );\n  }\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\n// Test whether a given character is part of an identifier.\n\nexport function isIdentifierChar(code: number): boolean {\n  if (code < charCodes.digit0) return code === charCodes.dollarSign;\n  if (code < charCodes.colon) return true;\n  if (code < charCodes.uppercaseA) return false;\n  if (code <= charCodes.uppercaseZ) return true;\n  if (code < charCodes.lowercaseA) return code === charCodes.underscore;\n  if (code <= charCodes.lowercaseZ) return true;\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n  return (\n    isInAstralSet(code, astralIdentifierStartCodes) ||\n    isInAstralSet(code, astralIdentifierCodes)\n  );\n}\n\n// Test whether a given string is a valid identifier name\n\nexport function isIdentifierName(name: string): boolean {\n  let isFirst = true;\n  for (let i = 0; i < name.length; i++) {\n    // The implementation is based on\n    // https://source.chromium.org/chromium/chromium/src/+/master:v8/src/builtins/builtins-string-gen.cc;l=1455;drc=221e331b49dfefadbc6fa40b0c68e6f97606d0b3;bpv=0;bpt=1\n    // We reimplement `codePointAt` because `codePointAt` is a V8 builtin which is not inlined by TurboFan (as of M91)\n    // since `name` is mostly ASCII, an inlined `charCodeAt` wins here\n    let cp = name.charCodeAt(i);\n    if ((cp & 0xfc00) === 0xd800 && i + 1 < name.length) {\n      const trail = name.charCodeAt(++i);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    if (isFirst) {\n      isFirst = false;\n      if (!isIdentifierStart(cp)) {\n        return false;\n      }\n    } else if (!isIdentifierChar(cp)) {\n      return false;\n    }\n  }\n  return !isFirst;\n}\n","const reservedWords = {\n  keyword: [\n    \"break\",\n    \"case\",\n    \"catch\",\n    \"continue\",\n    \"debugger\",\n    \"default\",\n    \"do\",\n    \"else\",\n    \"finally\",\n    \"for\",\n    \"function\",\n    \"if\",\n    \"return\",\n    \"switch\",\n    \"throw\",\n    \"try\",\n    \"var\",\n    \"const\",\n    \"while\",\n    \"with\",\n    \"new\",\n    \"this\",\n    \"super\",\n    \"class\",\n    \"extends\",\n    \"export\",\n    \"import\",\n    \"null\",\n    \"true\",\n    \"false\",\n    \"in\",\n    \"instanceof\",\n    \"typeof\",\n    \"void\",\n    \"delete\",\n  ],\n  strict: [\n    \"implements\",\n    \"interface\",\n    \"let\",\n    \"package\",\n    \"private\",\n    \"protected\",\n    \"public\",\n    \"static\",\n    \"yield\",\n  ],\n  strictBind: [\"eval\", \"arguments\"],\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\n\n/**\n * Checks if word is a reserved word in non-strict mode\n */\nexport function isReservedWord(word: string, inModule: boolean): boolean {\n  return (inModule && word === \"await\") || word === \"enum\";\n}\n\n/**\n * Checks if word is a reserved word in non-binding strict mode\n *\n * Includes non-strict reserved words\n */\nexport function isStrictReservedWord(word: string, inModule: boolean): boolean {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode, but it is allowed as\n * a normal identifier.\n */\nexport function isStrictBindOnlyReservedWord(word: string): boolean {\n  return reservedWordsStrictBindSet.has(word);\n}\n\n/**\n * Checks if word is a reserved word in binding strict mode\n *\n * Includes non-strict reserved words and non-binding strict reserved words\n */\nexport function isStrictBindReservedWord(\n  word: string,\n  inModule: boolean,\n): boolean {\n  return (\n    isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word)\n  );\n}\n\nexport function isKeyword(word: string): boolean {\n  return keywords.has(word);\n}\n","/* eslint max-len: 0 */\n\n// @flow\n\nimport * as charCodes from \"charcodes\";\n\nexport {\n  isIdentifierStart,\n  isIdentifierChar,\n  isReservedWord,\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n  isStrictReservedWord,\n  isKeyword,\n} from \"@babel/helper-validator-identifier\";\n\nexport const keywordRelationalOperator = /^in(stanceof)?$/;\n\n// Test whether a current state character code and next character code is @\n\nexport function isIteratorStart(current: number, next: number): boolean {\n  return current === charCodes.atSign && next === charCodes.atSign;\n}\n\n// This is the comprehensive set of JavaScript reserved words\n// If a word is in this set, it could be a reserved word,\n// depending on sourceType/strictMode/binding info. In other words\n// if a word is not in this set, it is not a reserved word under\n// any circumstance.\nconst reservedWordLikeSet = new Set([\n  \"break\",\n  \"case\",\n  \"catch\",\n  \"continue\",\n  \"debugger\",\n  \"default\",\n  \"do\",\n  \"else\",\n  \"finally\",\n  \"for\",\n  \"function\",\n  \"if\",\n  \"return\",\n  \"switch\",\n  \"throw\",\n  \"try\",\n  \"var\",\n  \"const\",\n  \"while\",\n  \"with\",\n  \"new\",\n  \"this\",\n  \"super\",\n  \"class\",\n  \"extends\",\n  \"export\",\n  \"import\",\n  \"null\",\n  \"true\",\n  \"false\",\n  \"in\",\n  \"instanceof\",\n  \"typeof\",\n  \"void\",\n  \"delete\",\n  // strict\n  \"implements\",\n  \"interface\",\n  \"let\",\n  \"package\",\n  \"private\",\n  \"protected\",\n  \"public\",\n  \"static\",\n  \"yield\",\n  // strictBind\n  \"eval\",\n  \"arguments\",\n  // reservedWorkLike\n  \"enum\",\n  \"await\",\n]);\n\nexport function canBeReservedWord(word: string): boolean {\n  return reservedWordLikeSet.has(word);\n}\n","// @flow\n\n// Each scope gets a bitset that may contain these flags\n// prettier-ignore\nexport const SCOPE_OTHER        = 0b000000000,\n             SCOPE_PROGRAM      = 0b000000001,\n             SCOPE_FUNCTION     = 0b000000010,\n             SCOPE_ARROW        = 0b000000100,\n             SCOPE_SIMPLE_CATCH = 0b000001000,\n             SCOPE_SUPER        = 0b000010000,\n             SCOPE_DIRECT_SUPER = 0b000100000,\n             SCOPE_CLASS        = 0b001000000,\n             SCOPE_STATIC_BLOCK = 0b010000000,\n             SCOPE_TS_MODULE    = 0b100000000,\n             SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\n\nexport type ScopeFlags =\n  | typeof SCOPE_OTHER\n  | typeof SCOPE_PROGRAM\n  | typeof SCOPE_FUNCTION\n  | typeof SCOPE_VAR\n  | typeof SCOPE_ARROW\n  | typeof SCOPE_SIMPLE_CATCH\n  | typeof SCOPE_SUPER\n  | typeof SCOPE_DIRECT_SUPER\n  | typeof SCOPE_CLASS\n  | typeof SCOPE_STATIC_BLOCK;\n\n// These flags are meant to be _only_ used inside the Scope class (or subclasses).\n// prettier-ignore\nexport const BIND_KIND_VALUE            = 0b000000_0000_01,\n             BIND_KIND_TYPE             = 0b000000_0000_10,\n             // Used in checkLVal and declareName to determine the type of a binding\n             BIND_SCOPE_VAR             = 0b000000_0001_00, // Var-style binding\n             BIND_SCOPE_LEXICAL         = 0b000000_0010_00, // Let- or const-style binding\n             BIND_SCOPE_FUNCTION        = 0b000000_0100_00, // Function declaration\n             BIND_SCOPE_OUTSIDE         = 0b000000_1000_00, // Special case for function names as\n                                                   // bound inside the function\n             // Misc flags\n             BIND_FLAGS_NONE            = 0b000001_0000_00,\n             BIND_FLAGS_CLASS           = 0b000010_0000_00,\n             BIND_FLAGS_TS_ENUM         = 0b000100_0000_00,\n             BIND_FLAGS_TS_CONST_ENUM   = 0b001000_0000_00,\n             BIND_FLAGS_TS_EXPORT_ONLY  = 0b010000_0000_00,\n             BIND_FLAGS_FLOW_DECLARE_FN = 0b100000_0000_00;\n\n// These flags are meant to be _only_ used by Scope consumers\n// prettier-ignore\n/*                              =    is value?    |    is type?    |      scope          |    misc flags    */\nexport const BIND_CLASS         = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_CLASS  ,\n             BIND_LEXICAL       = BIND_KIND_VALUE | 0              | BIND_SCOPE_LEXICAL  | 0                 ,\n             BIND_VAR           = BIND_KIND_VALUE | 0              | BIND_SCOPE_VAR      | 0                 ,\n             BIND_FUNCTION      = BIND_KIND_VALUE | 0              | BIND_SCOPE_FUNCTION | 0                 ,\n             BIND_TS_INTERFACE  = 0               | BIND_KIND_TYPE | 0                   | BIND_FLAGS_CLASS  ,\n             BIND_TS_TYPE       = 0               | BIND_KIND_TYPE | 0                   | 0                 ,\n             BIND_TS_ENUM       = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL  | BIND_FLAGS_TS_ENUM,\n             BIND_TS_AMBIENT    = 0               | 0              | 0            | BIND_FLAGS_TS_EXPORT_ONLY,\n             // These bindings don't introduce anything in the scope. They are used for assignments and\n             // function expressions IDs.\n             BIND_NONE          = 0               | 0              | 0                   | BIND_FLAGS_NONE   ,\n             BIND_OUTSIDE       = BIND_KIND_VALUE | 0              | 0                   | BIND_FLAGS_NONE   ,\n\n             BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n             BIND_TS_NAMESPACE  = 0               | 0              | 0            | BIND_FLAGS_TS_EXPORT_ONLY,\n\n             BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\n\nexport type BindingTypes =\n  | typeof BIND_NONE\n  | typeof BIND_OUTSIDE\n  | typeof BIND_VAR\n  | typeof BIND_LEXICAL\n  | typeof BIND_CLASS\n  | typeof BIND_FUNCTION\n  | typeof BIND_TS_INTERFACE\n  | typeof BIND_TS_TYPE\n  | typeof BIND_TS_ENUM\n  | typeof BIND_TS_AMBIENT\n  | typeof BIND_TS_NAMESPACE;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_FLAG_STATIC = 0b1_00,\n             CLASS_ELEMENT_KIND_GETTER = 0b0_10,\n             CLASS_ELEMENT_KIND_SETTER = 0b0_01,\n             CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\n\n// prettier-ignore\nexport const CLASS_ELEMENT_STATIC_GETTER   = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_STATIC_SETTER   = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n             CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n             CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n             CLASS_ELEMENT_OTHER           = 0;\n\nexport type ClassElementTypes =\n  | typeof CLASS_ELEMENT_STATIC_GETTER\n  | typeof CLASS_ELEMENT_STATIC_SETTER\n  | typeof CLASS_ELEMENT_INSTANCE_GETTER\n  | typeof CLASS_ELEMENT_INSTANCE_SETTER\n  | typeof CLASS_ELEMENT_OTHER;\n","// @flow\nimport {\n  SCOPE_ARROW,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_SUPER,\n  SCOPE_PROGRAM,\n  SCOPE_VAR,\n  SCOPE_CLASS,\n  SCOPE_STATIC_BLOCK,\n  BIND_SCOPE_FUNCTION,\n  BIND_SCOPE_VAR,\n  BIND_SCOPE_LEXICAL,\n  BIND_KIND_VALUE,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"./scopeflags\";\nimport * as N from \"../types\";\nimport { Errors, type raiseFunction } from \"../parser/error\";\n\n// Start an AST node, attaching a start offset.\nexport class Scope {\n  declare flags: ScopeFlags;\n  // A set of var-declared names in the current lexical scope\n  var: Set<string> = new Set();\n  // A set of lexically-declared names in the current lexical scope\n  lexical: Set<string> = new Set();\n  // A set of lexically-declared FunctionDeclaration names in the current lexical scope\n  functions: Set<string> = new Set();\n\n  constructor(flags: ScopeFlags) {\n    this.flags = flags;\n  }\n}\n\n// The functions in this module keep track of declared variables in the\n// current scope in order to detect duplicate variable names.\nexport default class ScopeHandler<IScope: Scope = Scope> {\n  scopeStack: Array<IScope> = [];\n  declare raise: raiseFunction;\n  declare inModule: boolean;\n  undefinedExports: Map<string, number> = new Map();\n  undefinedPrivateNames: Map<string, number> = new Map();\n\n  constructor(raise: raiseFunction, inModule: boolean) {\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n  get allowSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_SUPER) > 0;\n  }\n  get allowDirectSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_DIRECT_SUPER) > 0;\n  }\n  get inClass() {\n    return (this.currentThisScopeFlags() & SCOPE_CLASS) > 0;\n  }\n  get inClassAndNotInNonArrowFunction() {\n    const flags = this.currentThisScopeFlags();\n    return (flags & SCOPE_CLASS) > 0 && (flags & SCOPE_FUNCTION) === 0;\n  }\n  get inStaticBlock() {\n    return (this.currentThisScopeFlags() & SCOPE_STATIC_BLOCK) > 0;\n  }\n  get inNonArrowFunction() {\n    return (this.currentThisScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags: ScopeFlags): Scope {\n    return new Scope(flags);\n  }\n  // This method will be overwritten by subclasses\n  /*:: +createScope: (flags: ScopeFlags) => IScope; */\n\n  enter(flags: ScopeFlags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  // The spec says:\n  // > At the top level of a function, or script, function declarations are\n  // > treated like var declarations rather than like lexical declarations.\n  treatFunctionsAsVarInScope(scope: IScope): boolean {\n    return !!(\n      scope.flags & SCOPE_FUNCTION ||\n      (!this.inModule && scope.flags & SCOPE_PROGRAM)\n    );\n  }\n\n  declareName(name: string, bindingType: BindingTypes, pos: number) {\n    let scope = this.currentScope();\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.add(name);\n      } else {\n        scope.lexical.add(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.add(name);\n        this.maybeExportDefined(scope, name);\n\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope: IScope, name: string) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n    pos: number,\n  ) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, Errors.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(\n    scope: IScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return (\n        scope.lexical.has(name) ||\n        scope.functions.has(name) ||\n        scope.var.has(name)\n      );\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return (\n        scope.lexical.has(name) ||\n        (!this.treatFunctionsAsVarInScope(scope) && scope.var.has(name))\n      );\n    }\n\n    return (\n      (scope.lexical.has(name) &&\n        !(\n          scope.flags & SCOPE_SIMPLE_CATCH &&\n          scope.lexical.values().next().value === name\n        )) ||\n      (!this.treatFunctionsAsVarInScope(scope) && scope.functions.has(name))\n    );\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    const { name } = id;\n    const topLevelScope = this.scopeStack[0];\n    if (\n      !topLevelScope.lexical.has(name) &&\n      !topLevelScope.var.has(name) &&\n      // In strict mode, scope.functions will always be empty.\n      // Modules are strict by default, but the `scriptMode` option\n      // can overwrite this behavior.\n      !topLevelScope.functions.has(name)\n    ) {\n      this.undefinedExports.set(name, id.start);\n    }\n  }\n\n  currentScope(): IScope {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  // $FlowIgnore\n  currentVarScopeFlags(): ScopeFlags {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & SCOPE_VAR) {\n        return flags;\n      }\n    }\n  }\n\n  // Could be useful for `arguments`, `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\n  // $FlowIgnore\n  currentThisScopeFlags(): ScopeFlags {\n    for (let i = this.scopeStack.length - 1; ; i--) {\n      const { flags } = this.scopeStack[i];\n      if (flags & (SCOPE_VAR | SCOPE_CLASS) && !(flags & SCOPE_ARROW)) {\n        return flags;\n      }\n    }\n  }\n}\n","// @flow\n\nimport ScopeHandler, { Scope } from \"../../util/scope\";\nimport {\n  BIND_FLAGS_FLOW_DECLARE_FN,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"../../util/scopeflags\";\nimport * as N from \"../../types\";\n\n// Reference implementation: https://github.com/facebook/flow/blob/23aeb2a2ef6eb4241ce178fde5d8f17c5f747fb5/src/typing/env.ml#L536-L584\nclass FlowScope extends Scope {\n  // declare function foo(): type;\n  declareFunctions: Set<string> = new Set();\n}\n\nexport default class FlowScopeHandler extends ScopeHandler<FlowScope> {\n  createScope(flags: ScopeFlags): FlowScope {\n    return new FlowScope(flags);\n  }\n\n  declareName(name: string, bindingType: BindingTypes, pos: number) {\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.add(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n  }\n\n  isRedeclaredInScope(\n    scope: FlowScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (super.isRedeclaredInScope(...arguments)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return (\n        !scope.declareFunctions.has(name) &&\n        (scope.lexical.has(name) || scope.functions.has(name))\n      );\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    if (!this.scopeStack[0].declareFunctions.has(id.name)) {\n      super.checkLocalExport(id);\n    }\n  }\n}\n","// @flow\n\n/*:: declare var invariant; */\n\n// Error messages are colocated with the plugin.\n/* eslint-disable @babel/development-internal/dry-error-messages */\n\nimport type Parser from \"../../parser\";\nimport { types as tt, type TokenType } from \"../../tokenizer/types\";\nimport * as N from \"../../types\";\nimport type { Position } from \"../../util/location\";\nimport { types as tc } from \"../../tokenizer/context\";\nimport * as charCodes from \"charcodes\";\nimport { isIteratorStart, isKeyword } from \"../../util/identifier\";\nimport FlowScopeHandler from \"./scope\";\nimport {\n  type BindingTypes,\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  BIND_FLOW_DECLARE_FN,\n  SCOPE_ARROW,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n} from \"../../util/scopeflags\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { Errors, makeErrorTemplates, ErrorCodes } from \"../../parser/error\";\n\nconst reservedTypes = new Set([\n  \"_\",\n  \"any\",\n  \"bool\",\n  \"boolean\",\n  \"empty\",\n  \"extends\",\n  \"false\",\n  \"interface\",\n  \"mixed\",\n  \"null\",\n  \"number\",\n  \"static\",\n  \"string\",\n  \"true\",\n  \"typeof\",\n  \"void\",\n]);\n\n/* eslint sort-keys: \"error\" */\n// The Errors key follows https://github.com/facebook/flow/blob/master/src/parser/parse_error.ml unless it does not exist\nconst FlowErrors = makeErrorTemplates(\n  {\n    AmbiguousConditionalArrow:\n      \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n    AmbiguousDeclareModuleKind:\n      \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n    AssignReservedType: \"Cannot overwrite reserved type %0.\",\n    DeclareClassElement:\n      \"The `declare` modifier can only appear on class fields.\",\n    DeclareClassFieldInitializer:\n      \"Initializers are not allowed in fields with the `declare` modifier.\",\n    DuplicateDeclareModuleExports:\n      \"Duplicate `declare module.exports` statement.\",\n    EnumBooleanMemberNotInitialized:\n      \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n    EnumDuplicateMemberName:\n      \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n    EnumInconsistentMemberValues:\n      \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n    EnumInvalidExplicitType:\n      \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n    EnumInvalidExplicitTypeUnknownSupplied:\n      \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n    EnumInvalidMemberInitializerPrimaryType:\n      \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n    EnumInvalidMemberInitializerSymbolType:\n      \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n    EnumInvalidMemberInitializerUnknownType:\n      \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n    EnumInvalidMemberName:\n      \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n    EnumNumberMemberNotInitialized:\n      \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n    EnumStringMemberInconsistentlyInitailized:\n      \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n    GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n    ImportTypeShorthandOnlyInPureImport:\n      \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n    InexactInsideExact:\n      \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n    InexactInsideNonObject:\n      \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n    InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n    InvalidNonTypeImportInDeclareModule:\n      \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n    MissingTypeParamDefault:\n      \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n    NestedDeclareModule:\n      \"`declare module` cannot be used inside another `declare module`.\",\n    NestedFlowComment:\n      \"Cannot have a flow comment inside another flow comment.\",\n    OptionalBindingPattern:\n      \"A binding pattern parameter cannot be optional in an implementation signature.\",\n    SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n    SpreadVariance: \"Spread properties cannot have variance.\",\n    ThisParamAnnotationRequired:\n      \"A type annotation is required for the `this` parameter.\",\n    ThisParamBannedInConstructor:\n      \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n    ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n    ThisParamMustBeFirst:\n      \"The `this` parameter must be the first function parameter.\",\n    ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n    TypeBeforeInitializer:\n      \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n    TypeCastInPattern:\n      \"The type cast expression is expected to be wrapped with parenthesis.\",\n    UnexpectedExplicitInexactInObject:\n      \"Explicit inexact syntax must appear at the end of an inexact object.\",\n    UnexpectedReservedType: \"Unexpected reserved type %0.\",\n    UnexpectedReservedUnderscore:\n      \"`_` is only allowed as a type argument to call or new.\",\n    UnexpectedSpaceBetweenModuloChecks:\n      \"Spaces between `%` and `checks` are not allowed here.\",\n    UnexpectedSpreadType:\n      \"Spread operator cannot appear in class or interface definitions.\",\n    UnexpectedSubtractionOperand:\n      'Unexpected token, expected \"number\" or \"bigint\".',\n    UnexpectedTokenAfterTypeParameter:\n      \"Expected an arrow function after this type parameter declaration.\",\n    UnexpectedTypeParameterBeforeAsyncArrowFunction:\n      \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n    UnsupportedDeclareExportKind:\n      \"`declare export %0` is not supported. Use `%1` instead.\",\n    UnsupportedStatementInDeclareModule:\n      \"Only declares and type imports are allowed inside declare module.\",\n    UnterminatedFlowComment: \"Unterminated flow-comment.\",\n  },\n  /* code */ ErrorCodes.SyntaxError,\n);\n/* eslint-disable sort-keys */\n\nfunction isEsModuleType(bodyElement: N.Node): boolean {\n  return (\n    bodyElement.type === \"DeclareExportAllDeclaration\" ||\n    (bodyElement.type === \"DeclareExportDeclaration\" &&\n      (!bodyElement.declaration ||\n        (bodyElement.declaration.type !== \"TypeAlias\" &&\n          bodyElement.declaration.type !== \"InterfaceDeclaration\")))\n  );\n}\n\nfunction hasTypeImportKind(node: N.Node): boolean {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state: { type: TokenType, value: any }): boolean {\n  return (\n    (state.type === tt.name || !!state.type.keyword) && state.value !== \"from\"\n  );\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\",\n};\n\n// Like Array#filter, but returns a tuple [ acceptedElements, discardedElements ]\nfunction partition<T>(\n  list: T[],\n  test: (T, number, T[]) => ?boolean,\n): [T[], T[]] {\n  const list1 = [];\n  const list2 = [];\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\n\n// Flow enums types\ntype EnumExplicitType = null | \"boolean\" | \"number\" | \"string\" | \"symbol\";\ntype EnumContext = {|\n  enumName: string,\n  explicitType: EnumExplicitType,\n  memberName: string,\n|};\ntype EnumMemberInit =\n  | {| type: \"number\", pos: number, value: N.Node |}\n  | {| type: \"string\", pos: number, value: N.Node |}\n  | {| type: \"boolean\", pos: number, value: N.Node |}\n  | {| type: \"invalid\", pos: number |}\n  | {| type: \"none\", pos: number |};\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    // The value of the @flow/@noflow pragma. Initially undefined, transitions\n    // to \"@flow\" or \"@noflow\" if we see a pragma. Transitions to null if we are\n    // past the initial comment.\n    flowPragma: void | null | \"flow\" | \"noflow\" = undefined;\n\n    getScopeHandler(): Class<FlowScopeHandler> {\n      return FlowScopeHandler;\n    }\n\n    shouldParseTypes(): boolean {\n      return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n    }\n\n    shouldParseEnums(): boolean {\n      return !!this.getPluginOption(\"flow\", \"enums\");\n    }\n\n    finishToken(type: TokenType, val: any): void {\n      if (\n        type !== tt.string &&\n        type !== tt.semi &&\n        type !== tt.interpreterDirective\n      ) {\n        if (this.flowPragma === undefined) {\n          this.flowPragma = null;\n        }\n      }\n      return super.finishToken(type, val);\n    }\n\n    addComment(comment: N.Comment): void {\n      if (this.flowPragma === undefined) {\n        // Try to parse a flow pragma.\n        const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n        if (!matches) {\n          // do nothing\n        } else if (matches[1] === \"flow\") {\n          this.flowPragma = \"flow\";\n        } else if (matches[1] === \"noflow\") {\n          this.flowPragma = \"noflow\";\n        } else {\n          throw new Error(\"Unexpected flow pragma\");\n        }\n      }\n      return super.addComment(comment);\n    }\n\n    flowParseTypeInitialiser(tok?: TokenType): N.FlowType {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tok || tt.colon);\n\n      const type = this.flowParseType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParsePredicate(): N.FlowType {\n      const node = this.startNode();\n      const moduloPos = this.state.start;\n      this.next(); // eat `%`\n      this.expectContextual(\"checks\");\n      // Force '%' and 'checks' to be adjacent\n      if (this.state.lastTokStart > moduloPos + 1) {\n        this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n      }\n      if (this.eat(tt.parenL)) {\n        node.value = this.parseExpression();\n        this.expect(tt.parenR);\n        return this.finishNode(node, \"DeclaredPredicate\");\n      } else {\n        return this.finishNode(node, \"InferredPredicate\");\n      }\n    }\n\n    flowParseTypeAndPredicateInitialiser(): [?N.FlowType, ?N.FlowPredicate] {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      this.expect(tt.colon);\n      let type = null;\n      let predicate = null;\n      if (this.match(tt.modulo)) {\n        this.state.inType = oldInType;\n        predicate = this.flowParsePredicate();\n      } else {\n        type = this.flowParseType();\n        this.state.inType = oldInType;\n        if (this.match(tt.modulo)) {\n          predicate = this.flowParsePredicate();\n        }\n      }\n      return [type, predicate];\n    }\n\n    flowParseDeclareClass(node: N.FlowDeclareClass): N.FlowDeclareClass {\n      this.next();\n      this.flowParseInterfaceish(node, /*isClass*/ true);\n      return this.finishNode(node, \"DeclareClass\");\n    }\n\n    flowParseDeclareFunction(\n      node: N.FlowDeclareFunction,\n    ): N.FlowDeclareFunction {\n      this.next();\n\n      const id = (node.id = this.parseIdentifier());\n\n      const typeNode = this.startNode();\n      const typeContainer = this.startNode();\n\n      if (this.isRelational(\"<\")) {\n        typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        typeNode.typeParameters = null;\n      }\n\n      this.expect(tt.parenL);\n      const tmp = this.flowParseFunctionTypeParams();\n      typeNode.params = tmp.params;\n      typeNode.rest = tmp.rest;\n      typeNode.this = tmp._this;\n      this.expect(tt.parenR);\n\n      [\n        // $FlowFixMe (destructuring not supported yet)\n        typeNode.returnType,\n        // $FlowFixMe (destructuring not supported yet)\n        node.predicate,\n      ] = this.flowParseTypeAndPredicateInitialiser();\n\n      typeContainer.typeAnnotation = this.finishNode(\n        typeNode,\n        \"FunctionTypeAnnotation\",\n      );\n\n      id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n\n      this.resetEndLocation(id);\n      this.semicolon();\n\n      this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.start);\n\n      return this.finishNode(node, \"DeclareFunction\");\n    }\n\n    flowParseDeclare(\n      node: N.FlowDeclare,\n      insideModule?: boolean,\n    ): N.FlowDeclare {\n      if (this.match(tt._class)) {\n        return this.flowParseDeclareClass(node);\n      } else if (this.match(tt._function)) {\n        return this.flowParseDeclareFunction(node);\n      } else if (this.match(tt._var)) {\n        return this.flowParseDeclareVariable(node);\n      } else if (this.eatContextual(\"module\")) {\n        if (this.match(tt.dot)) {\n          return this.flowParseDeclareModuleExports(node);\n        } else {\n          if (insideModule) {\n            this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n          }\n          return this.flowParseDeclareModule(node);\n        }\n      } else if (this.isContextual(\"type\")) {\n        return this.flowParseDeclareTypeAlias(node);\n      } else if (this.isContextual(\"opaque\")) {\n        return this.flowParseDeclareOpaqueType(node);\n      } else if (this.isContextual(\"interface\")) {\n        return this.flowParseDeclareInterface(node);\n      } else if (this.match(tt._export)) {\n        return this.flowParseDeclareExportDeclaration(node, insideModule);\n      } else {\n        throw this.unexpected();\n      }\n    }\n\n    flowParseDeclareVariable(\n      node: N.FlowDeclareVariable,\n    ): N.FlowDeclareVariable {\n      this.next();\n      node.id = this.flowParseTypeAnnotatableIdentifier(\n        /*allowPrimitiveOverride*/ true,\n      );\n      this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n      this.semicolon();\n      return this.finishNode(node, \"DeclareVariable\");\n    }\n\n    flowParseDeclareModule(node: N.FlowDeclareModule): N.FlowDeclareModule {\n      this.scope.enter(SCOPE_OTHER);\n\n      if (this.match(tt.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        node.id = this.parseIdentifier();\n      }\n\n      const bodyNode = (node.body = this.startNode());\n      const body = (bodyNode.body = []);\n      this.expect(tt.braceL);\n      while (!this.match(tt.braceR)) {\n        let bodyNode = this.startNode();\n\n        if (this.match(tt._import)) {\n          this.next();\n          if (!this.isContextual(\"type\") && !this.match(tt._typeof)) {\n            this.raise(\n              this.state.lastTokStart,\n              FlowErrors.InvalidNonTypeImportInDeclareModule,\n            );\n          }\n          this.parseImport(bodyNode);\n        } else {\n          this.expectContextual(\n            \"declare\",\n            FlowErrors.UnsupportedStatementInDeclareModule,\n          );\n\n          bodyNode = this.flowParseDeclare(bodyNode, true);\n        }\n\n        body.push(bodyNode);\n      }\n\n      this.scope.exit();\n\n      this.expect(tt.braceR);\n\n      this.finishNode(bodyNode, \"BlockStatement\");\n\n      let kind = null;\n      let hasModuleExport = false;\n      body.forEach(bodyElement => {\n        if (isEsModuleType(bodyElement)) {\n          if (kind === \"CommonJS\") {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.AmbiguousDeclareModuleKind,\n            );\n          }\n          kind = \"ES\";\n        } else if (bodyElement.type === \"DeclareModuleExports\") {\n          if (hasModuleExport) {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.DuplicateDeclareModuleExports,\n            );\n          }\n          if (kind === \"ES\") {\n            this.raise(\n              bodyElement.start,\n              FlowErrors.AmbiguousDeclareModuleKind,\n            );\n          }\n          kind = \"CommonJS\";\n          hasModuleExport = true;\n        }\n      });\n\n      node.kind = kind || \"CommonJS\";\n      return this.finishNode(node, \"DeclareModule\");\n    }\n\n    flowParseDeclareExportDeclaration(\n      node: N.FlowDeclareExportDeclaration,\n      insideModule: ?boolean,\n    ): N.FlowDeclareExportDeclaration {\n      this.expect(tt._export);\n\n      if (this.eat(tt._default)) {\n        if (this.match(tt._function) || this.match(tt._class)) {\n          // declare export default class ...\n          // declare export default function ...\n          node.declaration = this.flowParseDeclare(this.startNode());\n        } else {\n          // declare export default [type];\n          node.declaration = this.flowParseType();\n          this.semicolon();\n        }\n        node.default = true;\n\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else {\n        if (\n          this.match(tt._const) ||\n          this.isLet() ||\n          ((this.isContextual(\"type\") || this.isContextual(\"interface\")) &&\n            !insideModule)\n        ) {\n          const label = this.state.value;\n          const suggestion = exportSuggestions[label];\n\n          throw this.raise(\n            this.state.start,\n            FlowErrors.UnsupportedDeclareExportKind,\n            label,\n            suggestion,\n          );\n        }\n\n        if (\n          this.match(tt._var) || // declare export var ...\n          this.match(tt._function) || // declare export function ...\n          this.match(tt._class) || // declare export class ...\n          this.isContextual(\"opaque\") // declare export opaque ..\n        ) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n          node.default = false;\n\n          return this.finishNode(node, \"DeclareExportDeclaration\");\n        } else if (\n          this.match(tt.star) || // declare export * from ''\n          this.match(tt.braceL) || // declare export {} ...\n          this.isContextual(\"interface\") || // declare export interface ...\n          this.isContextual(\"type\") || // declare export type ...\n          this.isContextual(\"opaque\") // declare export opaque type ...\n        ) {\n          node = this.parseExport(node);\n          if (node.type === \"ExportNamedDeclaration\") {\n            // flow does not support the ExportNamedDeclaration\n            // $FlowIgnore\n            node.type = \"ExportDeclaration\";\n            // $FlowFixMe\n            node.default = false;\n            delete node.exportKind;\n          }\n\n          // $FlowIgnore\n          node.type = \"Declare\" + node.type;\n\n          return node;\n        }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParseDeclareModuleExports(\n      node: N.FlowDeclareModuleExports,\n    ): N.FlowDeclareModuleExports {\n      this.next();\n      this.expectContextual(\"exports\");\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n      this.semicolon();\n\n      return this.finishNode(node, \"DeclareModuleExports\");\n    }\n\n    flowParseDeclareTypeAlias(\n      node: N.FlowDeclareTypeAlias,\n    ): N.FlowDeclareTypeAlias {\n      this.next();\n      this.flowParseTypeAlias(node);\n      // Don't do finishNode as we don't want to process comments twice\n      node.type = \"DeclareTypeAlias\";\n      return node;\n    }\n\n    flowParseDeclareOpaqueType(\n      node: N.FlowDeclareOpaqueType,\n    ): N.FlowDeclareOpaqueType {\n      this.next();\n      this.flowParseOpaqueType(node, true);\n      // Don't do finishNode as we don't want to process comments twice\n      node.type = \"DeclareOpaqueType\";\n      return node;\n    }\n\n    flowParseDeclareInterface(\n      node: N.FlowDeclareInterface,\n    ): N.FlowDeclareInterface {\n      this.next();\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"DeclareInterface\");\n    }\n\n    // Interfaces\n\n    flowParseInterfaceish(\n      node: N.FlowDeclare,\n      isClass?: boolean = false,\n    ): void {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ !isClass,\n        /* declaration */ true,\n      );\n\n      this.scope.declareName(\n        node.id.name,\n        isClass ? BIND_FUNCTION : BIND_LEXICAL,\n        node.id.start,\n      );\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.extends = [];\n      node.implements = [];\n      node.mixins = [];\n\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (!isClass && this.eat(tt.comma));\n      }\n\n      if (this.isContextual(\"mixins\")) {\n        this.next();\n        do {\n          node.mixins.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      if (this.isContextual(\"implements\")) {\n        this.next();\n        do {\n          node.implements.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: isClass,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: isClass,\n        allowInexact: false,\n      });\n    }\n\n    flowParseInterfaceExtends(): N.FlowInterfaceExtends {\n      const node = this.startNode();\n\n      node.id = this.flowParseQualifiedTypeIdentifier();\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      } else {\n        node.typeParameters = null;\n      }\n\n      return this.finishNode(node, \"InterfaceExtends\");\n    }\n\n    flowParseInterface(node: N.FlowInterface): N.FlowInterface {\n      this.flowParseInterfaceish(node);\n      return this.finishNode(node, \"InterfaceDeclaration\");\n    }\n\n    checkNotUnderscore(word: string) {\n      if (word === \"_\") {\n        this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n      }\n    }\n\n    checkReservedType(word: string, startLoc: number, declaration?: boolean) {\n      if (!reservedTypes.has(word)) return;\n\n      this.raise(\n        startLoc,\n        declaration\n          ? FlowErrors.AssignReservedType\n          : FlowErrors.UnexpectedReservedType,\n        word,\n      );\n    }\n\n    flowParseRestrictedIdentifier(\n      liberal?: boolean,\n      declaration?: boolean,\n    ): N.Identifier {\n      this.checkReservedType(this.state.value, this.state.start, declaration);\n      return this.parseIdentifier(liberal);\n    }\n\n    // Type aliases\n\n    flowParseTypeAlias(node: N.FlowTypeAlias): N.FlowTypeAlias {\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ false,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      node.right = this.flowParseTypeInitialiser(tt.eq);\n      this.semicolon();\n\n      return this.finishNode(node, \"TypeAlias\");\n    }\n\n    flowParseOpaqueType(\n      node: N.FlowOpaqueType,\n      declare: boolean,\n    ): N.FlowOpaqueType {\n      this.expectContextual(\"type\");\n      node.id = this.flowParseRestrictedIdentifier(\n        /* liberal */ true,\n        /* declaration */ true,\n      );\n      this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      } else {\n        node.typeParameters = null;\n      }\n\n      // Parse the supertype\n      node.supertype = null;\n      if (this.match(tt.colon)) {\n        node.supertype = this.flowParseTypeInitialiser(tt.colon);\n      }\n\n      node.impltype = null;\n      if (!declare) {\n        node.impltype = this.flowParseTypeInitialiser(tt.eq);\n      }\n      this.semicolon();\n\n      return this.finishNode(node, \"OpaqueType\");\n    }\n\n    // Type annotations\n\n    flowParseTypeParameter(requireDefault?: boolean = false): N.TypeParameter {\n      const nodeStart = this.state.start;\n\n      const node = this.startNode();\n\n      const variance = this.flowParseVariance();\n\n      const ident = this.flowParseTypeAnnotatableIdentifier();\n      node.name = ident.name;\n      node.variance = variance;\n      node.bound = ident.typeAnnotation;\n\n      if (this.match(tt.eq)) {\n        this.eat(tt.eq);\n        node.default = this.flowParseType();\n      } else {\n        if (requireDefault) {\n          this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n        }\n      }\n\n      return this.finishNode(node, \"TypeParameter\");\n    }\n\n    flowParseTypeParameterDeclaration(): N.TypeParameterDeclaration {\n      const oldInType = this.state.inType;\n      const node = this.startNode();\n      node.params = [];\n\n      this.state.inType = true;\n\n      // istanbul ignore else: this condition is already checked at all call sites\n      if (this.isRelational(\"<\") || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      let defaultRequired = false;\n\n      do {\n        const typeParameter = this.flowParseTypeParameter(defaultRequired);\n\n        node.params.push(typeParameter);\n\n        if (typeParameter.default) {\n          defaultRequired = true;\n        }\n\n        if (!this.isRelational(\">\")) {\n          this.expect(tt.comma);\n        }\n      } while (!this.isRelational(\">\"));\n      this.expectRelational(\">\");\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterDeclaration\");\n    }\n\n    flowParseTypeParameterInstantiation(): N.TypeParameterInstantiation {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expectRelational(\"<\");\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = false;\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseType());\n        if (!this.isRelational(\">\")) {\n          this.expect(tt.comma);\n        }\n      }\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      this.expectRelational(\">\");\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseTypeParameterInstantiationCallOrNew(): N.TypeParameterInstantiation {\n      const node = this.startNode();\n      const oldInType = this.state.inType;\n      node.params = [];\n\n      this.state.inType = true;\n\n      this.expectRelational(\"<\");\n      while (!this.isRelational(\">\")) {\n        node.params.push(this.flowParseTypeOrImplicitInstantiation());\n        if (!this.isRelational(\">\")) {\n          this.expect(tt.comma);\n        }\n      }\n      this.expectRelational(\">\");\n\n      this.state.inType = oldInType;\n\n      return this.finishNode(node, \"TypeParameterInstantiation\");\n    }\n\n    flowParseInterfaceType(): N.FlowInterfaceType {\n      const node = this.startNode();\n      this.expectContextual(\"interface\");\n\n      node.extends = [];\n      if (this.eat(tt._extends)) {\n        do {\n          node.extends.push(this.flowParseInterfaceExtends());\n        } while (this.eat(tt.comma));\n      }\n\n      node.body = this.flowParseObjectType({\n        allowStatic: false,\n        allowExact: false,\n        allowSpread: false,\n        allowProto: false,\n        allowInexact: false,\n      });\n\n      return this.finishNode(node, \"InterfaceTypeAnnotation\");\n    }\n\n    flowParseObjectPropertyKey(): N.Expression {\n      return this.match(tt.num) || this.match(tt.string)\n        ? this.parseExprAtom()\n        : this.parseIdentifier(true);\n    }\n\n    flowParseObjectTypeIndexer(\n      node: N.FlowObjectTypeIndexer,\n      isStatic: boolean,\n      variance: ?N.FlowVariance,\n    ): N.FlowObjectTypeIndexer {\n      node.static = isStatic;\n\n      // Note: bracketL has already been consumed\n      if (this.lookahead().type === tt.colon) {\n        node.id = this.flowParseObjectPropertyKey();\n        node.key = this.flowParseTypeInitialiser();\n      } else {\n        node.id = null;\n        node.key = this.flowParseType();\n      }\n      this.expect(tt.bracketR);\n      node.value = this.flowParseTypeInitialiser();\n      node.variance = variance;\n\n      return this.finishNode(node, \"ObjectTypeIndexer\");\n    }\n\n    flowParseObjectTypeInternalSlot(\n      node: N.FlowObjectTypeInternalSlot,\n      isStatic: boolean,\n    ): N.FlowObjectTypeInternalSlot {\n      node.static = isStatic;\n      // Note: both bracketL have already been consumed\n      node.id = this.flowParseObjectPropertyKey();\n      this.expect(tt.bracketR);\n      this.expect(tt.bracketR);\n      if (this.isRelational(\"<\") || this.match(tt.parenL)) {\n        node.method = true;\n        node.optional = false;\n        node.value = this.flowParseObjectTypeMethodish(\n          this.startNodeAt(node.start, node.loc.start),\n        );\n      } else {\n        node.method = false;\n        if (this.eat(tt.question)) {\n          node.optional = true;\n        }\n        node.value = this.flowParseTypeInitialiser();\n      }\n      return this.finishNode(node, \"ObjectTypeInternalSlot\");\n    }\n\n    flowParseObjectTypeMethodish(\n      node: N.FlowFunctionTypeAnnotation,\n    ): N.FlowFunctionTypeAnnotation {\n      node.params = [];\n      node.rest = null;\n      node.typeParameters = null;\n      node.this = null;\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      this.expect(tt.parenL);\n      if (this.match(tt._this)) {\n        node.this = this.flowParseFunctionTypeParam(/* first */ true);\n        // match Flow parser behavior\n        node.this.name = null;\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        node.params.push(this.flowParseFunctionTypeParam(false));\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n\n      if (this.eat(tt.ellipsis)) {\n        node.rest = this.flowParseFunctionTypeParam(false);\n      }\n      this.expect(tt.parenR);\n      node.returnType = this.flowParseTypeInitialiser();\n\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    flowParseObjectTypeCallProperty(\n      node: N.FlowObjectTypeCallProperty,\n      isStatic: boolean,\n    ): N.FlowObjectTypeCallProperty {\n      const valueNode = this.startNode();\n      node.static = isStatic;\n      node.value = this.flowParseObjectTypeMethodish(valueNode);\n      return this.finishNode(node, \"ObjectTypeCallProperty\");\n    }\n\n    flowParseObjectType({\n      allowStatic,\n      allowExact,\n      allowSpread,\n      allowProto,\n      allowInexact,\n    }: {\n      allowStatic: boolean,\n      allowExact: boolean,\n      allowSpread: boolean,\n      allowProto: boolean,\n      allowInexact: boolean,\n    }): N.FlowObjectTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n\n      const nodeStart = this.startNode();\n\n      nodeStart.callProperties = [];\n      nodeStart.properties = [];\n      nodeStart.indexers = [];\n      nodeStart.internalSlots = [];\n\n      let endDelim;\n      let exact;\n      let inexact = false;\n      if (allowExact && this.match(tt.braceBarL)) {\n        this.expect(tt.braceBarL);\n        endDelim = tt.braceBarR;\n        exact = true;\n      } else {\n        this.expect(tt.braceL);\n        endDelim = tt.braceR;\n        exact = false;\n      }\n\n      nodeStart.exact = exact;\n\n      while (!this.match(endDelim)) {\n        let isStatic = false;\n        let protoStart: ?number = null;\n        let inexactStart: ?number = null;\n        const node = this.startNode();\n\n        if (allowProto && this.isContextual(\"proto\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            protoStart = this.state.start;\n            allowStatic = false;\n          }\n        }\n\n        if (allowStatic && this.isContextual(\"static\")) {\n          const lookahead = this.lookahead();\n\n          // static is a valid identifier name\n          if (lookahead.type !== tt.colon && lookahead.type !== tt.question) {\n            this.next();\n            isStatic = true;\n          }\n        }\n\n        const variance = this.flowParseVariance();\n\n        if (this.eat(tt.bracketL)) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (this.eat(tt.bracketL)) {\n            if (variance) {\n              this.unexpected(variance.start);\n            }\n            nodeStart.internalSlots.push(\n              this.flowParseObjectTypeInternalSlot(node, isStatic),\n            );\n          } else {\n            nodeStart.indexers.push(\n              this.flowParseObjectTypeIndexer(node, isStatic, variance),\n            );\n          }\n        } else if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n          nodeStart.callProperties.push(\n            this.flowParseObjectTypeCallProperty(node, isStatic),\n          );\n        } else {\n          let kind = \"init\";\n\n          if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n            const lookahead = this.lookahead();\n            if (\n              lookahead.type === tt.name ||\n              lookahead.type === tt.string ||\n              lookahead.type === tt.num\n            ) {\n              kind = this.state.value;\n              this.next();\n            }\n          }\n\n          const propOrInexact = this.flowParseObjectTypeProperty(\n            node,\n            isStatic,\n            protoStart,\n            variance,\n            kind,\n            allowSpread,\n            allowInexact ?? !exact,\n          );\n\n          if (propOrInexact === null) {\n            inexact = true;\n            inexactStart = this.state.lastTokStart;\n          } else {\n            nodeStart.properties.push(propOrInexact);\n          }\n        }\n\n        this.flowObjectTypeSemicolon();\n\n        if (\n          inexactStart &&\n          !this.match(tt.braceR) &&\n          !this.match(tt.braceBarR)\n        ) {\n          this.raise(\n            inexactStart,\n            FlowErrors.UnexpectedExplicitInexactInObject,\n          );\n        }\n      }\n\n      this.expect(endDelim);\n\n      /* The inexact flag should only be added on ObjectTypeAnnotations that\n       * are not the body of an interface, declare interface, or declare class.\n       * Since spreads are only allowed in object types, checking that is\n       * sufficient here.\n       */\n      if (allowSpread) {\n        nodeStart.inexact = inexact;\n      }\n\n      const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n\n      this.state.inType = oldInType;\n\n      return out;\n    }\n\n    flowParseObjectTypeProperty(\n      node: N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty,\n      isStatic: boolean,\n      protoStart: ?number,\n      variance: ?N.FlowVariance,\n      kind: string,\n      allowSpread: boolean,\n      allowInexact: boolean,\n    ): (N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty) | null {\n      if (this.eat(tt.ellipsis)) {\n        const isInexactToken =\n          this.match(tt.comma) ||\n          this.match(tt.semi) ||\n          this.match(tt.braceR) ||\n          this.match(tt.braceBarR);\n\n        if (isInexactToken) {\n          if (!allowSpread) {\n            this.raise(\n              this.state.lastTokStart,\n              FlowErrors.InexactInsideNonObject,\n            );\n          } else if (!allowInexact) {\n            this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n          }\n          if (variance) {\n            this.raise(variance.start, FlowErrors.InexactVariance);\n          }\n\n          return null;\n        }\n\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n        }\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n        if (variance) {\n          this.raise(variance.start, FlowErrors.SpreadVariance);\n        }\n\n        node.argument = this.flowParseType();\n        return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n      } else {\n        node.key = this.flowParseObjectPropertyKey();\n        node.static = isStatic;\n        node.proto = protoStart != null;\n        node.kind = kind;\n\n        let optional = false;\n        if (this.isRelational(\"<\") || this.match(tt.parenL)) {\n          // This is a method property\n          node.method = true;\n\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          node.value = this.flowParseObjectTypeMethodish(\n            this.startNodeAt(node.start, node.loc.start),\n          );\n          if (kind === \"get\" || kind === \"set\") {\n            this.flowCheckGetterSetterParams(node);\n          }\n          /** Declared classes/interfaces do not allow spread */\n          if (\n            !allowSpread &&\n            node.key.name === \"constructor\" &&\n            node.value.this\n          ) {\n            this.raise(\n              node.value.this.start,\n              FlowErrors.ThisParamBannedInConstructor,\n            );\n          }\n        } else {\n          if (kind !== \"init\") this.unexpected();\n\n          node.method = false;\n\n          if (this.eat(tt.question)) {\n            optional = true;\n          }\n          node.value = this.flowParseTypeInitialiser();\n          node.variance = variance;\n        }\n\n        node.optional = optional;\n\n        return this.finishNode(node, \"ObjectTypeProperty\");\n      }\n    }\n\n    // This is similar to checkGetterSetterParams, but as\n    // @babel/parser uses non estree properties we cannot reuse it here\n    flowCheckGetterSetterParams(\n      property: N.FlowObjectTypeProperty | N.FlowObjectTypeSpreadProperty,\n    ): void {\n      const paramCount = property.kind === \"get\" ? 0 : 1;\n      const start = property.start;\n      const length =\n        property.value.params.length + (property.value.rest ? 1 : 0);\n\n      if (property.value.this) {\n        this.raise(\n          property.value.this.start,\n          property.kind === \"get\"\n            ? FlowErrors.GetterMayNotHaveThisParam\n            : FlowErrors.SetterMayNotHaveThisParam,\n        );\n      }\n\n      if (length !== paramCount) {\n        if (property.kind === \"get\") {\n          this.raise(start, Errors.BadGetterArity);\n        } else {\n          this.raise(start, Errors.BadSetterArity);\n        }\n      }\n\n      if (property.kind === \"set\" && property.value.rest) {\n        this.raise(start, Errors.BadSetterRestParameter);\n      }\n    }\n\n    flowObjectTypeSemicolon(): void {\n      if (\n        !this.eat(tt.semi) &&\n        !this.eat(tt.comma) &&\n        !this.match(tt.braceR) &&\n        !this.match(tt.braceBarR)\n      ) {\n        this.unexpected();\n      }\n    }\n\n    flowParseQualifiedTypeIdentifier(\n      startPos?: number,\n      startLoc?: Position,\n      id?: N.Identifier,\n    ): N.FlowQualifiedTypeIdentifier {\n      startPos = startPos || this.state.start;\n      startLoc = startLoc || this.state.startLoc;\n      let node = id || this.flowParseRestrictedIdentifier(true);\n\n      while (this.eat(tt.dot)) {\n        const node2 = this.startNodeAt(startPos, startLoc);\n        node2.qualification = node;\n        node2.id = this.flowParseRestrictedIdentifier(true);\n        node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n      }\n\n      return node;\n    }\n\n    flowParseGenericType(\n      startPos: number,\n      startLoc: Position,\n      id: N.Identifier,\n    ): N.FlowGenericTypeAnnotation {\n      const node = this.startNodeAt(startPos, startLoc);\n\n      node.typeParameters = null;\n      node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterInstantiation();\n      }\n\n      return this.finishNode(node, \"GenericTypeAnnotation\");\n    }\n\n    flowParseTypeofType(): N.FlowTypeofTypeAnnotation {\n      const node = this.startNode();\n      this.expect(tt._typeof);\n      node.argument = this.flowParsePrimaryType();\n      return this.finishNode(node, \"TypeofTypeAnnotation\");\n    }\n\n    flowParseTupleType(): N.FlowTupleTypeAnnotation {\n      const node = this.startNode();\n      node.types = [];\n      this.expect(tt.bracketL);\n      // We allow trailing commas\n      while (this.state.pos < this.length && !this.match(tt.bracketR)) {\n        node.types.push(this.flowParseType());\n        if (this.match(tt.bracketR)) break;\n        this.expect(tt.comma);\n      }\n      this.expect(tt.bracketR);\n      return this.finishNode(node, \"TupleTypeAnnotation\");\n    }\n\n    flowParseFunctionTypeParam(first: boolean): N.FlowFunctionTypeParam {\n      let name = null;\n      let optional = false;\n      let typeAnnotation = null;\n      const node = this.startNode();\n      const lh = this.lookahead();\n      const isThis = this.state.type === tt._this;\n\n      if (lh.type === tt.colon || lh.type === tt.question) {\n        if (isThis && !first) {\n          this.raise(node.start, FlowErrors.ThisParamMustBeFirst);\n        }\n        name = this.parseIdentifier(isThis);\n        if (this.eat(tt.question)) {\n          optional = true;\n          if (isThis) {\n            this.raise(node.start, FlowErrors.ThisParamMayNotBeOptional);\n          }\n        }\n        typeAnnotation = this.flowParseTypeInitialiser();\n      } else {\n        typeAnnotation = this.flowParseType();\n      }\n      node.name = name;\n      node.optional = optional;\n      node.typeAnnotation = typeAnnotation;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    reinterpretTypeAsFunctionTypeParam(\n      type: N.FlowType,\n    ): N.FlowFunctionTypeParam {\n      const node = this.startNodeAt(type.start, type.loc.start);\n      node.name = null;\n      node.optional = false;\n      node.typeAnnotation = type;\n      return this.finishNode(node, \"FunctionTypeParam\");\n    }\n\n    flowParseFunctionTypeParams(params: N.FlowFunctionTypeParam[] = []): {\n      params: N.FlowFunctionTypeParam[],\n      rest: ?N.FlowFunctionTypeParam,\n      _this: ?N.FlowFunctionTypeParam,\n    } {\n      let rest: ?N.FlowFunctionTypeParam = null;\n      let _this: ?N.FlowFunctionTypeParam = null;\n      if (this.match(tt._this)) {\n        _this = this.flowParseFunctionTypeParam(/* first */ true);\n        // match Flow parser behavior\n        _this.name = null;\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      while (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n        params.push(this.flowParseFunctionTypeParam(false));\n        if (!this.match(tt.parenR)) {\n          this.expect(tt.comma);\n        }\n      }\n      if (this.eat(tt.ellipsis)) {\n        rest = this.flowParseFunctionTypeParam(false);\n      }\n      return { params, rest, _this };\n    }\n\n    flowIdentToTypeAnnotation(\n      startPos: number,\n      startLoc: Position,\n      node: N.FlowTypeAnnotation,\n      id: N.Identifier,\n    ): N.FlowTypeAnnotation {\n      switch (id.name) {\n        case \"any\":\n          return this.finishNode(node, \"AnyTypeAnnotation\");\n\n        case \"bool\":\n        case \"boolean\":\n          return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n        case \"mixed\":\n          return this.finishNode(node, \"MixedTypeAnnotation\");\n\n        case \"empty\":\n          return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n        case \"number\":\n          return this.finishNode(node, \"NumberTypeAnnotation\");\n\n        case \"string\":\n          return this.finishNode(node, \"StringTypeAnnotation\");\n\n        case \"symbol\":\n          return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n        default:\n          this.checkNotUnderscore(id.name);\n          return this.flowParseGenericType(startPos, startLoc, id);\n      }\n    }\n\n    // The parsing of types roughly parallels the parsing of expressions, and\n    // primary types are kind of like primary expressions...they're the\n    // primitives with which other types are constructed.\n    flowParsePrimaryType(): N.FlowTypeAnnotation {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.startNode();\n      let tmp;\n      let type;\n      let isGroupedType = false;\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n      switch (this.state.type) {\n        case tt.name:\n          if (this.isContextual(\"interface\")) {\n            return this.flowParseInterfaceType();\n          }\n\n          return this.flowIdentToTypeAnnotation(\n            startPos,\n            startLoc,\n            node,\n            this.parseIdentifier(),\n          );\n\n        case tt.braceL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: false,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: true,\n          });\n\n        case tt.braceBarL:\n          return this.flowParseObjectType({\n            allowStatic: false,\n            allowExact: true,\n            allowSpread: true,\n            allowProto: false,\n            allowInexact: false,\n          });\n\n        case tt.bracketL:\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseTupleType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n          return type;\n\n        case tt.relational:\n          if (this.state.value === \"<\") {\n            node.typeParameters = this.flowParseTypeParameterDeclaration();\n            this.expect(tt.parenL);\n            tmp = this.flowParseFunctionTypeParams();\n            node.params = tmp.params;\n            node.rest = tmp.rest;\n            node.this = tmp._this;\n            this.expect(tt.parenR);\n\n            this.expect(tt.arrow);\n\n            node.returnType = this.flowParseType();\n\n            return this.finishNode(node, \"FunctionTypeAnnotation\");\n          }\n          break;\n\n        case tt.parenL:\n          this.next();\n\n          // Check to see if this is actually a grouped type\n          if (!this.match(tt.parenR) && !this.match(tt.ellipsis)) {\n            if (this.match(tt.name) || this.match(tt._this)) {\n              const token = this.lookahead().type;\n              isGroupedType = token !== tt.question && token !== tt.colon;\n            } else {\n              isGroupedType = true;\n            }\n          }\n\n          if (isGroupedType) {\n            this.state.noAnonFunctionType = false;\n            type = this.flowParseType();\n            this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n            // A `,` or a `) =>` means this is an anonymous function type\n            if (\n              this.state.noAnonFunctionType ||\n              !(\n                this.match(tt.comma) ||\n                (this.match(tt.parenR) && this.lookahead().type === tt.arrow)\n              )\n            ) {\n              this.expect(tt.parenR);\n              return type;\n            } else {\n              // Eat a comma if there is one\n              this.eat(tt.comma);\n            }\n          }\n\n          if (type) {\n            tmp = this.flowParseFunctionTypeParams([\n              this.reinterpretTypeAsFunctionTypeParam(type),\n            ]);\n          } else {\n            tmp = this.flowParseFunctionTypeParams();\n          }\n\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n\n          this.expect(tt.parenR);\n\n          this.expect(tt.arrow);\n\n          node.returnType = this.flowParseType();\n\n          node.typeParameters = null;\n\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n        case tt.string:\n          return this.parseLiteral<N.StringLiteralTypeAnnotation>(\n            this.state.value,\n            \"StringLiteralTypeAnnotation\",\n          );\n\n        case tt._true:\n        case tt._false:\n          node.value = this.match(tt._true);\n          this.next();\n          return this.finishNode<N.BooleanLiteralTypeAnnotation>(\n            node,\n            \"BooleanLiteralTypeAnnotation\",\n          );\n\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            this.next();\n            if (this.match(tt.num)) {\n              return this.parseLiteralAtNode<N.NumberLiteralTypeAnnotation>(\n                -this.state.value,\n                \"NumberLiteralTypeAnnotation\",\n                node,\n              );\n            }\n\n            if (this.match(tt.bigint)) {\n              return this.parseLiteralAtNode<N.BigIntLiteralTypeAnnotation>(\n                -this.state.value,\n                \"BigIntLiteralTypeAnnotation\",\n                node,\n              );\n            }\n\n            throw this.raise(\n              this.state.start,\n              FlowErrors.UnexpectedSubtractionOperand,\n            );\n          }\n\n          throw this.unexpected();\n        case tt.num:\n          return this.parseLiteral(\n            this.state.value,\n            \"NumberLiteralTypeAnnotation\",\n          );\n\n        case tt.bigint:\n          return this.parseLiteral(\n            this.state.value,\n            \"BigIntLiteralTypeAnnotation\",\n          );\n\n        case tt._void:\n          this.next();\n          return this.finishNode(node, \"VoidTypeAnnotation\");\n\n        case tt._null:\n          this.next();\n          return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n        case tt._this:\n          this.next();\n          return this.finishNode(node, \"ThisTypeAnnotation\");\n\n        case tt.star:\n          this.next();\n          return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n        default:\n          if (this.state.type.keyword === \"typeof\") {\n            return this.flowParseTypeofType();\n          } else if (this.state.type.keyword) {\n            const label = this.state.type.label;\n            this.next();\n            return super.createIdentifier(node, label);\n          }\n      }\n\n      throw this.unexpected();\n    }\n\n    flowParsePostfixType(): N.FlowTypeAnnotation {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let type = this.flowParsePrimaryType();\n      let seenOptionalIndexedAccess = false;\n      while (\n        (this.match(tt.bracketL) || this.match(tt.questionDot)) &&\n        !this.canInsertSemicolon()\n      ) {\n        const node = this.startNodeAt(startPos, startLoc);\n        const optional = this.eat(tt.questionDot);\n        seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n        this.expect(tt.bracketL);\n        if (!optional && this.match(tt.bracketR)) {\n          node.elementType = type;\n          this.next(); // eat `]`\n          type = this.finishNode(node, \"ArrayTypeAnnotation\");\n        } else {\n          node.objectType = type;\n          node.indexType = this.flowParseType();\n          this.expect(tt.bracketR);\n          if (seenOptionalIndexedAccess) {\n            node.optional = optional;\n            type = this.finishNode<N.FlowOptionalIndexedAccessType>(\n              node,\n              \"OptionalIndexedAccessType\",\n            );\n          } else {\n            type = this.finishNode<N.FlowIndexedAccessType>(\n              node,\n              \"IndexedAccessType\",\n            );\n          }\n        }\n      }\n      return type;\n    }\n\n    flowParsePrefixType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      if (this.eat(tt.question)) {\n        node.typeAnnotation = this.flowParsePrefixType();\n        return this.finishNode(node, \"NullableTypeAnnotation\");\n      } else {\n        return this.flowParsePostfixType();\n      }\n    }\n\n    flowParseAnonFunctionWithoutParens(): N.FlowTypeAnnotation {\n      const param = this.flowParsePrefixType();\n      if (!this.state.noAnonFunctionType && this.eat(tt.arrow)) {\n        // TODO: This should be a type error. Passing in a SourceLocation, and it expects a Position.\n        const node = this.startNodeAt(param.start, param.loc.start);\n        node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n        node.rest = null;\n        node.this = null;\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n      return param;\n    }\n\n    flowParseIntersectionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseAND);\n      const type = this.flowParseAnonFunctionWithoutParens();\n      node.types = [type];\n      while (this.eat(tt.bitwiseAND)) {\n        node.types.push(this.flowParseAnonFunctionWithoutParens());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"IntersectionTypeAnnotation\");\n    }\n\n    flowParseUnionType(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      this.eat(tt.bitwiseOR);\n      const type = this.flowParseIntersectionType();\n      node.types = [type];\n      while (this.eat(tt.bitwiseOR)) {\n        node.types.push(this.flowParseIntersectionType());\n      }\n      return node.types.length === 1\n        ? type\n        : this.finishNode(node, \"UnionTypeAnnotation\");\n    }\n\n    flowParseType(): N.FlowTypeAnnotation {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      const type = this.flowParseUnionType();\n      this.state.inType = oldInType;\n      return type;\n    }\n\n    flowParseTypeOrImplicitInstantiation(): N.FlowTypeAnnotation {\n      if (this.state.type === tt.name && this.state.value === \"_\") {\n        const startPos = this.state.start;\n        const startLoc = this.state.startLoc;\n        const node = this.parseIdentifier();\n        return this.flowParseGenericType(startPos, startLoc, node);\n      } else {\n        return this.flowParseType();\n      }\n    }\n\n    flowParseTypeAnnotation(): N.FlowTypeAnnotation {\n      const node = this.startNode();\n      node.typeAnnotation = this.flowParseTypeInitialiser();\n      return this.finishNode(node, \"TypeAnnotation\");\n    }\n\n    flowParseTypeAnnotatableIdentifier(\n      allowPrimitiveOverride?: boolean,\n    ): N.Identifier {\n      const ident = allowPrimitiveOverride\n        ? this.parseIdentifier()\n        : this.flowParseRestrictedIdentifier();\n      if (this.match(tt.colon)) {\n        ident.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(ident);\n      }\n      return ident;\n    }\n\n    typeCastToParameter(node: N.Node): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(\n        node.expression,\n        node.typeAnnotation.end,\n        node.typeAnnotation.loc.end,\n      );\n\n      return node.expression;\n    }\n\n    flowParseVariance(): ?N.FlowVariance {\n      let variance = null;\n      if (this.match(tt.plusMin)) {\n        variance = this.startNode();\n        if (this.state.value === \"+\") {\n          variance.kind = \"plus\";\n        } else {\n          variance.kind = \"minus\";\n        }\n        this.next();\n        this.finishNode(variance, \"Variance\");\n      }\n      return variance;\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseFunctionBody(\n      node: N.Function,\n      allowExpressionBody: ?boolean,\n      isMethod?: boolean = false,\n    ): void {\n      if (allowExpressionBody) {\n        return this.forwardNoArrowParamsConversionAt(node, () =>\n          super.parseFunctionBody(node, true, isMethod),\n        );\n      }\n\n      return super.parseFunctionBody(node, false, isMethod);\n    }\n\n    parseFunctionBodyAndFinish(\n      node: N.BodilessFunctionOrMethodBase,\n      type: string,\n      isMethod?: boolean = false,\n    ): void {\n      if (this.match(tt.colon)) {\n        const typeNode = this.startNode();\n\n        [\n          // $FlowFixMe (destructuring not supported yet)\n          typeNode.typeAnnotation,\n          // $FlowFixMe (destructuring not supported yet)\n          node.predicate,\n        ] = this.flowParseTypeAndPredicateInitialiser();\n\n        node.returnType = typeNode.typeAnnotation\n          ? this.finishNode(typeNode, \"TypeAnnotation\")\n          : null;\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    // interfaces and enums\n    parseStatement(context: ?string, topLevel?: boolean): N.Statement {\n      // strict mode handling of `interface` since it's a reserved word\n      if (\n        this.state.strict &&\n        this.match(tt.name) &&\n        this.state.value === \"interface\"\n      ) {\n        const lookahead = this.lookahead();\n        if (lookahead.type === tt.name || isKeyword(lookahead.value)) {\n          const node = this.startNode();\n          this.next();\n          return this.flowParseInterface(node);\n        }\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      const stmt = super.parseStatement(context, topLevel);\n      // We will parse a flow pragma in any comment before the first statement.\n      if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n        this.flowPragma = null;\n      }\n      return stmt;\n    }\n\n    // declares, interfaces and type aliases\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n    ): N.ExpressionStatement {\n      if (expr.type === \"Identifier\") {\n        if (expr.name === \"declare\") {\n          if (\n            this.match(tt._class) ||\n            this.match(tt.name) ||\n            this.match(tt._function) ||\n            this.match(tt._var) ||\n            this.match(tt._export)\n          ) {\n            return this.flowParseDeclare(node);\n          }\n        } else if (this.match(tt.name)) {\n          if (expr.name === \"interface\") {\n            return this.flowParseInterface(node);\n          } else if (expr.name === \"type\") {\n            return this.flowParseTypeAlias(node);\n          } else if (expr.name === \"opaque\") {\n            return this.flowParseOpaqueType(node, false);\n          }\n        }\n      }\n\n      return super.parseExpressionStatement(node, expr);\n    }\n\n    // export type\n    shouldParseExportDeclaration(): boolean {\n      return (\n        this.isContextual(\"type\") ||\n        this.isContextual(\"interface\") ||\n        this.isContextual(\"opaque\") ||\n        (this.shouldParseEnums() && this.isContextual(\"enum\")) ||\n        super.shouldParseExportDeclaration()\n      );\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      if (\n        this.match(tt.name) &&\n        (this.state.value === \"type\" ||\n          this.state.value === \"interface\" ||\n          this.state.value === \"opaque\" ||\n          (this.shouldParseEnums() && this.state.value === \"enum\"))\n      ) {\n        return false;\n      }\n\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(node);\n      }\n      return super.parseExportDefaultExpression();\n    }\n\n    parseConditional(\n      expr: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      refExpressionErrors?: ?ExpressionErrors,\n    ): N.Expression {\n      if (!this.match(tt.question)) return expr;\n\n      // only use the expensive \"tryParse\" method if there is a question mark\n      // and if we come from inside parens\n      if (this.state.maybeInArrowParameters) {\n        const result = this.tryParse(() =>\n          super.parseConditional(expr, startPos, startLoc),\n        );\n\n        if (!result.node) {\n          if (result.error) {\n            /*:: invariant(refExpressionErrors != null) */\n            super.setOptionalParametersError(refExpressionErrors, result.error);\n          }\n\n          return expr;\n        }\n\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n\n      this.expect(tt.question);\n      const state = this.state.clone();\n      const originalNoArrowAt = this.state.noArrowAt;\n      const node = this.startNodeAt(startPos, startLoc);\n      let { consequent, failed } = this.tryParseConditionalConsequent();\n      let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n      if (failed || invalid.length > 0) {\n        const noArrowAt = [...originalNoArrowAt];\n\n        if (invalid.length > 0) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt;\n\n          for (let i = 0; i < invalid.length; i++) {\n            noArrowAt.push(invalid[i].start);\n          }\n\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n          [valid, invalid] = this.getArrowLikeExpressions(consequent);\n        }\n\n        if (failed && valid.length > 1) {\n          // if there are two or more possible correct ways of parsing, throw an\n          // error.\n          // e.g.   Source: a ? (b): c => (d): e => f\n          //      Result 1: a ? b : (c => ((d): e => f))\n          //      Result 2: a ? ((b): c => d) : (e => f)\n          this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n        }\n\n        if (failed && valid.length === 1) {\n          this.state = state;\n          this.state.noArrowAt = noArrowAt.concat(valid[0].start);\n          ({ consequent, failed } = this.tryParseConditionalConsequent());\n        }\n      }\n\n      this.getArrowLikeExpressions(consequent, true);\n\n      this.state.noArrowAt = originalNoArrowAt;\n      this.expect(tt.colon);\n\n      node.test = expr;\n      node.consequent = consequent;\n      node.alternate = this.forwardNoArrowParamsConversionAt(node, () =>\n        this.parseMaybeAssign(undefined, undefined),\n      );\n\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    tryParseConditionalConsequent(): {\n      consequent: N.Expression,\n      failed: boolean,\n    } {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n\n      const consequent = this.parseMaybeAssignAllowIn();\n      const failed = !this.match(tt.colon);\n\n      this.state.noArrowParamsConversionAt.pop();\n\n      return { consequent, failed };\n    }\n\n    // Given an expression, walks through out its arrow functions whose body is\n    // an expression and through out conditional expressions. It returns every\n    // function which has been parsed with a return type but could have been\n    // parenthesized expressions.\n    // These functions are separated into two arrays: one containing the ones\n    // whose parameters can be converted to assignable lists, one containing the\n    // others.\n    getArrowLikeExpressions(\n      node: N.Expression,\n      disallowInvalid?: boolean,\n    ): [N.ArrowFunctionExpression[], N.ArrowFunctionExpression[]] {\n      const stack = [node];\n      const arrows: N.ArrowFunctionExpression[] = [];\n\n      while (stack.length !== 0) {\n        const node = stack.pop();\n        if (node.type === \"ArrowFunctionExpression\") {\n          if (node.typeParameters || !node.returnType) {\n            // This is an arrow expression without ambiguity, so check its parameters\n            this.finishArrowValidation(node);\n          } else {\n            arrows.push(node);\n          }\n          stack.push(node.body);\n        } else if (node.type === \"ConditionalExpression\") {\n          stack.push(node.consequent);\n          stack.push(node.alternate);\n        }\n      }\n\n      if (disallowInvalid) {\n        arrows.forEach(node => this.finishArrowValidation(node));\n        return [arrows, []];\n      }\n\n      return partition(arrows, node =>\n        node.params.every(param => this.isAssignable(param, true)),\n      );\n    }\n\n    finishArrowValidation(node: N.ArrowFunctionExpression) {\n      this.toAssignableList(\n        // node.params is Expression[] instead of $ReadOnlyArray<Pattern> because it\n        // has not been converted yet.\n        ((node.params: any): N.Expression[]),\n        node.extra?.trailingComma,\n        /* isLHS */ false,\n      );\n      // Enter scope, as checkParams defines bindings\n      this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n      // Use super's method to force the parameters to be checked\n      super.checkParams(node, false, true);\n      this.scope.exit();\n    }\n\n    forwardNoArrowParamsConversionAt<T>(node: N.Node, parse: () => T): T {\n      let result: T;\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        this.state.noArrowParamsConversionAt.push(this.state.start);\n        result = parse();\n        this.state.noArrowParamsConversionAt.pop();\n      } else {\n        result = parse();\n      }\n\n      return result;\n    }\n\n    parseParenItem(\n      node: N.Expression,\n      startPos: number,\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startPos, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode = this.startNodeAt(startPos, startLoc);\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    assertModuleNodeAllowed(node: N.Node) {\n      if (\n        (node.type === \"ImportDeclaration\" &&\n          (node.importKind === \"type\" || node.importKind === \"typeof\")) ||\n        (node.type === \"ExportNamedDeclaration\" &&\n          node.exportKind === \"type\") ||\n        (node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\")\n      ) {\n        // Allow Flowtype imports and exports in all conditions because\n        // Flow itself does not care about 'sourceType'.\n        return;\n      }\n\n      super.assertModuleNodeAllowed(node);\n    }\n\n    parseExport(node: N.Node): N.AnyExport {\n      const decl = super.parseExport(node);\n      if (\n        decl.type === \"ExportNamedDeclaration\" ||\n        decl.type === \"ExportAllDeclaration\"\n      ) {\n        decl.exportKind = decl.exportKind || \"value\";\n      }\n      return decl;\n    }\n\n    parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n      if (this.isContextual(\"type\")) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n\n        if (this.match(tt.braceL)) {\n          // export type { foo, bar };\n          node.specifiers = this.parseExportSpecifiers();\n          this.parseExportFrom(node);\n          return null;\n        } else {\n          // export type Foo = Bar;\n          return this.flowParseTypeAlias(declarationNode);\n        }\n      } else if (this.isContextual(\"opaque\")) {\n        node.exportKind = \"type\";\n\n        const declarationNode = this.startNode();\n        this.next();\n        // export opaque type Foo = Bar;\n        return this.flowParseOpaqueType(declarationNode, false);\n      } else if (this.isContextual(\"interface\")) {\n        node.exportKind = \"type\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseInterface(declarationNode);\n      } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n        node.exportKind = \"value\";\n        const declarationNode = this.startNode();\n        this.next();\n        return this.flowParseEnumDeclaration(declarationNode);\n      } else {\n        return super.parseExportDeclaration(node);\n      }\n    }\n\n    eatExportStar(node: N.Node): boolean {\n      if (super.eatExportStar(...arguments)) return true;\n\n      if (this.isContextual(\"type\") && this.lookahead().type === tt.star) {\n        node.exportKind = \"type\";\n        this.next();\n        this.next();\n        return true;\n      }\n\n      return false;\n    }\n\n    maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n      const pos = this.state.start;\n      const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n      if (hasNamespace && node.exportKind === \"type\") {\n        this.unexpected(pos);\n      }\n      return hasNamespace;\n    }\n\n    parseClassId(node: N.Class, isStatement: boolean, optionalId: ?boolean) {\n      super.parseClassId(node, isStatement, optionalId);\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      const pos = this.state.start;\n      if (this.isContextual(\"declare\")) {\n        if (this.parseClassMemberFromModifier(classBody, member)) {\n          // 'declare' is a class element name\n          return;\n        }\n\n        member.declare = true;\n      }\n\n      super.parseClassMember(classBody, member, state);\n\n      if (member.declare) {\n        if (\n          member.type !== \"ClassProperty\" &&\n          member.type !== \"ClassPrivateProperty\" &&\n          member.type !== \"PropertyDefinition\" // Used by estree plugin\n        ) {\n          this.raise(pos, FlowErrors.DeclareClassElement);\n        } else if (member.value) {\n          this.raise(\n            member.value.start,\n            FlowErrors.DeclareClassFieldInitializer,\n          );\n        }\n      }\n    }\n\n    isIterator(word: string): boolean {\n      return word === \"iterator\" || word === \"asyncIterator\";\n    }\n\n    readIterator(): void {\n      const word = super.readWord1();\n      const fullWord = \"@@\" + word;\n\n      // Allow @@iterator and @@asyncIterator as a identifier only inside type\n      if (!this.isIterator(word) || !this.state.inType) {\n        this.raise(this.state.pos, Errors.InvalidIdentifier, fullWord);\n      }\n\n      this.finishToken(tt.name, fullWord);\n    }\n\n    // ensure that inside flow types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (code === charCodes.leftCurlyBrace && next === charCodes.verticalBar) {\n        return this.finishOp(tt.braceBarL, 2);\n      } else if (\n        this.state.inType &&\n        (code === charCodes.greaterThan || code === charCodes.lessThan)\n      ) {\n        return this.finishOp(tt.relational, 1);\n      } else if (this.state.inType && code === charCodes.questionMark) {\n        if (next === charCodes.dot) {\n          return this.finishOp(tt.questionDot, 2);\n        }\n        // allow double nullable types in Flow: ??string\n        return this.finishOp(tt.question, 1);\n      } else if (isIteratorStart(code, next)) {\n        this.state.pos += 2; // eat \"@@\"\n        return this.readIterator();\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    isAssignable(node: N.Node, isBinding?: boolean): boolean {\n      switch (node.type) {\n        case \"Identifier\":\n        case \"ObjectPattern\":\n        case \"ArrayPattern\":\n        case \"AssignmentPattern\":\n          return true;\n\n        case \"ObjectExpression\": {\n          const last = node.properties.length - 1;\n          return node.properties.every((prop, i) => {\n            return (\n              prop.type !== \"ObjectMethod\" &&\n              (i === last || prop.type === \"SpreadElement\") &&\n              this.isAssignable(prop)\n            );\n          });\n        }\n\n        case \"ObjectProperty\":\n          return this.isAssignable(node.value);\n\n        case \"SpreadElement\":\n          return this.isAssignable(node.argument);\n\n        case \"ArrayExpression\":\n          return node.elements.every(element => this.isAssignable(element));\n\n        case \"AssignmentExpression\":\n          return node.operator === \"=\";\n\n        case \"ParenthesizedExpression\":\n        case \"TypeCastExpression\":\n          return this.isAssignable(node.expression);\n\n        case \"MemberExpression\":\n        case \"OptionalMemberExpression\":\n          return !isBinding;\n\n        default:\n          return false;\n      }\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): N.Node {\n      if (node.type === \"TypeCastExpression\") {\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n      } else {\n        return super.toAssignable(node, isLHS);\n      }\n    }\n\n    // turn type casts that we found in function parameter head into type annotated params\n    toAssignableList(\n      exprList: N.Expression[],\n      trailingCommaPos?: ?number,\n      isLHS: boolean,\n    ): $ReadOnlyArray<N.Pattern> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (expr?.type === \"TypeCastExpression\") {\n          exprList[i] = this.typeCastToParameter(expr);\n        }\n      }\n      return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n    }\n\n    // this is a list of nodes, from something like a call expression, we need to filter the\n    // type casts that we've found that are illegal in this context\n    toReferencedList(\n      exprList: $ReadOnlyArray<?N.Expression>,\n      isParenthesizedExpr?: boolean,\n    ): $ReadOnlyArray<?N.Expression> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (\n          expr &&\n          expr.type === \"TypeCastExpression\" &&\n          !expr.extra?.parenthesized &&\n          (exprList.length > 1 || !isParenthesizedExpr)\n        ) {\n          this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n        }\n      }\n\n      return exprList;\n    }\n\n    parseArrayLike(\n      close: TokenType,\n      canBePattern: boolean,\n      isTuple: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(\n        close,\n        canBePattern,\n        isTuple,\n        refExpressionErrors,\n      );\n\n      // This could be an array pattern:\n      //   ([a: string, b: string]) => {}\n      // In this case, we don't have to call toReferencedList. We will\n      // call it, if needed, when we are sure that it is a parenthesized\n      // expression by calling toReferencedListDeep.\n      if (canBePattern && !this.state.maybeInArrowParameters) {\n        this.toReferencedList(node.elements);\n      }\n\n      return node;\n    }\n\n    checkLVal(\n      expr: N.Expression,\n      ...args:\n        | [string, BindingTypes | void]\n        | [\n            string,\n            BindingTypes | void,\n            ?Set<string>,\n            boolean | void,\n            boolean | void,\n          ]\n    ): void {\n      if (expr.type !== \"TypeCastExpression\") {\n        return super.checkLVal(expr, ...args);\n      }\n    }\n\n    // parse class property type annotations\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      if (this.match(tt.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      if (this.match(tt.colon)) {\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n      }\n      return super.parseClassPrivateProperty(node);\n    }\n\n    // determine whether or not we're currently in the position where a class method would appear\n    isClassMethod(): boolean {\n      return this.isRelational(\"<\") || super.isClassMethod();\n    }\n\n    // determine whether or not we're currently in the position where a class property would appear\n    isClassProperty(): boolean {\n      return this.match(tt.colon) || super.isClassProperty();\n    }\n\n    isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n      return !this.match(tt.colon) && super.isNonstaticConstructor(method);\n    }\n\n    // parse type parameters for class methods\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      if ((method: $FlowFixMe).variance) {\n        this.unexpected((method: $FlowFixMe).variance.start);\n      }\n      delete (method: $FlowFixMe).variance;\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n\n      if (method.params && isConstructor) {\n        const params = method.params;\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n        // estree support\n      } else if (\n        // $FlowFixMe flow does not know about the face that estree can replace ClassMethod with MethodDefinition\n        method.type === \"MethodDefinition\" &&\n        isConstructor &&\n        method.value.params\n      ) {\n        const params = method.value.params;\n        if (params.length > 0 && this.isThisParam(params[0])) {\n          this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n      }\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      if ((method: $FlowFixMe).variance) {\n        this.unexpected((method: $FlowFixMe).variance.start);\n      }\n      delete (method: $FlowFixMe).variance;\n      if (this.isRelational(\"<\")) {\n        method.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    // parse a the super class type parameters and implements\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      if (node.superClass && this.isRelational(\"<\")) {\n        node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n      }\n      if (this.isContextual(\"implements\")) {\n        this.next();\n        const implemented: N.FlowClassImplements[] = (node.implements = []);\n        do {\n          const node = this.startNode();\n          node.id = this.flowParseRestrictedIdentifier(/*liberal*/ true);\n          if (this.isRelational(\"<\")) {\n            node.typeParameters = this.flowParseTypeParameterInstantiation();\n          } else {\n            node.typeParameters = null;\n          }\n          implemented.push(this.finishNode(node, \"ClassImplements\"));\n        } while (this.eat(tt.comma));\n      }\n    }\n\n    checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n      super.checkGetterSetterParams(method);\n      const params = this.getObjectOrClassMethodParams(method);\n      if (params.length > 0) {\n        const param = params[0];\n        if (this.isThisParam(param) && method.kind === \"get\") {\n          this.raise(param.start, FlowErrors.GetterMayNotHaveThisParam);\n        } else if (this.isThisParam(param)) {\n          this.raise(param.start, FlowErrors.SetterMayNotHaveThisParam);\n        }\n      }\n    }\n\n    parsePropertyName(\n      node: N.ObjectOrClassMember | N.ClassMember | N.TsNamedTypeElementBase,\n      isPrivateNameAllowed: boolean,\n    ): N.Identifier {\n      const variance = this.flowParseVariance();\n      const key = super.parsePropertyName(node, isPrivateNameAllowed);\n      // $FlowIgnore (\"variance\" not defined on TsNamedTypeElementBase)\n      node.variance = variance;\n      return key;\n    }\n\n    // parse type parameters for object method shorthand\n    parseObjPropValue(\n      prop: N.ObjectMember,\n      startPos: ?number,\n      startLoc: ?Position,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isPattern: boolean,\n      isAccessor: boolean,\n      refExpressionErrors: ?ExpressionErrors,\n    ): void {\n      if ((prop: $FlowFixMe).variance) {\n        this.unexpected((prop: $FlowFixMe).variance.start);\n      }\n      delete (prop: $FlowFixMe).variance;\n\n      let typeParameters;\n\n      // method shorthand\n      if (this.isRelational(\"<\") && !isAccessor) {\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        if (!this.match(tt.parenL)) this.unexpected();\n      }\n\n      super.parseObjPropValue(\n        prop,\n        startPos,\n        startLoc,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n        refExpressionErrors,\n      );\n\n      // add typeParameters if we found them\n      if (typeParameters) {\n        (prop.value || prop).typeParameters = typeParameters;\n      }\n    }\n\n    parseAssignableListItemTypes(param: N.Pattern): N.Pattern {\n      if (this.eat(tt.question)) {\n        if (param.type !== \"Identifier\") {\n          this.raise(param.start, FlowErrors.OptionalBindingPattern);\n        }\n        if (this.isThisParam(param)) {\n          this.raise(param.start, FlowErrors.ThisParamMayNotBeOptional);\n        }\n\n        ((param: any): N.Identifier).optional = true;\n      }\n      if (this.match(tt.colon)) {\n        param.typeAnnotation = this.flowParseTypeAnnotation();\n      } else if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamAnnotationRequired);\n      }\n\n      if (this.match(tt.eq) && this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamNoDefault);\n      }\n\n      this.resetEndLocation(param);\n      return param;\n    }\n\n    parseMaybeDefault(\n      startPos?: ?number,\n      startLoc?: ?Position,\n      left?: ?N.Pattern,\n    ): N.Pattern {\n      const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n      }\n\n      return node;\n    }\n\n    shouldParseDefaultImport(node: N.ImportDeclaration): boolean {\n      if (!hasTypeImportKind(node)) {\n        return super.shouldParseDefaultImport(node);\n      }\n\n      return isMaybeDefaultImport(this.state);\n    }\n\n    parseImportSpecifierLocal(\n      node: N.ImportDeclaration,\n      specifier: N.Node,\n      type: string,\n      contextDescription: string,\n    ): void {\n      specifier.local = hasTypeImportKind(node)\n        ? this.flowParseRestrictedIdentifier(\n            /* liberal */ true,\n            /* declaration */ true,\n          )\n        : this.parseIdentifier();\n\n      this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, type));\n    }\n\n    // parse typeof and type imports\n    maybeParseDefaultImportSpecifier(node: N.ImportDeclaration): boolean {\n      node.importKind = \"value\";\n\n      let kind = null;\n      if (this.match(tt._typeof)) {\n        kind = \"typeof\";\n      } else if (this.isContextual(\"type\")) {\n        kind = \"type\";\n      }\n      if (kind) {\n        const lh = this.lookahead();\n\n        // import type * is not allowed\n        if (kind === \"type\" && lh.type === tt.star) {\n          this.unexpected(lh.start);\n        }\n\n        if (\n          isMaybeDefaultImport(lh) ||\n          lh.type === tt.braceL ||\n          lh.type === tt.star\n        ) {\n          this.next();\n          node.importKind = kind;\n        }\n      }\n\n      return super.maybeParseDefaultImportSpecifier(node);\n    }\n\n    // parse import-type/typeof shorthand\n    parseImportSpecifier(node: N.ImportDeclaration): void {\n      const specifier = this.startNode();\n      const firstIdentIsString = this.match(tt.string);\n      const firstIdent = this.parseModuleExportName();\n\n      let specifierTypeKind = null;\n      if (firstIdent.type === \"Identifier\") {\n        if (firstIdent.name === \"type\") {\n          specifierTypeKind = \"type\";\n        } else if (firstIdent.name === \"typeof\") {\n          specifierTypeKind = \"typeof\";\n        }\n      }\n\n      let isBinding = false;\n      if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n        const as_ident = this.parseIdentifier(true);\n        if (\n          specifierTypeKind !== null &&\n          !this.match(tt.name) &&\n          !this.state.type.keyword\n        ) {\n          // `import {type as ,` or `import {type as }`\n          specifier.imported = as_ident;\n          specifier.importKind = specifierTypeKind;\n          specifier.local = as_ident.__clone();\n        } else {\n          // `import {type as foo`\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = this.parseIdentifier();\n        }\n      } else if (\n        specifierTypeKind !== null &&\n        (this.match(tt.name) || this.state.type.keyword)\n      ) {\n        // `import {type foo`\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n        if (this.eatContextual(\"as\")) {\n          specifier.local = this.parseIdentifier();\n        } else {\n          isBinding = true;\n          specifier.local = specifier.imported.__clone();\n        }\n      } else {\n        if (firstIdentIsString) {\n          /*:: invariant(firstIdent instanceof N.StringLiteral) */\n          throw this.raise(\n            specifier.start,\n            Errors.ImportBindingIsString,\n            firstIdent.value,\n          );\n        }\n        /*:: invariant(firstIdent instanceof N.Node) */\n        isBinding = true;\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = specifier.imported.__clone();\n      }\n\n      const nodeIsTypeImport = hasTypeImportKind(node);\n      const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n      if (nodeIsTypeImport && specifierIsTypeImport) {\n        this.raise(\n          specifier.start,\n          FlowErrors.ImportTypeShorthandOnlyInPureImport,\n        );\n      }\n\n      if (nodeIsTypeImport || specifierIsTypeImport) {\n        this.checkReservedType(\n          specifier.local.name,\n          specifier.local.start,\n          /* declaration */ true,\n        );\n      }\n\n      if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n        this.checkReservedWord(\n          specifier.local.name,\n          specifier.start,\n          true,\n          true,\n        );\n      }\n\n      this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n    }\n\n    parseBindingAtom(): N.Pattern {\n      switch (this.state.type) {\n        case tt._this:\n          // \"this\" may be the name of a parameter, so allow it.\n          return this.parseIdentifier(/* liberal */ true);\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    // parse function type parameters - function foo<T>() {}\n    parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n      // $FlowFixMe\n      const kind = node.kind;\n      if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n      }\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    // parse flow type annotations on variable declarator heads - let foo: string = bar\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (this.match(tt.colon)) {\n        decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        node.returnType = this.flowParseTypeAnnotation();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n      }\n\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    // todo description\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    // We need to support type parameter declarations for arrow functions. This\n    // is tricky. There are three situations we need to handle\n    //\n    // 1. This is either JSX or an arrow function. We'll try JSX first. If that\n    //    fails, we'll try an arrow function. If that fails, we'll throw the JSX\n    //    error.\n    // 2. This is an arrow function. We'll parse the type parameter declaration,\n    //    parse the rest, make sure the rest is an arrow function, and go from\n    //    there\n    // 3. This is neither. Just call the super method\n    parseMaybeAssign(\n      refExpressionErrors?: ?ExpressionErrors,\n      afterLeftParse?: Function,\n    ): N.Expression {\n      let state = null;\n\n      let jsx;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.isRelational(\"<\"))\n      ) {\n        state = this.state.clone();\n\n        jsx = this.tryParse(\n          () => super.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n          state,\n        );\n\n        /*:: invariant(!jsx.aborted) */\n        /*:: invariant(jsx.node != null) */\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` and `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        const curContext = context[context.length - 1];\n        if (curContext === tc.j_oTag) {\n          context.length -= 2;\n        } else if (curContext === tc.j_expr) {\n          context.length -= 1;\n        }\n      }\n\n      if (jsx?.error || this.isRelational(\"<\")) {\n        state = state || this.state.clone();\n\n        let typeParameters;\n\n        const arrow = this.tryParse(abort => {\n          typeParameters = this.flowParseTypeParameterDeclaration();\n\n          const arrowExpression = this.forwardNoArrowParamsConversionAt(\n            typeParameters,\n            () => {\n              const result = super.parseMaybeAssign(\n                refExpressionErrors,\n                afterLeftParse,\n              );\n\n              this.resetStartLocationFromNode(result, typeParameters);\n\n              return result;\n            },\n          );\n\n          // <T>(() => {}: any);\n          if (\n            arrowExpression.type !== \"ArrowFunctionExpression\" &&\n            arrowExpression.extra?.parenthesized\n          ) {\n            abort();\n          }\n\n          // The above can return a TypeCastExpression when the arrow\n          // expression is not wrapped in parens. See also `this.parseParenItem`.\n          const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n          expr.typeParameters = typeParameters;\n          this.resetStartLocationFromNode(expr, typeParameters);\n\n          return arrowExpression;\n        }, state);\n\n        let arrowExpression: ?(\n          | N.ArrowFunctionExpression\n          | N.TypeCastExpression\n        ) = null;\n\n        if (\n          arrow.node &&\n          this.maybeUnwrapTypeCastExpression(arrow.node).type ===\n            \"ArrowFunctionExpression\"\n        ) {\n          if (!arrow.error && !arrow.aborted) {\n            // <T> async () => {}\n            if (arrow.node.async) {\n              /*:: invariant(typeParameters) */\n              this.raise(\n                typeParameters.start,\n                FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction,\n              );\n            }\n\n            return arrow.node;\n          }\n\n          arrowExpression = arrow.node;\n        }\n\n        // If we are here, both JSX and Flow parsing attempts failed.\n        // Give the precedence to the JSX error, except if JSX had an\n        // unrecoverable error while Flow didn't.\n        // If the error is recoverable, we can only re-report it if there is\n        // a node we can return.\n\n        if (jsx?.node) {\n          /*:: invariant(jsx.failState) */\n          this.state = jsx.failState;\n          return jsx.node;\n        }\n\n        if (arrowExpression) {\n          /*:: invariant(arrow.failState) */\n          this.state = arrow.failState;\n          return arrowExpression;\n        }\n\n        if (jsx?.thrown) throw jsx.error;\n        if (arrow.thrown) throw arrow.error;\n\n        /*:: invariant(typeParameters) */\n        throw this.raise(\n          typeParameters.start,\n          FlowErrors.UnexpectedTokenAfterTypeParameter,\n        );\n      }\n\n      return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n    }\n\n    // handle return types for arrow functions\n    parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        const result = this.tryParse(() => {\n          const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n\n          const typeNode = this.startNode();\n\n          [\n            // $FlowFixMe (destructuring not supported yet)\n            typeNode.typeAnnotation,\n            // $FlowFixMe (destructuring not supported yet)\n            node.predicate,\n          ] = this.flowParseTypeAndPredicateInitialiser();\n\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.canInsertSemicolon()) this.unexpected();\n          if (!this.match(tt.arrow)) this.unexpected();\n\n          return typeNode;\n        });\n\n        if (result.thrown) return null;\n        /*:: invariant(result.node) */\n\n        if (result.error) this.state = result.failState;\n\n        // assign after it is clear it is an arrow\n        node.returnType = result.node.typeAnnotation\n          ? this.finishNode(result.node, \"TypeAnnotation\")\n          : null;\n      }\n\n      return super.parseArrow(node);\n    }\n\n    shouldParseArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseArrow();\n    }\n\n    setArrowFunctionParameters(\n      node: N.ArrowFunctionExpression,\n      params: N.Expression[],\n    ): void {\n      if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n        node.params = params;\n      } else {\n        super.setArrowFunctionParameters(node, params);\n      }\n    }\n\n    checkParams(\n      node: N.Function,\n      allowDuplicates: boolean,\n      isArrowFunction: ?boolean,\n    ): void {\n      if (\n        isArrowFunction &&\n        this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1\n      ) {\n        return;\n      }\n\n      // ensure the `this` param is first, if it exists\n      for (let i = 0; i < node.params.length; i++) {\n        if (this.isThisParam(node.params[i]) && i > 0) {\n          this.raise(node.params[i].start, FlowErrors.ThisParamMustBeFirst);\n        }\n      }\n\n      return super.checkParams(...arguments);\n    }\n\n    parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n      return super.parseParenAndDistinguishExpression(\n        canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1,\n      );\n    }\n\n    parseSubscripts(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls?: ?boolean,\n    ): N.Expression {\n      if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.state.noArrowAt.indexOf(startPos) !== -1\n      ) {\n        this.next();\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n        base = this.finishNode(node, \"CallExpression\");\n      } else if (\n        base.type === \"Identifier\" &&\n        base.name === \"async\" &&\n        this.isRelational(\"<\")\n      ) {\n        const state = this.state.clone();\n        const arrow = this.tryParse(\n          abort =>\n            this.parseAsyncArrowWithTypeParameters(startPos, startLoc) ||\n            abort(),\n          state,\n        );\n\n        /*:: invariant(arrow.node != null) */\n        if (!arrow.error && !arrow.aborted) return arrow.node;\n\n        const result = this.tryParse(\n          () => super.parseSubscripts(base, startPos, startLoc, noCalls),\n          state,\n        );\n\n        if (result.node && !result.error) return result.node;\n\n        if (arrow.node) {\n          this.state = arrow.failState;\n          return arrow.node;\n        }\n\n        if (result.node) {\n          this.state = result.failState;\n          return result.node;\n        }\n\n        throw arrow.error || result.error;\n      }\n\n      return super.parseSubscripts(base, startPos, startLoc, noCalls);\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      subscriptState: N.ParseSubscriptState,\n    ): N.Expression {\n      if (this.match(tt.questionDot) && this.isLookaheadToken_lt()) {\n        subscriptState.optionalChainMember = true;\n        if (noCalls) {\n          subscriptState.stop = true;\n          return base;\n        }\n        this.next();\n        const node: N.OptionalCallExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        node.callee = base;\n        node.typeArguments = this.flowParseTypeParameterInstantiation();\n        this.expect(tt.parenL);\n        // $FlowFixMe\n        node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n        node.optional = true;\n        return this.finishCallExpression(node, /* optional */ true);\n      } else if (\n        !noCalls &&\n        this.shouldParseTypes() &&\n        this.isRelational(\"<\")\n      ) {\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n\n        const result = this.tryParse(() => {\n          node.typeArguments =\n            this.flowParseTypeParameterInstantiationCallOrNew();\n          this.expect(tt.parenL);\n          node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n          if (subscriptState.optionalChainMember) node.optional = false;\n          return this.finishCallExpression(\n            node,\n            subscriptState.optionalChainMember,\n          );\n        });\n\n        if (result.node) {\n          if (result.error) this.state = result.failState;\n          return result.node;\n        }\n      }\n\n      return super.parseSubscript(\n        base,\n        startPos,\n        startLoc,\n        noCalls,\n        subscriptState,\n      );\n    }\n\n    parseNewArguments(node: N.NewExpression): void {\n      let targs = null;\n      if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n        targs = this.tryParse(() =>\n          this.flowParseTypeParameterInstantiationCallOrNew(),\n        ).node;\n      }\n      node.typeArguments = targs;\n\n      super.parseNewArguments(node);\n    }\n\n    parseAsyncArrowWithTypeParameters(\n      startPos: number,\n      startLoc: Position,\n    ): ?N.ArrowFunctionExpression {\n      const node = this.startNodeAt(startPos, startLoc);\n      this.parseFunctionParams(node);\n      if (!this.parseArrow(node)) return;\n      return this.parseArrowExpression(\n        node,\n        /* params */ undefined,\n        /* isAsync */ true,\n      );\n    }\n\n    readToken_mult_modulo(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.asterisk &&\n        next === charCodes.slash &&\n        this.state.hasFlowComment\n      ) {\n        this.state.hasFlowComment = false;\n        this.state.pos += 2;\n        this.nextToken();\n        return;\n      }\n\n      super.readToken_mult_modulo(code);\n    }\n\n    readToken_pipe_amp(code: number): void {\n      const next = this.input.charCodeAt(this.state.pos + 1);\n      if (\n        code === charCodes.verticalBar &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        // '|}'\n        this.finishOp(tt.braceBarR, 2);\n        return;\n      }\n\n      super.readToken_pipe_amp(code);\n    }\n\n    parseTopLevel(file: N.File, program: N.Program): N.File {\n      const fileNode = super.parseTopLevel(file, program);\n      if (this.state.hasFlowComment) {\n        this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n      }\n      return fileNode;\n    }\n\n    skipBlockComment(): void {\n      if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n        if (this.state.hasFlowComment) {\n          this.unexpected(null, FlowErrors.NestedFlowComment);\n        }\n        this.hasFlowCommentCompletion();\n        this.state.pos += this.skipFlowComment();\n        this.state.hasFlowComment = true;\n        return;\n      }\n\n      if (this.state.hasFlowComment) {\n        const end = this.input.indexOf(\"*-/\", (this.state.pos += 2));\n        if (end === -1) {\n          throw this.raise(this.state.pos - 2, Errors.UnterminatedComment);\n        }\n        this.state.pos = end + 3;\n        return;\n      }\n\n      super.skipBlockComment();\n    }\n\n    skipFlowComment(): number | boolean {\n      const { pos } = this.state;\n      let shiftToFirstNonWhiteSpace = 2;\n      while (\n        [charCodes.space, charCodes.tab].includes(\n          this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace),\n        )\n      ) {\n        shiftToFirstNonWhiteSpace++;\n      }\n\n      const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n      const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n      if (ch2 === charCodes.colon && ch3 === charCodes.colon) {\n        return shiftToFirstNonWhiteSpace + 2; // check for /*::\n      }\n      if (\n        this.input.slice(\n          shiftToFirstNonWhiteSpace + pos,\n          shiftToFirstNonWhiteSpace + pos + 12,\n        ) === \"flow-include\"\n      ) {\n        return shiftToFirstNonWhiteSpace + 12; // check for /*flow-include\n      }\n      if (ch2 === charCodes.colon && ch3 !== charCodes.colon) {\n        return shiftToFirstNonWhiteSpace; // check for /*:, advance up to :\n      }\n      return false;\n    }\n\n    hasFlowCommentCompletion(): void {\n      const end = this.input.indexOf(\"*/\", this.state.pos);\n      if (end === -1) {\n        throw this.raise(this.state.pos, Errors.UnterminatedComment);\n      }\n    }\n\n    // Flow enum parsing\n\n    flowEnumErrorBooleanMemberNotInitialized(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumBooleanMemberNotInitialized,\n        memberName,\n        enumName,\n      );\n    }\n\n    flowEnumErrorInvalidMemberName(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n      this.raise(\n        pos,\n        FlowErrors.EnumInvalidMemberName,\n        memberName,\n        suggestion,\n        enumName,\n      );\n    }\n\n    flowEnumErrorDuplicateMemberName(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n    }\n\n    flowEnumErrorInconsistentMemberValues(\n      pos: number,\n      { enumName }: { enumName: string },\n    ): void {\n      this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n    }\n\n    flowEnumErrorInvalidExplicitType(\n      pos: number,\n      {\n        enumName,\n        suppliedType,\n      }: { enumName: string, suppliedType: null | string },\n    ) {\n      return this.raise(\n        pos,\n        suppliedType === null\n          ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied\n          : FlowErrors.EnumInvalidExplicitType,\n        enumName,\n        suppliedType,\n      );\n    }\n\n    flowEnumErrorInvalidMemberInitializer(\n      pos: number,\n      { enumName, explicitType, memberName }: EnumContext,\n    ) {\n      let message = null;\n      switch (explicitType) {\n        case \"boolean\":\n        case \"number\":\n        case \"string\":\n          message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n          break;\n        case \"symbol\":\n          message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n          break;\n        default:\n          // null\n          message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n      }\n      return this.raise(pos, message, enumName, memberName, explicitType);\n    }\n\n    flowEnumErrorNumberMemberNotInitialized(\n      pos: number,\n      { enumName, memberName }: { enumName: string, memberName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumNumberMemberNotInitialized,\n        enumName,\n        memberName,\n      );\n    }\n\n    flowEnumErrorStringMemberInconsistentlyInitailized(\n      pos: number,\n      { enumName }: { enumName: string },\n    ): void {\n      this.raise(\n        pos,\n        FlowErrors.EnumStringMemberInconsistentlyInitailized,\n        enumName,\n      );\n    }\n\n    flowEnumMemberInit(): EnumMemberInit {\n      const startPos = this.state.start;\n      const endOfInit = () => this.match(tt.comma) || this.match(tt.braceR);\n      switch (this.state.type) {\n        case tt.num: {\n          const literal = this.parseNumericLiteral(this.state.value);\n          if (endOfInit()) {\n            return { type: \"number\", pos: literal.start, value: literal };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        case tt.string: {\n          const literal = this.parseStringLiteral(this.state.value);\n          if (endOfInit()) {\n            return { type: \"string\", pos: literal.start, value: literal };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        case tt._true:\n        case tt._false: {\n          const literal = this.parseBooleanLiteral(this.match(tt._true));\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              pos: literal.start,\n              value: literal,\n            };\n          }\n          return { type: \"invalid\", pos: startPos };\n        }\n        default:\n          return { type: \"invalid\", pos: startPos };\n      }\n    }\n\n    flowEnumMemberRaw(): { id: N.Node, init: EnumMemberInit } {\n      const pos = this.state.start;\n      const id = this.parseIdentifier(true);\n      const init = this.eat(tt.eq)\n        ? this.flowEnumMemberInit()\n        : { type: \"none\", pos };\n      return { id, init };\n    }\n\n    flowEnumCheckExplicitTypeMismatch(\n      pos: number,\n      context: EnumContext,\n      expectedType: EnumExplicitType,\n    ): void {\n      const { explicitType } = context;\n      if (explicitType === null) {\n        return;\n      }\n      if (explicitType !== expectedType) {\n        this.flowEnumErrorInvalidMemberInitializer(pos, context);\n      }\n    }\n\n    flowEnumMembers({\n      enumName,\n      explicitType,\n    }: {\n      enumName: string,\n      explicitType: EnumExplicitType,\n    }): {|\n      members: {|\n        booleanMembers: Array<N.Node>,\n        numberMembers: Array<N.Node>,\n        stringMembers: Array<N.Node>,\n        defaultedMembers: Array<N.Node>,\n      |},\n      hasUnknownMembers: boolean,\n    |} {\n      const seenNames = new Set();\n      const members = {\n        booleanMembers: [],\n        numberMembers: [],\n        stringMembers: [],\n        defaultedMembers: [],\n      };\n      let hasUnknownMembers = false;\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.ellipsis)) {\n          hasUnknownMembers = true;\n          break;\n        }\n        const memberNode = this.startNode();\n        const { id, init } = this.flowEnumMemberRaw();\n        const memberName = id.name;\n        if (memberName === \"\") {\n          continue;\n        }\n        if (/^[a-z]/.test(memberName)) {\n          this.flowEnumErrorInvalidMemberName(id.start, {\n            enumName,\n            memberName,\n          });\n        }\n        if (seenNames.has(memberName)) {\n          this.flowEnumErrorDuplicateMemberName(id.start, {\n            enumName,\n            memberName,\n          });\n        }\n        seenNames.add(memberName);\n        const context = { enumName, explicitType, memberName };\n        memberNode.id = id;\n        switch (init.type) {\n          case \"boolean\": {\n            this.flowEnumCheckExplicitTypeMismatch(\n              init.pos,\n              context,\n              \"boolean\",\n            );\n            memberNode.init = init.value;\n            members.booleanMembers.push(\n              this.finishNode(memberNode, \"EnumBooleanMember\"),\n            );\n            break;\n          }\n          case \"number\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(\n              this.finishNode(memberNode, \"EnumNumberMember\"),\n            );\n            break;\n          }\n          case \"string\": {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(\n              this.finishNode(memberNode, \"EnumStringMember\"),\n            );\n            break;\n          }\n          case \"invalid\": {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n          }\n          case \"none\": {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(\n                  init.pos,\n                  context,\n                );\n                break;\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                break;\n              default:\n                members.defaultedMembers.push(\n                  this.finishNode(memberNode, \"EnumDefaultedMember\"),\n                );\n            }\n          }\n        }\n\n        if (!this.match(tt.braceR)) {\n          this.expect(tt.comma);\n        }\n      }\n      return { members, hasUnknownMembers };\n    }\n\n    flowEnumStringMembers(\n      initializedMembers: Array<N.Node>,\n      defaultedMembers: Array<N.Node>,\n      { enumName }: { enumName: string },\n    ): Array<N.Node> {\n      if (initializedMembers.length === 0) {\n        return defaultedMembers;\n      } else if (defaultedMembers.length === 0) {\n        return initializedMembers;\n      } else if (defaultedMembers.length > initializedMembers.length) {\n        for (const member of initializedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(\n            member.start,\n            { enumName },\n          );\n        }\n        return defaultedMembers;\n      } else {\n        for (const member of defaultedMembers) {\n          this.flowEnumErrorStringMemberInconsistentlyInitailized(\n            member.start,\n            { enumName },\n          );\n        }\n        return initializedMembers;\n      }\n    }\n\n    flowEnumParseExplicitType({\n      enumName,\n    }: {\n      enumName: string,\n    }): EnumExplicitType {\n      if (this.eatContextual(\"of\")) {\n        if (!this.match(tt.name)) {\n          throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: null,\n          });\n        }\n\n        const { value } = this.state;\n        this.next();\n\n        if (\n          value !== \"boolean\" &&\n          value !== \"number\" &&\n          value !== \"string\" &&\n          value !== \"symbol\"\n        ) {\n          this.flowEnumErrorInvalidExplicitType(this.state.start, {\n            enumName,\n            suppliedType: value,\n          });\n        }\n\n        return value;\n      }\n      return null;\n    }\n\n    flowEnumBody(node: N.Node, { enumName, nameLoc }): N.Node {\n      const explicitType = this.flowEnumParseExplicitType({ enumName });\n      this.expect(tt.braceL);\n      const { members, hasUnknownMembers } = this.flowEnumMembers({\n        enumName,\n        explicitType,\n      });\n      node.hasUnknownMembers = hasUnknownMembers;\n\n      switch (explicitType) {\n        case \"boolean\":\n          node.explicitType = true;\n          node.members = members.booleanMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumBooleanBody\");\n        case \"number\":\n          node.explicitType = true;\n          node.members = members.numberMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumNumberBody\");\n        case \"string\":\n          node.explicitType = true;\n          node.members = this.flowEnumStringMembers(\n            members.stringMembers,\n            members.defaultedMembers,\n            { enumName },\n          );\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumStringBody\");\n        case \"symbol\":\n          node.members = members.defaultedMembers;\n          this.expect(tt.braceR);\n          return this.finishNode(node, \"EnumSymbolBody\");\n        default: {\n          // `explicitType` is `null`\n          const empty = () => {\n            node.members = [];\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n          node.explicitType = false;\n\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(\n              members.stringMembers,\n              members.defaultedMembers,\n              { enumName },\n            );\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.booleanMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name,\n              });\n            }\n            node.members = members.numberMembers;\n            this.expect(tt.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.flowEnumErrorInconsistentMemberValues(nameLoc, { enumName });\n            return empty();\n          }\n        }\n      }\n    }\n\n    flowParseEnumDeclaration(node: N.Node): N.Node {\n      const id = this.parseIdentifier();\n      node.id = id;\n      node.body = this.flowEnumBody(this.startNode(), {\n        enumName: id.name,\n        nameLoc: id.start,\n      });\n      return this.finishNode(node, \"EnumDeclaration\");\n    }\n\n    // check if the next token is a tt.relation(\"<\")\n    isLookaheadToken_lt(): boolean {\n      const next = this.nextTokenStart();\n      if (this.input.charCodeAt(next) === charCodes.lessThan) {\n        const afterNext = this.input.charCodeAt(next + 1);\n        return (\n          afterNext !== charCodes.lessThan && afterNext !== charCodes.equalsTo\n        );\n      }\n      return false;\n    }\n\n    maybeUnwrapTypeCastExpression(node: N.Node) {\n      return node.type === \"TypeCastExpression\" ? node.expression : node;\n    }\n  };\n","// @flow\n\nconst entities: { [name: string]: string } = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\",\n};\nexport default entities;\n","// @flow\n\nimport type { Options } from \"../options\";\nimport * as N from \"../types\";\nimport { Position } from \"../util/location\";\n\nimport { types as ct, type TokContext } from \"./context\";\nimport { types as tt, type TokenType } from \"./types\";\nimport type { ParsingError, ErrorTemplate } from \"../parser/error\";\n\ntype TopicContextState = {\n  // When a topic binding has been currently established,\n  // then this is 1. Otherwise, it is 0. This is forwards compatible\n  // with a future plugin for multiple lexical topics.\n  maxNumOfResolvableTopics: number,\n\n  // When a topic binding has been currently established, and if that binding\n  // has been used as a topic reference `#`, then this is 0. Otherwise, it is\n  // `null`. This is forwards compatible with a future plugin for multiple\n  // lexical topics.\n  maxTopicIndex: null | 0,\n};\n\nexport default class State {\n  strict: boolean;\n  curLine: number;\n\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  startLoc: Position;\n  endLoc: Position;\n\n  init(options: Options): void {\n    this.strict =\n      options.strictMode === false ? false : options.sourceType === \"module\";\n\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  errors: ParsingError[] = [];\n\n  // Used to signify the start of a potential arrow function\n  potentialArrowAt: number = -1;\n\n  // Used to signify the start of an expression which looks like a\n  // typed arrow function, but it isn't\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowAt: number[] = [];\n\n  // Used to signify the start of an expression whose params, if it looks like\n  // an arrow function, shouldn't be converted to assignable nodes.\n  // This is used to defer the validation of typed arrow functions inside\n  // conditional expressions.\n  // e.g. a ? (b) : c => d\n  //          ^\n  noArrowParamsConversionAt: number[] = [];\n\n  // Flags to track\n  maybeInArrowParameters: boolean = false;\n  inPipeline: boolean = false;\n  inType: boolean = false;\n  noAnonFunctionType: boolean = false;\n  inPropertyName: boolean = false;\n  hasFlowComment: boolean = false;\n  isAmbientContext: boolean = false;\n  inAbstractClass: boolean = false;\n\n  // For the smartPipelines plugin:\n  topicContext: TopicContextState = {\n    maxNumOfResolvableTopics: 0,\n    maxTopicIndex: null,\n  };\n\n  // For the F# plugin\n  soloAwait: boolean = false;\n  inFSharpPipelineDirectBody: boolean = false;\n\n  // Labels in scope.\n  labels: Array<{\n    kind: ?(\"loop\" | \"switch\"),\n    name?: ?string,\n    statementStart?: number,\n  }> = [];\n\n  // Leading decorators. Last element of the stack represents the decorators in current context.\n  // Supports nesting of decorators, e.g. @foo(@bar class inner {}) class outer {}\n  // where @foo belongs to the outer class and @bar to the inner\n  decoratorStack: Array<Array<N.Decorator>> = [[]];\n\n  // Comment store.\n  comments: Array<N.Comment> = [];\n\n  // Comment attachment store\n  trailingComments: Array<N.Comment> = [];\n  leadingComments: Array<N.Comment> = [];\n  commentStack: Array<{\n    start: number,\n    leadingComments: ?Array<N.Comment>,\n    trailingComments: ?Array<N.Comment>,\n    type: string,\n  }> = [];\n  // $FlowIgnore this is initialized when the parser starts.\n  commentPreviousNode: N.Node = null;\n\n  // The current position of the tokenizer in the input.\n  pos: number = 0;\n  lineStart: number = 0;\n\n  // Properties of the current token:\n  // Its type\n  type: TokenType = tt.eof;\n\n  // For tokens that include more information than their type, the value\n  value: any = null;\n\n  // Its start and end offset\n  start: number = 0;\n  end: number = 0;\n\n  // Position information for the previous token\n  // $FlowIgnore this is initialized when generating the second token.\n  lastTokEndLoc: Position = null;\n  // $FlowIgnore this is initialized when generating the second token.\n  lastTokStartLoc: Position = null;\n  lastTokStart: number = 0;\n  lastTokEnd: number = 0;\n\n  // The context stack is used to track whether the apostrophe \"`\" starts\n  // or ends a string template\n  context: Array<TokContext> = [ct.brace];\n  // Used to track whether a JSX element is allowed to form\n  exprAllowed: boolean = true;\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  containsEsc: boolean = false;\n\n  // This property is used to track the following errors\n  // - StrictNumericEscape\n  // - StrictOctalLiteral\n  //\n  // in a literal that occurs prior to/immediately after a \"use strict\" directive.\n\n  // todo(JLHwung): set strictErrors to null and avoid recording string errors\n  // after a non-directive is parsed\n  strictErrors: Map<number, ErrorTemplate> = new Map();\n\n  // Tokens length in token store\n  tokensLength: number = 0;\n\n  curPosition(): Position {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays?: boolean): State {\n    const state = new State();\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      // $FlowIgnore\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      // $FlowIgnore\n      state[key] = val;\n    }\n\n    return state;\n  }\n}\n\nexport type LookaheadState = {\n  pos: number,\n  value: any,\n  type: TokenType,\n  start: number,\n  end: number,\n  /* Used only in readToken_mult_modulo */\n  inType: boolean,\n};\n","// @flow\n\n// Error messages are colocated with the plugin.\n/* eslint-disable @babel/development-internal/dry-error-messages */\n\nimport * as charCodes from \"charcodes\";\n\nimport XHTMLEntities from \"./xhtml\";\nimport type Parser from \"../../parser\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { TokenType, types as tt } from \"../../tokenizer/types\";\nimport { TokContext, types as tc } from \"../../tokenizer/context\";\nimport * as N from \"../../types\";\nimport { isIdentifierChar, isIdentifierStart } from \"../../util/identifier\";\nimport type { Position } from \"../../util/location\";\nimport { isNewLine } from \"../../util/whitespace\";\nimport { Errors, makeErrorTemplates, ErrorCodes } from \"../../parser/error\";\nimport type { LookaheadState } from \"../../tokenizer/state\";\nimport State from \"../../tokenizer/state\";\n\ntype JSXLookaheadState = LookaheadState & { inPropertyName: boolean };\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\n\n/* eslint sort-keys: \"error\" */\nconst JsxErrors = makeErrorTemplates(\n  {\n    AttributeIsEmpty:\n      \"JSX attributes must only be assigned a non-empty expression.\",\n    MissingClosingTagElement:\n      \"Expected corresponding JSX closing tag for <%0>.\",\n    MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n    UnexpectedSequenceExpression:\n      \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n    UnsupportedJsxValue:\n      \"JSX value should be either an expression or a quoted JSX text.\",\n    UnterminatedJsxContent: \"Unterminated JSX contents.\",\n    UnwrappedAdjacentJSXElements:\n      \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\",\n  },\n  /* code */ ErrorCodes.SyntaxError,\n);\n/* eslint-disable sort-keys */\n\n// Be aware that this file is always executed and not only when the plugin is enabled.\n// Therefore this contexts and tokens do always exist.\ntc.j_oTag = new TokContext(\"<tag\");\ntc.j_cTag = new TokContext(\"</tag\");\ntc.j_expr = new TokContext(\"<tag>...</tag>\", true);\n\ntt.jsxName = new TokenType(\"jsxName\");\ntt.jsxText = new TokenType(\"jsxText\", { beforeExpr: true });\ntt.jsxTagStart = new TokenType(\"jsxTagStart\", { startsExpr: true });\ntt.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntt.jsxTagStart.updateContext = context => {\n  context.push(\n    tc.j_expr, // treat as beginning of JSX expression\n    tc.j_oTag, // start opening tag context\n  );\n};\n\nfunction isFragment(object: ?N.JSXElement): boolean {\n  return object\n    ? object.type === \"JSXOpeningFragment\" ||\n        object.type === \"JSXClosingFragment\"\n    : false;\n}\n\n// Transforms JSX element name to string.\n\nfunction getQualifiedJSXName(\n  object: N.JSXIdentifier | N.JSXNamespacedName | N.JSXMemberExpression,\n): string {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return (\n      getQualifiedJSXName(object.object) +\n      \".\" +\n      getQualifiedJSXName(object.property)\n    );\n  }\n\n  // istanbul ignore next\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    // Reads inline JSX contents token.\n\n    jsxReadToken(): void {\n      let out = \"\";\n      let chunkStart = this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n\n        switch (ch) {\n          case charCodes.lessThan:\n          case charCodes.leftCurlyBrace:\n            if (this.state.pos === this.state.start) {\n              if (ch === charCodes.lessThan && this.state.exprAllowed) {\n                ++this.state.pos;\n                return this.finishToken(tt.jsxTagStart);\n              }\n              return super.getTokenFromCode(ch);\n            }\n            out += this.input.slice(chunkStart, this.state.pos);\n            return this.finishToken(tt.jsxText, out);\n\n          case charCodes.ampersand:\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadEntity();\n            chunkStart = this.state.pos;\n            break;\n\n          case charCodes.greaterThan:\n          case charCodes.rightCurlyBrace:\n            if (process.env.BABEL_8_BREAKING) {\n              const htmlEntity =\n                ch === charCodes.rightCurlyBrace ? \"&rbrace;\" : \"&gt;\";\n              const char = this.input[this.state.pos];\n              this.raise(this.state.pos, {\n                code: ErrorCodes.SyntaxError,\n                reasonCode: \"UnexpectedToken\",\n                template: `Unexpected token \\`${char}\\`. Did you mean \\`${htmlEntity}\\` or \\`{'${char}'}\\`?`,\n              });\n            }\n          /* falls through */\n\n          default:\n            if (isNewLine(ch)) {\n              out += this.input.slice(chunkStart, this.state.pos);\n              out += this.jsxReadNewLine(true);\n              chunkStart = this.state.pos;\n            } else {\n              ++this.state.pos;\n            }\n        }\n      }\n    }\n\n    jsxReadNewLine(normalizeCRLF: boolean): string {\n      const ch = this.input.charCodeAt(this.state.pos);\n      let out;\n      ++this.state.pos;\n      if (\n        ch === charCodes.carriageReturn &&\n        this.input.charCodeAt(this.state.pos) === charCodes.lineFeed\n      ) {\n        ++this.state.pos;\n        out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n      } else {\n        out = String.fromCharCode(ch);\n      }\n      ++this.state.curLine;\n      this.state.lineStart = this.state.pos;\n\n      return out;\n    }\n\n    jsxReadString(quote: number): void {\n      let out = \"\";\n      let chunkStart = ++this.state.pos;\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(this.state.start, Errors.UnterminatedString);\n        }\n\n        const ch = this.input.charCodeAt(this.state.pos);\n        if (ch === quote) break;\n        if (ch === charCodes.ampersand) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n        } else if (isNewLine(ch)) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadNewLine(false);\n          chunkStart = this.state.pos;\n        } else {\n          ++this.state.pos;\n        }\n      }\n      out += this.input.slice(chunkStart, this.state.pos++);\n      return this.finishToken(tt.string, out);\n    }\n\n    jsxReadEntity(): string {\n      let str = \"\";\n      let count = 0;\n      let entity;\n      let ch = this.input[this.state.pos];\n\n      const startPos = ++this.state.pos;\n      while (this.state.pos < this.length && count++ < 10) {\n        ch = this.input[this.state.pos++];\n        if (ch === \";\") {\n          if (str[0] === \"#\") {\n            if (str[1] === \"x\") {\n              str = str.substr(2);\n              if (HEX_NUMBER.test(str)) {\n                entity = String.fromCodePoint(parseInt(str, 16));\n              }\n            } else {\n              str = str.substr(1);\n              if (DECIMAL_NUMBER.test(str)) {\n                entity = String.fromCodePoint(parseInt(str, 10));\n              }\n            }\n          } else {\n            entity = XHTMLEntities[str];\n          }\n          break;\n        }\n        str += ch;\n      }\n      if (!entity) {\n        this.state.pos = startPos;\n        return \"&\";\n      }\n      return entity;\n    }\n\n    // Read a JSX identifier (valid tag or attribute name).\n    //\n    // Optimized version since JSX identifiers can\"t contain\n    // escape characters and so can be read as single slice.\n    // Also assumes that first character was already checked\n    // by isIdentifierStart in readToken.\n\n    jsxReadWord(): void {\n      let ch;\n      const start = this.state.pos;\n      do {\n        ch = this.input.charCodeAt(++this.state.pos);\n      } while (isIdentifierChar(ch) || ch === charCodes.dash);\n      return this.finishToken(\n        tt.jsxName,\n        this.input.slice(start, this.state.pos),\n      );\n    }\n\n    // Parse next token as JSX identifier\n\n    jsxParseIdentifier(): N.JSXIdentifier {\n      const node = this.startNode();\n      if (this.match(tt.jsxName)) {\n        node.name = this.state.value;\n      } else if (this.state.type.keyword) {\n        node.name = this.state.type.keyword;\n      } else {\n        this.unexpected();\n      }\n      this.next();\n      return this.finishNode(node, \"JSXIdentifier\");\n    }\n\n    // Parse namespaced identifier.\n\n    jsxParseNamespacedName(): N.JSXNamespacedName {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const name = this.jsxParseIdentifier();\n      if (!this.eat(tt.colon)) return name;\n\n      const node = this.startNodeAt(startPos, startLoc);\n      node.namespace = name;\n      node.name = this.jsxParseIdentifier();\n      return this.finishNode(node, \"JSXNamespacedName\");\n    }\n\n    // Parses element name in any form - namespaced, member\n    // or single identifier.\n\n    jsxParseElementName():\n      | N.JSXIdentifier\n      | N.JSXNamespacedName\n      | N.JSXMemberExpression {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let node = this.jsxParseNamespacedName();\n      if (node.type === \"JSXNamespacedName\") {\n        return node;\n      }\n      while (this.eat(tt.dot)) {\n        const newNode = this.startNodeAt(startPos, startLoc);\n        newNode.object = node;\n        newNode.property = this.jsxParseIdentifier();\n        node = this.finishNode(newNode, \"JSXMemberExpression\");\n      }\n      return node;\n    }\n\n    // Parses any type of JSX attribute value.\n\n    jsxParseAttributeValue(): N.Expression {\n      let node;\n      switch (this.state.type) {\n        case tt.braceL:\n          node = this.startNode();\n          this.next();\n          node = this.jsxParseExpressionContainer(node);\n          if (node.expression.type === \"JSXEmptyExpression\") {\n            this.raise(node.start, JsxErrors.AttributeIsEmpty);\n          }\n          return node;\n\n        case tt.jsxTagStart:\n        case tt.string:\n          return this.parseExprAtom();\n\n        default:\n          throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n      }\n    }\n\n    // JSXEmptyExpression is unique type since it doesn't actually parse anything,\n    // and so it should start at the end of last read token (left brace) and finish\n    // at the beginning of the next one (right brace).\n\n    jsxParseEmptyExpression(): N.JSXEmptyExpression {\n      const node = this.startNodeAt(\n        this.state.lastTokEnd,\n        this.state.lastTokEndLoc,\n      );\n      return this.finishNodeAt(\n        node,\n        \"JSXEmptyExpression\",\n        this.state.start,\n        this.state.startLoc,\n      );\n    }\n\n    // Parse JSX spread child\n\n    jsxParseSpreadChild(node: N.JSXSpreadChild): N.JSXSpreadChild {\n      this.next(); // ellipsis\n      node.expression = this.parseExpression();\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXSpreadChild\");\n    }\n\n    // Parses JSX expression enclosed into curly brackets.\n\n    jsxParseExpressionContainer(\n      node: N.JSXExpressionContainer,\n    ): N.JSXExpressionContainer {\n      if (this.match(tt.braceR)) {\n        node.expression = this.jsxParseEmptyExpression();\n      } else {\n        const expression = this.parseExpression();\n\n        if (process.env.BABEL_8_BREAKING) {\n          if (\n            expression.type === \"SequenceExpression\" &&\n            !expression.extra?.parenthesized\n          ) {\n            this.raise(\n              expression.expressions[1].start,\n              JsxErrors.UnexpectedSequenceExpression,\n            );\n          }\n        }\n\n        node.expression = expression;\n      }\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"JSXExpressionContainer\");\n    }\n\n    // Parses following JSX attribute name-value pair.\n\n    jsxParseAttribute(): N.JSXAttribute {\n      const node = this.startNode();\n      if (this.eat(tt.braceL)) {\n        this.expect(tt.ellipsis);\n        node.argument = this.parseMaybeAssignAllowIn();\n        this.expect(tt.braceR);\n        return this.finishNode(node, \"JSXSpreadAttribute\");\n      }\n      node.name = this.jsxParseNamespacedName();\n      node.value = this.eat(tt.eq) ? this.jsxParseAttributeValue() : null;\n      return this.finishNode(node, \"JSXAttribute\");\n    }\n\n    // Parses JSX opening tag starting after \"<\".\n\n    jsxParseOpeningElementAt(\n      startPos: number,\n      startLoc: Position,\n    ): N.JSXOpeningElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      if (this.match(tt.jsxTagEnd)) {\n        this.expect(tt.jsxTagEnd);\n        return this.finishNode(node, \"JSXOpeningFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      return this.jsxParseOpeningElementAfterName(node);\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      const attributes: N.JSXAttribute[] = [];\n      while (!this.match(tt.slash) && !this.match(tt.jsxTagEnd)) {\n        attributes.push(this.jsxParseAttribute());\n      }\n      node.attributes = attributes;\n      node.selfClosing = this.eat(tt.slash);\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningElement\");\n    }\n\n    // Parses JSX closing tag starting after \"</\".\n\n    jsxParseClosingElementAt(\n      startPos: number,\n      startLoc: Position,\n    ): N.JSXClosingElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      if (this.match(tt.jsxTagEnd)) {\n        this.expect(tt.jsxTagEnd);\n        return this.finishNode(node, \"JSXClosingFragment\");\n      }\n      node.name = this.jsxParseElementName();\n      this.expect(tt.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingElement\");\n    }\n\n    // Parses entire JSX element, including it\"s opening tag\n    // (starting after \"<\"), attributes, contents and closing tag.\n\n    jsxParseElementAt(startPos: number, startLoc: Position): N.JSXElement {\n      const node = this.startNodeAt(startPos, startLoc);\n      const children = [];\n      const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n      let closingElement = null;\n\n      if (!openingElement.selfClosing) {\n        contents: for (;;) {\n          switch (this.state.type) {\n            case tt.jsxTagStart:\n              startPos = this.state.start;\n              startLoc = this.state.startLoc;\n              this.next();\n              if (this.eat(tt.slash)) {\n                closingElement = this.jsxParseClosingElementAt(\n                  startPos,\n                  startLoc,\n                );\n                break contents;\n              }\n              children.push(this.jsxParseElementAt(startPos, startLoc));\n              break;\n\n            case tt.jsxText:\n              children.push(this.parseExprAtom());\n              break;\n\n            case tt.braceL: {\n              const node = this.startNode();\n              this.next();\n              if (this.match(tt.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n            // istanbul ignore next - should never happen\n            default:\n              throw this.unexpected();\n          }\n        }\n\n        if (isFragment(openingElement) && !isFragment(closingElement)) {\n          this.raise(\n            // $FlowIgnore\n            closingElement.start,\n            JsxErrors.MissingClosingTagFragment,\n          );\n        } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n          this.raise(\n            // $FlowIgnore\n            closingElement.start,\n            JsxErrors.MissingClosingTagElement,\n            getQualifiedJSXName(openingElement.name),\n          );\n        } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n          if (\n            // $FlowIgnore\n            getQualifiedJSXName(closingElement.name) !==\n            getQualifiedJSXName(openingElement.name)\n          ) {\n            this.raise(\n              // $FlowIgnore\n              closingElement.start,\n              JsxErrors.MissingClosingTagElement,\n              getQualifiedJSXName(openingElement.name),\n            );\n          }\n        }\n      }\n\n      if (isFragment(openingElement)) {\n        node.openingFragment = openingElement;\n        node.closingFragment = closingElement;\n      } else {\n        node.openingElement = openingElement;\n        node.closingElement = closingElement;\n      }\n      node.children = children;\n      if (this.isRelational(\"<\")) {\n        throw this.raise(\n          this.state.start,\n          JsxErrors.UnwrappedAdjacentJSXElements,\n        );\n      }\n\n      return isFragment(openingElement)\n        ? this.finishNode(node, \"JSXFragment\")\n        : this.finishNode(node, \"JSXElement\");\n    }\n\n    // Parses entire JSX element from current position.\n\n    jsxParseElement(): N.JSXElement {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      this.next();\n      return this.jsxParseElementAt(startPos, startLoc);\n    }\n\n    // ==================================\n    // Overrides\n    // ==================================\n\n    parseExprAtom(refExpressionErrors: ?ExpressionErrors): N.Expression {\n      if (this.match(tt.jsxText)) {\n        return this.parseLiteral(this.state.value, \"JSXText\");\n      } else if (this.match(tt.jsxTagStart)) {\n        return this.jsxParseElement();\n      } else if (\n        this.isRelational(\"<\") &&\n        this.input.charCodeAt(this.state.pos) !== charCodes.exclamationMark\n      ) {\n        // In case we encounter an lt token here it will always be the start of\n        // jsx as the lt sign is not allowed in places that expect an expression\n        this.finishToken(tt.jsxTagStart);\n        return this.jsxParseElement();\n      } else {\n        return super.parseExprAtom(refExpressionErrors);\n      }\n    }\n\n    createLookaheadState(state: State): JSXLookaheadState {\n      const lookaheadState = ((super.createLookaheadState(\n        state,\n      ): any): JSXLookaheadState);\n      lookaheadState.inPropertyName = state.inPropertyName;\n      return lookaheadState;\n    }\n\n    getTokenFromCode(code: number): void {\n      if (this.state.inPropertyName) return super.getTokenFromCode(code);\n\n      const context = this.curContext();\n\n      if (context === tc.j_expr) {\n        return this.jsxReadToken();\n      }\n\n      if (context === tc.j_oTag || context === tc.j_cTag) {\n        if (isIdentifierStart(code)) {\n          return this.jsxReadWord();\n        }\n\n        if (code === charCodes.greaterThan) {\n          ++this.state.pos;\n          return this.finishToken(tt.jsxTagEnd);\n        }\n\n        if (\n          (code === charCodes.quotationMark || code === charCodes.apostrophe) &&\n          context === tc.j_oTag\n        ) {\n          return this.jsxReadString(code);\n        }\n      }\n\n      if (\n        code === charCodes.lessThan &&\n        this.state.exprAllowed &&\n        this.input.charCodeAt(this.state.pos + 1) !== charCodes.exclamationMark\n      ) {\n        ++this.state.pos;\n        return this.finishToken(tt.jsxTagStart);\n      }\n\n      return super.getTokenFromCode(code);\n    }\n\n    updateContext(prevType: TokenType): void {\n      super.updateContext(prevType);\n      const { context, type } = this.state;\n      if (type === tt.slash && prevType === tt.jsxTagStart) {\n        // do not consider JSX expr -> JSX open tag -> ... anymore\n        // reconsider as closing tag context\n        context.splice(-2, 2, tc.j_cTag);\n        this.state.exprAllowed = false;\n      } else if (type === tt.jsxTagEnd) {\n        const out = context.pop();\n        if ((out === tc.j_oTag && prevType === tt.slash) || out === tc.j_cTag) {\n          context.pop();\n          this.state.exprAllowed = context[context.length - 1] === tc.j_expr;\n        } else {\n          this.state.exprAllowed = true;\n        }\n      } else if (\n        type.keyword &&\n        (prevType === tt.dot || prevType === tt.questionDot)\n      ) {\n        this.state.exprAllowed = false;\n      } else {\n        this.state.exprAllowed = type.beforeExpr;\n      }\n    }\n  };\n","// @flow\n\nimport ScopeHandler, { Scope } from \"../../util/scope\";\nimport {\n  BIND_KIND_TYPE,\n  BIND_FLAGS_TS_ENUM,\n  BIND_FLAGS_TS_CONST_ENUM,\n  BIND_FLAGS_TS_EXPORT_ONLY,\n  BIND_KIND_VALUE,\n  BIND_FLAGS_CLASS,\n  type ScopeFlags,\n  type BindingTypes,\n} from \"../../util/scopeflags\";\nimport * as N from \"../../types\";\n\nclass TypeScriptScope extends Scope {\n  types: Set<string> = new Set();\n\n  // enums (which are also in .types)\n  enums: Set<string> = new Set();\n\n  // const enums (which are also in .enums and .types)\n  constEnums: Set<string> = new Set();\n\n  // classes (which are also in .lexical) and interface (which are also in .types)\n  classes: Set<string> = new Set();\n\n  // namespaces and ambient functions (or classes) are too difficult to track,\n  // especially without type analysis.\n  // We need to track them anyway, to avoid \"X is not defined\" errors\n  // when exporting them.\n  exportOnlyBindings: Set<string> = new Set();\n}\n\n// See https://github.com/babel/babel/pull/9766#discussion_r268920730 for an\n// explanation of how typescript handles scope.\n\nexport default class TypeScriptScopeHandler extends ScopeHandler<TypeScriptScope> {\n  createScope(flags: ScopeFlags): TypeScriptScope {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name: string, bindingType: BindingTypes, pos: number) {\n    const scope = this.currentScope();\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.add(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        // \"Value\" bindings have already been registered by the superclass.\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n      scope.types.add(name);\n    }\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.add(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.add(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.add(name);\n  }\n\n  isRedeclaredInScope(\n    scope: TypeScriptScope,\n    name: string,\n    bindingType: BindingTypes,\n  ): boolean {\n    if (scope.enums.has(name)) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        // Enums can be merged with other enums if they are both\n        //  const or both non-const.\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.has(name);\n        return isConst !== wasConst;\n      }\n      return true;\n    }\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.has(name)) {\n      if (scope.lexical.has(name)) {\n        // Classes can be merged with interfaces\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        // Interface can be merged with other classes or interfaces\n        return false;\n      }\n    }\n    if (bindingType & BIND_KIND_TYPE && scope.types.has(name)) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id: N.Identifier) {\n    const topLevelScope = this.scopeStack[0];\n    const { name } = id;\n    if (\n      !topLevelScope.types.has(name) &&\n      !topLevelScope.exportOnlyBindings.has(name)\n    ) {\n      super.checkLocalExport(id);\n    }\n  }\n}\n","// @flow\nexport const PARAM = 0b0000, // Initial Parameter flags\n  PARAM_YIELD = 0b0001, // track [Yield] production parameter\n  PARAM_AWAIT = 0b0010, // track [Await] production parameter\n  PARAM_RETURN = 0b0100, // track [Return] production parameter\n  PARAM_IN = 0b1000; // track [In] production parameter\n\n// ProductionParameterHandler is a stack fashioned production parameter tracker\n// https://tc39.es/ecma262/#sec-grammar-notation\n// The tracked parameters are defined above.\n//\n// Whenever [+Await]/[+Yield] appears in the right-hand sides of a production,\n// we must enter a new tracking stack. For example when parsing\n//\n// AsyncFunctionDeclaration [Yield, Await]:\n//   async [no LineTerminator here] function BindingIdentifier[?Yield, ?Await]\n//     ( FormalParameters[~Yield, +Await] ) { AsyncFunctionBody }\n//\n// we must follow such process:\n//\n// 1. parse async keyword\n// 2. parse function keyword\n// 3. parse bindingIdentifier <= inherit current parameters: [?Await]\n// 4. enter new stack with (PARAM_AWAIT)\n// 5. parse formal parameters <= must have [Await] parameter [+Await]\n// 6. parse function body\n// 7. exit current stack\n\nexport type ParamKind =\n  | typeof PARAM\n  | typeof PARAM_AWAIT\n  | typeof PARAM_IN\n  | typeof PARAM_RETURN\n  | typeof PARAM_YIELD;\n\nexport default class ProductionParameterHandler {\n  stacks: Array<ParamKind> = [];\n  enter(flags: ParamKind) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags(): ParamKind {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait(): boolean {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield(): boolean {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn(): boolean {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn(): boolean {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n}\n\nexport function functionFlags(\n  isAsync: boolean,\n  isGenerator: boolean,\n): ParamKind {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n","// @flow\n\n/*:: declare var invariant; */\n\n// Error messages are colocated with the plugin.\n/* eslint-disable @babel/development-internal/dry-error-messages */\n\nimport type { TokenType } from \"../../tokenizer/types\";\nimport type State from \"../../tokenizer/state\";\nimport { types as tt } from \"../../tokenizer/types\";\nimport { types as ct } from \"../../tokenizer/context\";\nimport * as N from \"../../types\";\nimport type { Position } from \"../../util/location\";\nimport type Parser from \"../../parser\";\nimport {\n  type BindingTypes,\n  SCOPE_TS_MODULE,\n  SCOPE_OTHER,\n  BIND_TS_ENUM,\n  BIND_TS_CONST_ENUM,\n  BIND_TS_TYPE,\n  BIND_TS_INTERFACE,\n  BIND_TS_AMBIENT,\n  BIND_TS_NAMESPACE,\n  BIND_CLASS,\n  BIND_LEXICAL,\n} from \"../../util/scopeflags\";\nimport TypeScriptScopeHandler from \"./scope\";\nimport * as charCodes from \"charcodes\";\nimport type { ExpressionErrors } from \"../../parser/util\";\nimport { PARAM } from \"../../util/production-parameter\";\nimport {\n  Errors,\n  makeErrorTemplates,\n  type ErrorTemplate,\n  ErrorCodes,\n} from \"../../parser/error\";\n\ntype TsModifier =\n  | \"readonly\"\n  | \"abstract\"\n  | \"declare\"\n  | \"static\"\n  | \"override\"\n  | N.Accessibility;\n\nfunction nonNull<T>(x: ?T): T {\n  if (x == null) {\n    // $FlowIgnore\n    throw new Error(`Unexpected ${x} value.`);\n  }\n  return x;\n}\n\nfunction assert(x: boolean): void {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\ntype ParsingContext =\n  | \"EnumMembers\"\n  | \"HeritageClauseElement\"\n  | \"TupleElementTypes\"\n  | \"TypeMembers\"\n  | \"TypeParametersOrArguments\";\n\n/* eslint sort-keys: \"error\" */\nconst TSErrors = makeErrorTemplates(\n  {\n    AbstractMethodHasImplementation:\n      \"Method '%0' cannot have an implementation because it is marked abstract.\",\n    AccesorCannotDeclareThisParameter:\n      \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n    AccesorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n    ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n    ClassMethodHasReadonly:\n      \"Class methods cannot have the 'readonly' modifier.\",\n    ConstructorHasTypeParameters:\n      \"Type parameters cannot appear on a constructor declaration.\",\n    DeclareAccessor: \"'declare' is not allowed in %0ters.\",\n    DeclareClassFieldHasInitializer:\n      \"Initializers are not allowed in ambient contexts.\",\n    DeclareFunctionHasImplementation:\n      \"An implementation cannot be declared in ambient contexts.\",\n    DuplicateAccessibilityModifier: \"Accessibility modifier already seen.\",\n    DuplicateModifier: \"Duplicate modifier: '%0'.\",\n    EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n    EmptyTypeArguments: \"Type argument list cannot be empty.\",\n    EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n    ExpectedAmbientAfterExportDeclare:\n      \"'export declare' must be followed by an ambient declaration.\",\n    ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n    IncompatibleModifiers: \"'%0' modifier cannot be used with '%1' modifier.\",\n    IndexSignatureHasAbstract:\n      \"Index signatures cannot have the 'abstract' modifier.\",\n    IndexSignatureHasAccessibility:\n      \"Index signatures cannot have an accessibility modifier ('%0').\",\n    IndexSignatureHasDeclare:\n      \"Index signatures cannot have the 'declare' modifier.\",\n    IndexSignatureHasOverride:\n      \"'override' modifier cannot appear on an index signature.\",\n    IndexSignatureHasStatic:\n      \"Index signatures cannot have the 'static' modifier.\",\n    InvalidModifierOnTypeMember:\n      \"'%0' modifier cannot appear on a type member.\",\n    InvalidModifiersOrder: \"'%0' modifier must precede '%1' modifier.\",\n    InvalidTupleMemberLabel:\n      \"Tuple members must be labeled with a simple identifier.\",\n    MixedLabeledAndUnlabeledElements:\n      \"Tuple members must all have names or all not have names.\",\n    NonAbstractClassHasAbstractMethod:\n      \"Abstract methods can only appear within an abstract class.\",\n    NonClassMethodPropertyHasAbstractModifer:\n      \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n    OptionalTypeBeforeRequired:\n      \"A required element cannot follow an optional element.\",\n    OverrideNotInSubClass:\n      \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n    PatternIsOptional:\n      \"A binding pattern parameter cannot be optional in an implementation signature.\",\n    PrivateElementHasAbstract:\n      \"Private elements cannot have the 'abstract' modifier.\",\n    PrivateElementHasAccessibility:\n      \"Private elements cannot have an accessibility modifier ('%0').\",\n    ReadonlyForMethodSignature:\n      \"'readonly' modifier can only appear on a property declaration or index signature.\",\n    SetAccesorCannotHaveOptionalParameter:\n      \"A 'set' accessor cannot have an optional parameter.\",\n    SetAccesorCannotHaveRestParameter:\n      \"A 'set' accessor cannot have rest parameter.\",\n    SetAccesorCannotHaveReturnType:\n      \"A 'set' accessor cannot have a return type annotation.\",\n    StaticBlockCannotHaveModifier:\n      \"Static class blocks cannot have any modifier.\",\n    TypeAnnotationAfterAssign:\n      \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n    TypeImportCannotSpecifyDefaultAndNamed:\n      \"A type-only import can specify a default import or named bindings, but not both.\",\n    UnexpectedParameterModifier:\n      \"A parameter property is only allowed in a constructor implementation.\",\n    UnexpectedReadonly:\n      \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n    UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n    UnexpectedTypeCastInParameter:\n      \"Unexpected type cast in parameter position.\",\n    UnsupportedImportTypeArgument:\n      \"Argument in a type import must be a string literal.\",\n    UnsupportedParameterPropertyKind:\n      \"A parameter property may not be declared using a binding pattern.\",\n    UnsupportedSignatureParameterKind:\n      \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0.\",\n  },\n  /* code */ ErrorCodes.SyntaxError,\n);\n/* eslint-disable sort-keys */\n\n// Doesn't handle \"void\" or \"null\" because those are keywords, not identifiers.\n// It also doesn't handle \"intrinsic\", since usually it's not a keyword.\nfunction keywordTypeFromName(\n  value: string,\n): N.TsKeywordTypeType | typeof undefined {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n    case \"never\":\n      return \"TSNeverKeyword\";\n    case \"number\":\n      return \"TSNumberKeyword\";\n    case \"object\":\n      return \"TSObjectKeyword\";\n    case \"string\":\n      return \"TSStringKeyword\";\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier: string): boolean %checks {\n  return (\n    modifier === \"private\" || modifier === \"public\" || modifier === \"protected\"\n  );\n}\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    getScopeHandler(): Class<TypeScriptScopeHandler> {\n      return TypeScriptScopeHandler;\n    }\n\n    tsIsIdentifier(): boolean {\n      // TODO: actually a bit more complex in TypeScript, but shouldn't matter.\n      // See https://github.com/Microsoft/TypeScript/issues/15008\n      return this.match(tt.name);\n    }\n\n    tsTokenCanFollowModifier() {\n      return (\n        (this.match(tt.bracketL) ||\n          this.match(tt.braceL) ||\n          this.match(tt.star) ||\n          this.match(tt.ellipsis) ||\n          this.match(tt.privateName) ||\n          this.isLiteralPropertyName()) &&\n        !this.hasPrecedingLineBreak()\n      );\n    }\n\n    tsNextTokenCanFollowModifier() {\n      // Note: TypeScript's implementation is much more complicated because\n      // more things are considered modifiers there.\n      // This implementation only handles modifiers not handled by @babel/parser itself. And \"static\".\n      // TODO: Would be nice to avoid lookahead. Want a hasLineBreakUpNext() method...\n      this.next();\n      return this.tsTokenCanFollowModifier();\n    }\n\n    /** Parses a modifier matching one the given modifier names. */\n    tsParseModifier<T: TsModifier>(allowedModifiers: T[]): ?T {\n      if (!this.match(tt.name)) {\n        return undefined;\n      }\n\n      const modifier = this.state.value;\n      if (\n        allowedModifiers.indexOf(modifier) !== -1 &&\n        this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))\n      ) {\n        return modifier;\n      }\n      return undefined;\n    }\n\n    /** Parses a list of modifiers, in any order.\n     *  If you need a specific order, you must call this function multiple times:\n     *    this.tsParseModifiers(node, [\"public\"]);\n     *    this.tsParseModifiers(node, [\"abstract\", \"readonly\"]);\n     */\n    tsParseModifiers(\n      modified: {\n        [key: TsModifier]: ?true,\n        accessibility?: N.Accessibility,\n      },\n      allowedModifiers: TsModifier[],\n      disallowedModifiers?: TsModifier[],\n      errorTemplate?: ErrorTemplate,\n    ): void {\n      const enforceOrder = (pos, modifier, before, after) => {\n        if (modifier === before && modified[after]) {\n          this.raise(pos, TSErrors.InvalidModifiersOrder, before, after);\n        }\n      };\n      const incompatible = (pos, modifier, mod1, mod2) => {\n        if (\n          (modified[mod1] && modifier === mod2) ||\n          (modified[mod2] && modifier === mod1)\n        ) {\n          this.raise(pos, TSErrors.IncompatibleModifiers, mod1, mod2);\n        }\n      };\n\n      for (;;) {\n        const startPos = this.state.start;\n        const modifier: ?TsModifier = this.tsParseModifier(\n          allowedModifiers.concat(disallowedModifiers ?? []),\n        );\n\n        if (!modifier) break;\n\n        if (tsIsAccessModifier(modifier)) {\n          if (modified.accessibility) {\n            this.raise(startPos, TSErrors.DuplicateAccessibilityModifier);\n          } else {\n            enforceOrder(startPos, modifier, modifier, \"override\");\n            enforceOrder(startPos, modifier, modifier, \"static\");\n            enforceOrder(startPos, modifier, modifier, \"readonly\");\n\n            modified.accessibility = modifier;\n          }\n        } else {\n          if (Object.hasOwnProperty.call(modified, modifier)) {\n            this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n          } else {\n            enforceOrder(startPos, modifier, \"static\", \"readonly\");\n            enforceOrder(startPos, modifier, \"static\", \"override\");\n            enforceOrder(startPos, modifier, \"override\", \"readonly\");\n            enforceOrder(startPos, modifier, \"abstract\", \"override\");\n\n            incompatible(startPos, modifier, \"declare\", \"override\");\n            incompatible(startPos, modifier, \"static\", \"abstract\");\n          }\n          modified[modifier] = true;\n        }\n\n        if (disallowedModifiers?.includes(modifier)) {\n          this.raise(\n            startPos,\n            // $FlowIgnore\n            errorTemplate,\n            modifier,\n          );\n        }\n      }\n    }\n\n    tsIsListTerminator(kind: ParsingContext): boolean {\n      switch (kind) {\n        case \"EnumMembers\":\n        case \"TypeMembers\":\n          return this.match(tt.braceR);\n        case \"HeritageClauseElement\":\n          return this.match(tt.braceL);\n        case \"TupleElementTypes\":\n          return this.match(tt.bracketR);\n        case \"TypeParametersOrArguments\":\n          return this.isRelational(\">\");\n      }\n\n      throw new Error(\"Unreachable\");\n    }\n\n    tsParseList<T: N.Node>(kind: ParsingContext, parseElement: () => T): T[] {\n      const result: T[] = [];\n      while (!this.tsIsListTerminator(kind)) {\n        // Skipping \"parseListElement\" from the TS source since that's just for error handling.\n        result.push(parseElement());\n      }\n      return result;\n    }\n\n    tsParseDelimitedList<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n    ): T[] {\n      return nonNull(\n        this.tsParseDelimitedListWorker(\n          kind,\n          parseElement,\n          /* expectSuccess */ true,\n        ),\n      );\n    }\n\n    /**\n     * If !expectSuccess, returns undefined instead of failing to parse.\n     * If expectSuccess, parseElement should always return a defined value.\n     */\n    tsParseDelimitedListWorker<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => ?T,\n      expectSuccess: boolean,\n    ): ?(T[]) {\n      const result = [];\n\n      for (;;) {\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n\n        const element = parseElement();\n        if (element == null) {\n          return undefined;\n        }\n        result.push(element);\n\n        if (this.eat(tt.comma)) {\n          continue;\n        }\n\n        if (this.tsIsListTerminator(kind)) {\n          break;\n        }\n\n        if (expectSuccess) {\n          // This will fail with an error about a missing comma\n          this.expect(tt.comma);\n        }\n        return undefined;\n      }\n\n      return result;\n    }\n\n    tsParseBracketedList<T: N.Node>(\n      kind: ParsingContext,\n      parseElement: () => T,\n      bracket: boolean,\n      skipFirstToken: boolean,\n    ): T[] {\n      if (!skipFirstToken) {\n        if (bracket) {\n          this.expect(tt.bracketL);\n        } else {\n          this.expectRelational(\"<\");\n        }\n      }\n\n      const result = this.tsParseDelimitedList(kind, parseElement);\n\n      if (bracket) {\n        this.expect(tt.bracketR);\n      } else {\n        this.expectRelational(\">\");\n      }\n\n      return result;\n    }\n\n    tsParseImportType(): N.TsImportType {\n      const node: N.TsImportType = this.startNode();\n      this.expect(tt._import);\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n      }\n\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.argument = this.parseExprAtom();\n      this.expect(tt.parenR);\n\n      if (this.eat(tt.dot)) {\n        node.qualifier = this.tsParseEntityName(/* allowReservedWords */ true);\n      }\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSImportType\");\n    }\n\n    tsParseEntityName(allowReservedWords: boolean): N.TsEntityName {\n      let entity: N.TsEntityName = this.parseIdentifier();\n      while (this.eat(tt.dot)) {\n        const node: N.TsQualifiedName = this.startNodeAtNode(entity);\n        node.left = entity;\n        node.right = this.parseIdentifier(allowReservedWords);\n        entity = this.finishNode(node, \"TSQualifiedName\");\n      }\n      return entity;\n    }\n\n    tsParseTypeReference(): N.TsTypeReference {\n      const node: N.TsTypeReference = this.startNode();\n      node.typeName = this.tsParseEntityName(/* allowReservedWords */ false);\n      if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n      return this.finishNode(node, \"TSTypeReference\");\n    }\n\n    tsParseThisTypePredicate(lhs: N.TsThisType): N.TsTypePredicate {\n      this.next();\n      const node: N.TsTypePredicate = this.startNodeAtNode(lhs);\n      node.parameterName = lhs;\n      node.typeAnnotation = this.tsParseTypeAnnotation(/* eatColon */ false);\n      node.asserts = false;\n      return this.finishNode(node, \"TSTypePredicate\");\n    }\n\n    tsParseThisTypeNode(): N.TsThisType {\n      const node: N.TsThisType = this.startNode();\n      this.next();\n      return this.finishNode(node, \"TSThisType\");\n    }\n\n    tsParseTypeQuery(): N.TsTypeQuery {\n      const node: N.TsTypeQuery = this.startNode();\n      this.expect(tt._typeof);\n      if (this.match(tt._import)) {\n        node.exprName = this.tsParseImportType();\n      } else {\n        node.exprName = this.tsParseEntityName(/* allowReservedWords */ true);\n      }\n      return this.finishNode(node, \"TSTypeQuery\");\n    }\n\n    tsParseTypeParameter(): N.TsTypeParameter {\n      const node: N.TsTypeParameter = this.startNode();\n      node.name = this.parseIdentifierName(node.start);\n      node.constraint = this.tsEatThenParseType(tt._extends);\n      node.default = this.tsEatThenParseType(tt.eq);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsTryParseTypeParameters(): ?N.TsTypeParameterDeclaration {\n      if (this.isRelational(\"<\")) {\n        return this.tsParseTypeParameters();\n      }\n    }\n\n    tsParseTypeParameters() {\n      const node: N.TsTypeParameterDeclaration = this.startNode();\n\n      if (this.isRelational(\"<\") || this.match(tt.jsxTagStart)) {\n        this.next();\n      } else {\n        this.unexpected();\n      }\n\n      node.params = this.tsParseBracketedList(\n        \"TypeParametersOrArguments\",\n        this.tsParseTypeParameter.bind(this),\n        /* bracket */ false,\n        /* skipFirstToken */ true,\n      );\n      if (node.params.length === 0) {\n        this.raise(node.start, TSErrors.EmptyTypeParameters);\n      }\n      return this.finishNode(node, \"TSTypeParameterDeclaration\");\n    }\n\n    tsTryNextParseConstantContext(): ?N.TsTypeReference {\n      if (this.lookahead().type === tt._const) {\n        this.next();\n        return this.tsParseTypeReference();\n      }\n      return null;\n    }\n\n    // Note: In TypeScript implementation we must provide `yieldContext` and `awaitContext`,\n    // but here it's always false, because this is only used for types.\n    tsFillSignature(\n      returnToken: TokenType,\n      signature: N.TsSignatureDeclaration,\n    ): void {\n      // Arrow fns *must* have return token (`=>`). Normal functions can omit it.\n      const returnTokenRequired = returnToken === tt.arrow;\n      signature.typeParameters = this.tsTryParseTypeParameters();\n      this.expect(tt.parenL);\n      signature.parameters = this.tsParseBindingListForSignature();\n      if (returnTokenRequired) {\n        signature.typeAnnotation =\n          this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n      } else if (this.match(returnToken)) {\n        signature.typeAnnotation =\n          this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n      }\n    }\n\n    tsParseBindingListForSignature(): $ReadOnlyArray<\n      N.Identifier | N.RestElement | N.ObjectPattern | N.ArrayPattern,\n    > {\n      return this.parseBindingList(tt.parenR, charCodes.rightParenthesis).map(\n        pattern => {\n          if (\n            pattern.type !== \"Identifier\" &&\n            pattern.type !== \"RestElement\" &&\n            pattern.type !== \"ObjectPattern\" &&\n            pattern.type !== \"ArrayPattern\"\n          ) {\n            this.raise(\n              pattern.start,\n              TSErrors.UnsupportedSignatureParameterKind,\n              pattern.type,\n            );\n          }\n          return (pattern: any);\n        },\n      );\n    }\n\n    tsParseTypeMemberSemicolon(): void {\n      if (!this.eat(tt.comma) && !this.isLineTerminator()) {\n        this.expect(tt.semi);\n      }\n    }\n\n    tsParseSignatureMember(\n      kind: \"TSCallSignatureDeclaration\" | \"TSConstructSignatureDeclaration\",\n      node: N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration,\n    ): N.TsCallSignatureDeclaration | N.TsConstructSignatureDeclaration {\n      this.tsFillSignature(tt.colon, node);\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, kind);\n    }\n\n    tsIsUnambiguouslyIndexSignature() {\n      this.next(); // Skip '{'\n      return this.eat(tt.name) && this.match(tt.colon);\n    }\n\n    tsTryParseIndexSignature(node: N.Node): ?N.TsIndexSignature {\n      if (\n        !(\n          this.match(tt.bracketL) &&\n          this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this))\n        )\n      ) {\n        return undefined;\n      }\n\n      this.expect(tt.bracketL);\n      const id = this.parseIdentifier();\n      id.typeAnnotation = this.tsParseTypeAnnotation();\n      this.resetEndLocation(id); // set end position to end of type\n\n      this.expect(tt.bracketR);\n      node.parameters = [id];\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(node, \"TSIndexSignature\");\n    }\n\n    tsParsePropertyOrMethodSignature(\n      node: N.TsPropertySignature | N.TsMethodSignature,\n      readonly: boolean,\n    ): N.TsPropertySignature | N.TsMethodSignature {\n      if (this.eat(tt.question)) node.optional = true;\n      const nodeAny: any = node;\n\n      if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n        if (readonly) {\n          this.raise(node.start, TSErrors.ReadonlyForMethodSignature);\n        }\n        const method: N.TsMethodSignature = nodeAny;\n        if (method.kind && this.isRelational(\"<\")) {\n          this.raise(this.state.pos, TSErrors.AccesorCannotHaveTypeParameters);\n        }\n        this.tsFillSignature(tt.colon, method);\n        this.tsParseTypeMemberSemicolon();\n        if (method.kind === \"get\") {\n          if (method.parameters.length > 0) {\n            this.raise(this.state.pos, Errors.BadGetterArity);\n            if (this.isThisParam(method.parameters[0])) {\n              this.raise(\n                this.state.pos,\n                TSErrors.AccesorCannotDeclareThisParameter,\n              );\n            }\n          }\n        } else if (method.kind === \"set\") {\n          if (method.parameters.length !== 1) {\n            this.raise(this.state.pos, Errors.BadSetterArity);\n          } else {\n            const firstParameter = method.parameters[0];\n            if (this.isThisParam(firstParameter)) {\n              this.raise(\n                this.state.pos,\n                TSErrors.AccesorCannotDeclareThisParameter,\n              );\n            }\n            if (\n              firstParameter.type === \"Identifier\" &&\n              firstParameter.optional\n            ) {\n              this.raise(\n                this.state.pos,\n                TSErrors.SetAccesorCannotHaveOptionalParameter,\n              );\n            }\n            if (firstParameter.type === \"RestElement\") {\n              this.raise(\n                this.state.pos,\n                TSErrors.SetAccesorCannotHaveRestParameter,\n              );\n            }\n          }\n          if (method.typeAnnotation) {\n            this.raise(\n              method.typeAnnotation.start,\n              TSErrors.SetAccesorCannotHaveReturnType,\n            );\n          }\n        } else {\n          method.kind = \"method\";\n        }\n        return this.finishNode(method, \"TSMethodSignature\");\n      } else {\n        const property: N.TsPropertySignature = nodeAny;\n        if (readonly) property.readonly = true;\n        const type = this.tsTryParseTypeAnnotation();\n        if (type) property.typeAnnotation = type;\n        this.tsParseTypeMemberSemicolon();\n        return this.finishNode(property, \"TSPropertySignature\");\n      }\n    }\n\n    tsParseTypeMember(): N.TsTypeElement {\n      const node: any = this.startNode();\n\n      if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n      }\n\n      if (this.match(tt._new)) {\n        const id: N.Identifier = this.startNode();\n        this.next();\n        if (this.match(tt.parenL) || this.isRelational(\"<\")) {\n          return this.tsParseSignatureMember(\n            \"TSConstructSignatureDeclaration\",\n            node,\n          );\n        } else {\n          node.key = this.createIdentifier(id, \"new\");\n          return this.tsParsePropertyOrMethodSignature(node, false);\n        }\n      }\n\n      this.tsParseModifiers(\n        node,\n        [\"readonly\"],\n        [\n          \"declare\",\n          \"abstract\",\n          \"private\",\n          \"protected\",\n          \"public\",\n          \"static\",\n          \"override\",\n        ],\n        TSErrors.InvalidModifierOnTypeMember,\n      );\n\n      const idx = this.tsTryParseIndexSignature(node);\n      if (idx) {\n        return idx;\n      }\n\n      this.parsePropertyName(node, /* isPrivateNameAllowed */ false);\n      if (\n        !node.computed &&\n        node.key.type === \"Identifier\" &&\n        (node.key.name === \"get\" || node.key.name === \"set\") &&\n        this.tsTokenCanFollowModifier()\n      ) {\n        node.kind = node.key.name;\n        this.parsePropertyName(node, /* isPrivateNameAllowed */ false);\n      }\n      return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n    }\n\n    tsParseTypeLiteral(): N.TsTypeLiteral {\n      const node: N.TsTypeLiteral = this.startNode();\n      node.members = this.tsParseObjectTypeMembers();\n      return this.finishNode(node, \"TSTypeLiteral\");\n    }\n\n    tsParseObjectTypeMembers(): $ReadOnlyArray<N.TsTypeElement> {\n      this.expect(tt.braceL);\n      const members = this.tsParseList(\n        \"TypeMembers\",\n        this.tsParseTypeMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return members;\n    }\n\n    tsIsStartOfMappedType(): boolean {\n      this.next();\n      if (this.eat(tt.plusMin)) {\n        return this.isContextual(\"readonly\");\n      }\n      if (this.isContextual(\"readonly\")) {\n        this.next();\n      }\n      if (!this.match(tt.bracketL)) {\n        return false;\n      }\n      this.next();\n      if (!this.tsIsIdentifier()) {\n        return false;\n      }\n      this.next();\n      return this.match(tt._in);\n    }\n\n    tsParseMappedTypeParameter(): N.TsTypeParameter {\n      const node: N.TsTypeParameter = this.startNode();\n      node.name = this.parseIdentifierName(node.start);\n      node.constraint = this.tsExpectThenParseType(tt._in);\n      return this.finishNode(node, \"TSTypeParameter\");\n    }\n\n    tsParseMappedType(): N.TsMappedType {\n      const node: N.TsMappedType = this.startNode();\n\n      this.expect(tt.braceL);\n\n      if (this.match(tt.plusMin)) {\n        node.readonly = this.state.value;\n        this.next();\n        this.expectContextual(\"readonly\");\n      } else if (this.eatContextual(\"readonly\")) {\n        node.readonly = true;\n      }\n\n      this.expect(tt.bracketL);\n      node.typeParameter = this.tsParseMappedTypeParameter();\n      node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n\n      this.expect(tt.bracketR);\n\n      if (this.match(tt.plusMin)) {\n        node.optional = this.state.value;\n        this.next();\n        this.expect(tt.question);\n      } else if (this.eat(tt.question)) {\n        node.optional = true;\n      }\n\n      node.typeAnnotation = this.tsTryParseType();\n      this.semicolon();\n      this.expect(tt.braceR);\n\n      return this.finishNode(node, \"TSMappedType\");\n    }\n\n    tsParseTupleType(): N.TsTupleType {\n      const node: N.TsTupleType = this.startNode();\n      node.elementTypes = this.tsParseBracketedList(\n        \"TupleElementTypes\",\n        this.tsParseTupleElementType.bind(this),\n        /* bracket */ true,\n        /* skipFirstToken */ false,\n      );\n\n      // Validate the elementTypes to ensure that no mandatory elements\n      // follow optional elements\n      let seenOptionalElement = false;\n      let labeledElements = null;\n      node.elementTypes.forEach(elementNode => {\n        let { type } = elementNode;\n\n        if (\n          seenOptionalElement &&\n          type !== \"TSRestType\" &&\n          type !== \"TSOptionalType\" &&\n          !(type === \"TSNamedTupleMember\" && elementNode.optional)\n        ) {\n          this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n        }\n\n        // Flow doesn't support ||=\n        seenOptionalElement =\n          seenOptionalElement ||\n          (type === \"TSNamedTupleMember\" && elementNode.optional) ||\n          type === \"TSOptionalType\";\n\n        // When checking labels, check the argument of the spread operator\n        if (type === \"TSRestType\") {\n          elementNode = elementNode.typeAnnotation;\n          type = elementNode.type;\n        }\n\n        const isLabeled = type === \"TSNamedTupleMember\";\n        // Flow doesn't support ??=\n        labeledElements = labeledElements ?? isLabeled;\n        if (labeledElements !== isLabeled) {\n          this.raise(\n            elementNode.start,\n            TSErrors.MixedLabeledAndUnlabeledElements,\n          );\n        }\n      });\n\n      return this.finishNode(node, \"TSTupleType\");\n    }\n\n    tsParseTupleElementType(): N.TsType | N.TsNamedTupleMember {\n      // parses `...TsType[]`\n\n      const { start: startPos, startLoc } = this.state;\n\n      const rest = this.eat(tt.ellipsis);\n      let type = this.tsParseType();\n      const optional = this.eat(tt.question);\n      const labeled = this.eat(tt.colon);\n\n      if (labeled) {\n        const labeledNode: N.TsNamedTupleMember = this.startNodeAtNode(type);\n        labeledNode.optional = optional;\n\n        if (\n          type.type === \"TSTypeReference\" &&\n          !type.typeParameters &&\n          type.typeName.type === \"Identifier\"\n        ) {\n          labeledNode.label = (type.typeName: N.Identifier);\n        } else {\n          this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n          // This produces an invalid AST, but at least we don't drop\n          // nodes representing the invalid source.\n          // $FlowIgnore\n          labeledNode.label = type;\n        }\n\n        labeledNode.elementType = this.tsParseType();\n        type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n      } else if (optional) {\n        const optionalTypeNode: N.TsOptionalType = this.startNodeAtNode(type);\n        optionalTypeNode.typeAnnotation = type;\n        type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n      }\n\n      if (rest) {\n        const restNode: N.TsRestType = this.startNodeAt(startPos, startLoc);\n        restNode.typeAnnotation = type;\n        type = this.finishNode(restNode, \"TSRestType\");\n      }\n\n      return type;\n    }\n\n    tsParseParenthesizedType(): N.TsParenthesizedType {\n      const node = this.startNode();\n      this.expect(tt.parenL);\n      node.typeAnnotation = this.tsParseType();\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSParenthesizedType\");\n    }\n\n    tsParseFunctionOrConstructorType(\n      type: \"TSFunctionType\" | \"TSConstructorType\",\n      abstract?: boolean,\n    ): N.TsFunctionOrConstructorType {\n      const node: N.TsFunctionOrConstructorType = this.startNode();\n      if (type === \"TSConstructorType\") {\n        // $FlowIgnore\n        node.abstract = !!abstract;\n        if (abstract) this.next();\n        this.next(); // eat `new`\n      }\n      this.tsFillSignature(tt.arrow, node);\n      return this.finishNode(node, type);\n    }\n\n    tsParseLiteralTypeNode(): N.TsLiteralType {\n      const node: N.TsLiteralType = this.startNode();\n      node.literal = (() => {\n        switch (this.state.type) {\n          case tt.num:\n          case tt.bigint:\n          case tt.string:\n          case tt._true:\n          case tt._false:\n            // For compatibility to estree we cannot call parseLiteral directly here\n            return this.parseExprAtom();\n          default:\n            throw this.unexpected();\n        }\n      })();\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    tsParseTemplateLiteralType(): N.TsType {\n      const node: N.TsLiteralType = this.startNode();\n      node.literal = this.parseTemplate(false);\n      return this.finishNode(node, \"TSLiteralType\");\n    }\n\n    parseTemplateSubstitution(): N.TsType {\n      if (this.state.inType) return this.tsParseType();\n      return super.parseTemplateSubstitution();\n    }\n\n    tsParseThisTypeOrThisTypePredicate(): N.TsThisType | N.TsTypePredicate {\n      const thisKeyword = this.tsParseThisTypeNode();\n      if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n        return this.tsParseThisTypePredicate(thisKeyword);\n      } else {\n        return thisKeyword;\n      }\n    }\n\n    tsParseNonArrayType(): N.TsType {\n      switch (this.state.type) {\n        case tt.name:\n        case tt._void:\n        case tt._null: {\n          const type = this.match(tt._void)\n            ? \"TSVoidKeyword\"\n            : this.match(tt._null)\n            ? \"TSNullKeyword\"\n            : keywordTypeFromName(this.state.value);\n          if (\n            type !== undefined &&\n            this.lookaheadCharCode() !== charCodes.dot\n          ) {\n            const node: N.TsKeywordType = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n          return this.tsParseTypeReference();\n        }\n        case tt.string:\n        case tt.num:\n        case tt.bigint:\n        case tt._true:\n        case tt._false:\n          return this.tsParseLiteralTypeNode();\n        case tt.plusMin:\n          if (this.state.value === \"-\") {\n            const node: N.TsLiteralType = this.startNode();\n            const nextToken = this.lookahead();\n            if (nextToken.type !== tt.num && nextToken.type !== tt.bigint) {\n              throw this.unexpected();\n            }\n            node.literal = this.parseMaybeUnary();\n            return this.finishNode(node, \"TSLiteralType\");\n          }\n          break;\n        case tt._this:\n          return this.tsParseThisTypeOrThisTypePredicate();\n        case tt._typeof:\n          return this.tsParseTypeQuery();\n        case tt._import:\n          return this.tsParseImportType();\n        case tt.braceL:\n          return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this))\n            ? this.tsParseMappedType()\n            : this.tsParseTypeLiteral();\n        case tt.bracketL:\n          return this.tsParseTupleType();\n        case tt.parenL:\n          if (process.env.BABEL_8_BREAKING) {\n            if (!this.options.createParenthesizedExpressions) {\n              const startPos = this.state.start;\n              this.next();\n              const type = this.tsParseType();\n              this.expect(tt.parenR);\n              this.addExtra(type, \"parenthesized\", true);\n              this.addExtra(type, \"parenStart\", startPos);\n              return type;\n            }\n          }\n\n          return this.tsParseParenthesizedType();\n        case tt.backQuote:\n          return this.tsParseTemplateLiteralType();\n      }\n\n      throw this.unexpected();\n    }\n\n    tsParseArrayTypeOrHigher(): N.TsType {\n      let type = this.tsParseNonArrayType();\n      while (!this.hasPrecedingLineBreak() && this.eat(tt.bracketL)) {\n        if (this.match(tt.bracketR)) {\n          const node: N.TsArrayType = this.startNodeAtNode(type);\n          node.elementType = type;\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSArrayType\");\n        } else {\n          const node: N.TsIndexedAccessType = this.startNodeAtNode(type);\n          node.objectType = type;\n          node.indexType = this.tsParseType();\n          this.expect(tt.bracketR);\n          type = this.finishNode(node, \"TSIndexedAccessType\");\n        }\n      }\n      return type;\n    }\n\n    tsParseTypeOperator(\n      operator: \"keyof\" | \"unique\" | \"readonly\",\n    ): N.TsTypeOperator {\n      const node: N.TsTypeOperator = this.startNode();\n      this.expectContextual(operator);\n      node.operator = operator;\n      node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n      if (operator === \"readonly\") {\n        this.tsCheckTypeAnnotationForReadOnly(node);\n      }\n\n      return this.finishNode(node, \"TSTypeOperator\");\n    }\n\n    tsCheckTypeAnnotationForReadOnly(node: N.Node) {\n      switch (node.typeAnnotation.type) {\n        case \"TSTupleType\":\n        case \"TSArrayType\":\n          return;\n        default:\n          this.raise(node.start, TSErrors.UnexpectedReadonly);\n      }\n    }\n\n    tsParseInferType(): N.TsInferType {\n      const node = this.startNode();\n      this.expectContextual(\"infer\");\n      const typeParameter = this.startNode();\n      typeParameter.name = this.parseIdentifierName(typeParameter.start);\n      node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n      return this.finishNode(node, \"TSInferType\");\n    }\n\n    tsParseTypeOperatorOrHigher(): N.TsType {\n      const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw =>\n        this.isContextual(kw),\n      );\n      return operator\n        ? this.tsParseTypeOperator(operator)\n        : this.isContextual(\"infer\")\n        ? this.tsParseInferType()\n        : this.tsParseArrayTypeOrHigher();\n    }\n\n    tsParseUnionOrIntersectionType(\n      kind: \"TSUnionType\" | \"TSIntersectionType\",\n      parseConstituentType: () => N.TsType,\n      operator: TokenType,\n    ): N.TsType {\n      const node: N.TsUnionType | N.TsIntersectionType = this.startNode();\n      const hasLeadingOperator = this.eat(operator);\n      const types = [];\n      do {\n        types.push(parseConstituentType());\n      } while (this.eat(operator));\n      if (types.length === 1 && !hasLeadingOperator) {\n        return types[0];\n      }\n      node.types = types;\n      return this.finishNode(node, kind);\n    }\n\n    tsParseIntersectionTypeOrHigher(): N.TsType {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSIntersectionType\",\n        this.tsParseTypeOperatorOrHigher.bind(this),\n        tt.bitwiseAND,\n      );\n    }\n\n    tsParseUnionTypeOrHigher() {\n      return this.tsParseUnionOrIntersectionType(\n        \"TSUnionType\",\n        this.tsParseIntersectionTypeOrHigher.bind(this),\n        tt.bitwiseOR,\n      );\n    }\n\n    tsIsStartOfFunctionType() {\n      if (this.isRelational(\"<\")) {\n        return true;\n      }\n      return (\n        this.match(tt.parenL) &&\n        this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this))\n      );\n    }\n\n    tsSkipParameterStart(): boolean {\n      if (this.match(tt.name) || this.match(tt._this)) {\n        this.next();\n        return true;\n      }\n\n      if (this.match(tt.braceL)) {\n        let braceStackCounter = 1;\n        this.next();\n\n        while (braceStackCounter > 0) {\n          if (this.match(tt.braceL)) {\n            ++braceStackCounter;\n          } else if (this.match(tt.braceR)) {\n            --braceStackCounter;\n          }\n          this.next();\n        }\n        return true;\n      }\n\n      if (this.match(tt.bracketL)) {\n        let braceStackCounter = 1;\n        this.next();\n\n        while (braceStackCounter > 0) {\n          if (this.match(tt.bracketL)) {\n            ++braceStackCounter;\n          } else if (this.match(tt.bracketR)) {\n            --braceStackCounter;\n          }\n          this.next();\n        }\n        return true;\n      }\n\n      return false;\n    }\n\n    tsIsUnambiguouslyStartOfFunctionType(): boolean {\n      this.next();\n      if (this.match(tt.parenR) || this.match(tt.ellipsis)) {\n        // ( )\n        // ( ...\n        return true;\n      }\n      if (this.tsSkipParameterStart()) {\n        if (\n          this.match(tt.colon) ||\n          this.match(tt.comma) ||\n          this.match(tt.question) ||\n          this.match(tt.eq)\n        ) {\n          // ( xxx :\n          // ( xxx ,\n          // ( xxx ?\n          // ( xxx =\n          return true;\n        }\n        if (this.match(tt.parenR)) {\n          this.next();\n          if (this.match(tt.arrow)) {\n            // ( xxx ) =>\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n\n    tsParseTypeOrTypePredicateAnnotation(\n      returnToken: TokenType,\n    ): N.TsTypeAnnotation {\n      return this.tsInType(() => {\n        const t: N.TsTypeAnnotation = this.startNode();\n        this.expect(returnToken);\n\n        const node = this.startNode<N.TsTypePredicate>();\n\n        const asserts = !!this.tsTryParse(\n          this.tsParseTypePredicateAsserts.bind(this),\n        );\n\n        if (asserts && this.match(tt._this)) {\n          // When asserts is false, thisKeyword is handled by tsParseNonArrayType\n          // : asserts this is type\n          let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n          // if it turns out to be a `TSThisType`, wrap it with `TSTypePredicate`\n          // : asserts this\n          if (thisTypePredicate.type === \"TSThisType\") {\n            node.parameterName = (thisTypePredicate: N.TsThisType);\n            node.asserts = true;\n            (node: N.TsTypePredicate).typeAnnotation = null;\n            thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n          } else {\n            this.resetStartLocationFromNode(thisTypePredicate, node);\n            (thisTypePredicate: N.TsTypePredicate).asserts = true;\n          }\n          t.typeAnnotation = thisTypePredicate;\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        const typePredicateVariable =\n          this.tsIsIdentifier() &&\n          this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n        if (!typePredicateVariable) {\n          if (!asserts) {\n            // : type\n            return this.tsParseTypeAnnotation(/* eatColon */ false, t);\n          }\n\n          // : asserts foo\n          node.parameterName = this.parseIdentifier();\n          node.asserts = asserts;\n          (node: N.TsTypePredicate).typeAnnotation = null;\n          t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n          return this.finishNode(t, \"TSTypeAnnotation\");\n        }\n\n        // : asserts foo is type\n        const type = this.tsParseTypeAnnotation(/* eatColon */ false);\n        node.parameterName = typePredicateVariable;\n        node.typeAnnotation = type;\n        node.asserts = asserts;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      });\n    }\n\n    tsTryParseTypeOrTypePredicateAnnotation(): ?N.TsTypeAnnotation {\n      return this.match(tt.colon)\n        ? this.tsParseTypeOrTypePredicateAnnotation(tt.colon)\n        : undefined;\n    }\n\n    tsTryParseTypeAnnotation(): ?N.TsTypeAnnotation {\n      return this.match(tt.colon) ? this.tsParseTypeAnnotation() : undefined;\n    }\n\n    tsTryParseType(): ?N.TsType {\n      return this.tsEatThenParseType(tt.colon);\n    }\n\n    tsParseTypePredicatePrefix(): ?N.Identifier {\n      const id = this.parseIdentifier();\n      if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n        this.next();\n        return id;\n      }\n    }\n\n    tsParseTypePredicateAsserts(): boolean {\n      if (\n        !this.match(tt.name) ||\n        this.state.value !== \"asserts\" ||\n        this.hasPrecedingLineBreak()\n      ) {\n        return false;\n      }\n      const containsEsc = this.state.containsEsc;\n      this.next();\n      if (!this.match(tt.name) && !this.match(tt._this)) {\n        return false;\n      }\n\n      if (containsEsc) {\n        this.raise(\n          this.state.lastTokStart,\n          Errors.InvalidEscapedReservedWord,\n          \"asserts\",\n        );\n      }\n\n      return true;\n    }\n\n    tsParseTypeAnnotation(\n      eatColon = true,\n      t: N.TsTypeAnnotation = this.startNode(),\n    ): N.TsTypeAnnotation {\n      this.tsInType(() => {\n        if (eatColon) this.expect(tt.colon);\n        t.typeAnnotation = this.tsParseType();\n      });\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    }\n\n    /** Be sure to be in a type context before calling this, using `tsInType`. */\n    tsParseType(): N.TsType {\n      // Need to set `state.inType` so that we don't parse JSX in a type context.\n      assert(this.state.inType);\n      const type = this.tsParseNonConditionalType();\n      if (this.hasPrecedingLineBreak() || !this.eat(tt._extends)) {\n        return type;\n      }\n      const node: N.TsConditionalType = this.startNodeAtNode(type);\n      node.checkType = type;\n      node.extendsType = this.tsParseNonConditionalType();\n      this.expect(tt.question);\n      node.trueType = this.tsParseType();\n      this.expect(tt.colon);\n      node.falseType = this.tsParseType();\n      return this.finishNode(node, \"TSConditionalType\");\n    }\n\n    isAbstractConstructorSignature(): boolean {\n      return this.isContextual(\"abstract\") && this.lookahead().type === tt._new;\n    }\n\n    tsParseNonConditionalType(): N.TsType {\n      if (this.tsIsStartOfFunctionType()) {\n        return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n      }\n      if (this.match(tt._new)) {\n        // As in `new () => Date`\n        return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n      } else if (this.isAbstractConstructorSignature()) {\n        // As in `abstract new () => Date`\n        return this.tsParseFunctionOrConstructorType(\n          \"TSConstructorType\",\n          /* abstract */ true,\n        );\n      }\n      return this.tsParseUnionTypeOrHigher();\n    }\n\n    tsParseTypeAssertion(): N.TsTypeAssertion {\n      const node: N.TsTypeAssertion = this.startNode();\n      const _const = this.tsTryNextParseConstantContext();\n      node.typeAnnotation = _const || this.tsNextThenParseType();\n      this.expectRelational(\">\");\n      node.expression = this.parseMaybeUnary();\n      return this.finishNode(node, \"TSTypeAssertion\");\n    }\n\n    tsParseHeritageClause(\n      descriptor: string,\n    ): $ReadOnlyArray<N.TsExpressionWithTypeArguments> {\n      const originalStart = this.state.start;\n\n      const delimitedList = this.tsParseDelimitedList(\n        \"HeritageClauseElement\",\n        this.tsParseExpressionWithTypeArguments.bind(this),\n      );\n\n      if (!delimitedList.length) {\n        this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n      }\n\n      return delimitedList;\n    }\n\n    tsParseExpressionWithTypeArguments(): N.TsExpressionWithTypeArguments {\n      const node: N.TsExpressionWithTypeArguments = this.startNode();\n      // Note: TS uses parseLeftHandSideExpressionOrHigher,\n      // then has grammar errors later if it's not an EntityName.\n      node.expression = this.tsParseEntityName(/* allowReservedWords */ false);\n      if (this.isRelational(\"<\")) {\n        node.typeParameters = this.tsParseTypeArguments();\n      }\n\n      return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n    }\n\n    tsParseInterfaceDeclaration(\n      node: N.TsInterfaceDeclaration,\n    ): N.TsInterfaceDeclaration {\n      node.id = this.parseIdentifier();\n      this.checkLVal(\n        node.id,\n        \"typescript interface declaration\",\n        BIND_TS_INTERFACE,\n      );\n      node.typeParameters = this.tsTryParseTypeParameters();\n      if (this.eat(tt._extends)) {\n        node.extends = this.tsParseHeritageClause(\"extends\");\n      }\n      const body: N.TSInterfaceBody = this.startNode();\n      body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n      node.body = this.finishNode(body, \"TSInterfaceBody\");\n      return this.finishNode(node, \"TSInterfaceDeclaration\");\n    }\n\n    tsParseTypeAliasDeclaration(\n      node: N.TsTypeAliasDeclaration,\n    ): N.TsTypeAliasDeclaration {\n      node.id = this.parseIdentifier();\n      this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n\n      node.typeParameters = this.tsTryParseTypeParameters();\n      node.typeAnnotation = this.tsInType(() => {\n        this.expect(tt.eq);\n\n        if (\n          this.isContextual(\"intrinsic\") &&\n          this.lookahead().type !== tt.dot\n        ) {\n          const node: N.TsKeywordType = this.startNode();\n          this.next();\n          return this.finishNode(node, \"TSIntrinsicKeyword\");\n        }\n\n        return this.tsParseType();\n      });\n\n      this.semicolon();\n      return this.finishNode(node, \"TSTypeAliasDeclaration\");\n    }\n\n    tsInNoContext<T>(cb: () => T): T {\n      const oldContext = this.state.context;\n      this.state.context = [oldContext[0]];\n      try {\n        return cb();\n      } finally {\n        this.state.context = oldContext;\n      }\n    }\n\n    /**\n     * Runs `cb` in a type context.\n     * This should be called one token *before* the first type token,\n     * so that the call to `next()` is run in type context.\n     */\n    tsInType<T>(cb: () => T): T {\n      const oldInType = this.state.inType;\n      this.state.inType = true;\n      try {\n        return cb();\n      } finally {\n        this.state.inType = oldInType;\n      }\n    }\n\n    tsEatThenParseType(token: TokenType): N.TsType | typeof undefined {\n      return !this.match(token) ? undefined : this.tsNextThenParseType();\n    }\n\n    tsExpectThenParseType(token: TokenType): N.TsType {\n      return this.tsDoThenParseType(() => this.expect(token));\n    }\n\n    tsNextThenParseType(): N.TsType {\n      return this.tsDoThenParseType(() => this.next());\n    }\n\n    tsDoThenParseType(cb: () => void): N.TsType {\n      return this.tsInType(() => {\n        cb();\n        return this.tsParseType();\n      });\n    }\n\n    tsParseEnumMember(): N.TsEnumMember {\n      const node: N.TsEnumMember = this.startNode();\n      // Computed property names are grammar errors in an enum, so accept just string literal or identifier.\n      node.id = this.match(tt.string)\n        ? this.parseExprAtom()\n        : this.parseIdentifier(/* liberal */ true);\n      if (this.eat(tt.eq)) {\n        node.initializer = this.parseMaybeAssignAllowIn();\n      }\n      return this.finishNode(node, \"TSEnumMember\");\n    }\n\n    tsParseEnumDeclaration(\n      node: N.TsEnumDeclaration,\n      isConst: boolean,\n    ): N.TsEnumDeclaration {\n      if (isConst) node.const = true;\n      node.id = this.parseIdentifier();\n      this.checkLVal(\n        node.id,\n        \"typescript enum declaration\",\n        isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM,\n      );\n\n      this.expect(tt.braceL);\n      node.members = this.tsParseDelimitedList(\n        \"EnumMembers\",\n        this.tsParseEnumMember.bind(this),\n      );\n      this.expect(tt.braceR);\n      return this.finishNode(node, \"TSEnumDeclaration\");\n    }\n\n    tsParseModuleBlock(): N.TsModuleBlock {\n      const node: N.TsModuleBlock = this.startNode();\n      this.scope.enter(SCOPE_OTHER);\n\n      this.expect(tt.braceL);\n      // Inside of a module block is considered \"top-level\", meaning it can have imports and exports.\n      this.parseBlockOrModuleBlockBody(\n        (node.body = []),\n        /* directives */ undefined,\n        /* topLevel */ true,\n        /* end */ tt.braceR,\n      );\n      this.scope.exit();\n      return this.finishNode(node, \"TSModuleBlock\");\n    }\n\n    tsParseModuleOrNamespaceDeclaration(\n      node: N.TsModuleDeclaration,\n      nested?: boolean = false,\n    ): N.TsModuleDeclaration {\n      node.id = this.parseIdentifier();\n\n      if (!nested) {\n        this.checkLVal(\n          node.id,\n          \"module or namespace declaration\",\n          BIND_TS_NAMESPACE,\n        );\n      }\n\n      if (this.eat(tt.dot)) {\n        const inner = this.startNode();\n        this.tsParseModuleOrNamespaceDeclaration(inner, true);\n        node.body = inner;\n      } else {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      }\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseAmbientExternalModuleDeclaration(\n      node: N.TsModuleDeclaration,\n    ): N.TsModuleDeclaration {\n      if (this.isContextual(\"global\")) {\n        node.global = true;\n        node.id = this.parseIdentifier();\n      } else if (this.match(tt.string)) {\n        node.id = this.parseExprAtom();\n      } else {\n        this.unexpected();\n      }\n      if (this.match(tt.braceL)) {\n        this.scope.enter(SCOPE_TS_MODULE);\n        this.prodParam.enter(PARAM);\n        node.body = this.tsParseModuleBlock();\n        this.prodParam.exit();\n        this.scope.exit();\n      } else {\n        this.semicolon();\n      }\n\n      return this.finishNode(node, \"TSModuleDeclaration\");\n    }\n\n    tsParseImportEqualsDeclaration(\n      node: N.TsImportEqualsDeclaration,\n      isExport?: boolean,\n    ): N.TsImportEqualsDeclaration {\n      node.isExport = isExport || false;\n      node.id = this.parseIdentifier();\n      this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n      this.expect(tt.eq);\n      const moduleReference = this.tsParseModuleReference();\n      if (\n        node.importKind === \"type\" &&\n        moduleReference.type !== \"TSExternalModuleReference\"\n      ) {\n        this.raise(moduleReference.start, TSErrors.ImportAliasHasImportType);\n      }\n      node.moduleReference = moduleReference;\n      this.semicolon();\n      return this.finishNode(node, \"TSImportEqualsDeclaration\");\n    }\n\n    tsIsExternalModuleReference(): boolean {\n      return (\n        this.isContextual(\"require\") &&\n        this.lookaheadCharCode() === charCodes.leftParenthesis\n      );\n    }\n\n    tsParseModuleReference(): N.TsModuleReference {\n      return this.tsIsExternalModuleReference()\n        ? this.tsParseExternalModuleReference()\n        : this.tsParseEntityName(/* allowReservedWords */ false);\n    }\n\n    tsParseExternalModuleReference(): N.TsExternalModuleReference {\n      const node: N.TsExternalModuleReference = this.startNode();\n      this.expectContextual(\"require\");\n      this.expect(tt.parenL);\n      if (!this.match(tt.string)) {\n        throw this.unexpected();\n      }\n      // For compatibility to estree we cannot call parseLiteral directly here\n      node.expression = this.parseExprAtom();\n      this.expect(tt.parenR);\n      return this.finishNode(node, \"TSExternalModuleReference\");\n    }\n\n    // Utilities\n\n    tsLookAhead<T>(f: () => T): T {\n      const state = this.state.clone();\n      const res = f();\n      this.state = state;\n      return res;\n    }\n\n    tsTryParseAndCatch<T: ?N.NodeBase>(f: () => T): ?T {\n      const result = this.tryParse(abort => f() || abort());\n\n      if (result.aborted || !result.node) return undefined;\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    tsTryParse<T>(f: () => ?T): ?T {\n      const state = this.state.clone();\n      const result = f();\n      if (result !== undefined && result !== false) {\n        return result;\n      } else {\n        this.state = state;\n        return undefined;\n      }\n    }\n\n    tsTryParseDeclare(nany: any): ?N.Declaration {\n      if (this.isLineTerminator()) {\n        return;\n      }\n      let starttype = this.state.type;\n      let kind;\n\n      if (this.isContextual(\"let\")) {\n        starttype = tt._var;\n        kind = \"let\";\n      }\n\n      return this.tsInAmbientContext(() => {\n        switch (starttype) {\n          case tt._function:\n            nany.declare = true;\n            return this.parseFunctionStatement(\n              nany,\n              /* async */ false,\n              /* declarationPosition */ true,\n            );\n          case tt._class:\n            // While this is also set by tsParseExpressionStatement, we need to set it\n            // before parsing the class declaration to now how to register it in the scope.\n            nany.declare = true;\n            return this.parseClass(\n              nany,\n              /* isStatement */ true,\n              /* optionalId */ false,\n            );\n          case tt._const:\n            if (this.match(tt._const) && this.isLookaheadContextual(\"enum\")) {\n              // `const enum = 0;` not allowed because \"enum\" is a strict mode reserved word.\n              this.expect(tt._const);\n              this.expectContextual(\"enum\");\n              return this.tsParseEnumDeclaration(nany, /* isConst */ true);\n            }\n          // falls through\n          case tt._var:\n            kind = kind || this.state.value;\n            return this.parseVarStatement(nany, kind);\n          case tt.name: {\n            const value = this.state.value;\n            if (value === \"global\") {\n              return this.tsParseAmbientExternalModuleDeclaration(nany);\n            } else {\n              return this.tsParseDeclaration(nany, value, /* next */ true);\n            }\n          }\n        }\n      });\n    }\n\n    // Note: this won't be called unless the keyword is allowed in `shouldParseExportDeclaration`.\n    tsTryParseExportDeclaration(): ?N.Declaration {\n      return this.tsParseDeclaration(\n        this.startNode(),\n        this.state.value,\n        /* next */ true,\n      );\n    }\n\n    tsParseExpressionStatement(node: any, expr: N.Identifier): ?N.Declaration {\n      switch (expr.name) {\n        case \"declare\": {\n          const declaration = this.tsTryParseDeclare(node);\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n          break;\n        }\n        case \"global\":\n          // `global { }` (with no `declare`) may appear inside an ambient module declaration.\n          // Would like to use tsParseAmbientExternalModuleDeclaration here, but already ran past \"global\".\n          if (this.match(tt.braceL)) {\n            this.scope.enter(SCOPE_TS_MODULE);\n            this.prodParam.enter(PARAM);\n            const mod: N.TsModuleDeclaration = node;\n            mod.global = true;\n            mod.id = expr;\n            mod.body = this.tsParseModuleBlock();\n            this.scope.exit();\n            this.prodParam.exit();\n            return this.finishNode(mod, \"TSModuleDeclaration\");\n          }\n          break;\n\n        default:\n          return this.tsParseDeclaration(node, expr.name, /* next */ false);\n      }\n    }\n\n    // Common to tsTryParseDeclare, tsTryParseExportDeclaration, and tsParseExpressionStatement.\n    tsParseDeclaration(\n      node: any,\n      value: string,\n      next: boolean,\n    ): ?N.Declaration {\n      // no declaration apart from enum can be followed by a line break.\n      switch (value) {\n        case \"abstract\":\n          if (\n            this.tsCheckLineTerminator(next) &&\n            (this.match(tt._class) || this.match(tt.name))\n          ) {\n            return this.tsParseAbstractDeclaration(node);\n          }\n          break;\n\n        case \"enum\":\n          if (next || this.match(tt.name)) {\n            if (next) this.next();\n            return this.tsParseEnumDeclaration(node, /* isConst */ false);\n          }\n          break;\n\n        case \"interface\":\n          if (this.tsCheckLineTerminator(next) && this.match(tt.name)) {\n            return this.tsParseInterfaceDeclaration(node);\n          }\n          break;\n\n        case \"module\":\n          if (this.tsCheckLineTerminator(next)) {\n            if (this.match(tt.string)) {\n              return this.tsParseAmbientExternalModuleDeclaration(node);\n            } else if (this.match(tt.name)) {\n              return this.tsParseModuleOrNamespaceDeclaration(node);\n            }\n          }\n          break;\n\n        case \"namespace\":\n          if (this.tsCheckLineTerminator(next) && this.match(tt.name)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n          break;\n\n        case \"type\":\n          if (this.tsCheckLineTerminator(next) && this.match(tt.name)) {\n            return this.tsParseTypeAliasDeclaration(node);\n          }\n          break;\n      }\n    }\n\n    tsCheckLineTerminator(next: boolean) {\n      if (next) {\n        if (this.hasFollowingLineBreak()) return false;\n        this.next();\n        return true;\n      }\n      return !this.isLineTerminator();\n    }\n\n    tsTryParseGenericAsyncArrowFunction(\n      startPos: number,\n      startLoc: Position,\n    ): ?N.ArrowFunctionExpression {\n      if (!this.isRelational(\"<\")) {\n        return undefined;\n      }\n\n      const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n      this.state.maybeInArrowParameters = true;\n\n      const res: ?N.ArrowFunctionExpression = this.tsTryParseAndCatch(() => {\n        const node: N.ArrowFunctionExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        node.typeParameters = this.tsParseTypeParameters();\n        // Don't use overloaded parseFunctionParams which would look for \"<\" again.\n        super.parseFunctionParams(node);\n        node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n        this.expect(tt.arrow);\n        return node;\n      });\n\n      this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n      if (!res) {\n        return undefined;\n      }\n\n      return this.parseArrowExpression(\n        res,\n        /* params are already set */ null,\n        /* async */ true,\n      );\n    }\n\n    tsParseTypeArguments(): N.TsTypeParameterInstantiation {\n      const node = this.startNode();\n      node.params = this.tsInType(() =>\n        // Temporarily remove a JSX parsing context, which makes us scan different tokens.\n        this.tsInNoContext(() => {\n          this.expectRelational(\"<\");\n          return this.tsParseDelimitedList(\n            \"TypeParametersOrArguments\",\n            this.tsParseType.bind(this),\n          );\n        }),\n      );\n      if (node.params.length === 0) {\n        this.raise(node.start, TSErrors.EmptyTypeArguments);\n      }\n      this.expectRelational(\">\");\n      return this.finishNode(node, \"TSTypeParameterInstantiation\");\n    }\n\n    tsIsDeclarationStart(): boolean {\n      if (this.match(tt.name)) {\n        switch (this.state.value) {\n          case \"abstract\":\n          case \"declare\":\n          case \"enum\":\n          case \"interface\":\n          case \"module\":\n          case \"namespace\":\n          case \"type\":\n            return true;\n        }\n      }\n\n      return false;\n    }\n\n    // ======================================================\n    // OVERRIDES\n    // ======================================================\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.tsIsDeclarationStart()) return false;\n      return super.isExportDefaultSpecifier();\n    }\n\n    parseAssignableListItem(\n      allowModifiers: ?boolean,\n      decorators: N.Decorator[],\n    ): N.Pattern | N.TSParameterProperty {\n      // Store original location/position to include modifiers in range\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n\n      let accessibility: ?N.Accessibility;\n      let readonly = false;\n      let override = false;\n      if (allowModifiers !== undefined) {\n        const modified = {};\n        this.tsParseModifiers(modified, [\n          \"public\",\n          \"private\",\n          \"protected\",\n          \"override\",\n          \"readonly\",\n        ]);\n        accessibility = modified.accessibility;\n        override = modified.override;\n        readonly = modified.readonly;\n        if (\n          allowModifiers === false &&\n          (accessibility || readonly || override)\n        ) {\n          this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n        }\n      }\n\n      const left = this.parseMaybeDefault();\n      this.parseAssignableListItemTypes(left);\n      const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n      if (accessibility || readonly || override) {\n        const pp: N.TSParameterProperty = this.startNodeAt(startPos, startLoc);\n        if (decorators.length) {\n          pp.decorators = decorators;\n        }\n        if (accessibility) pp.accessibility = accessibility;\n        if (readonly) pp.readonly = readonly;\n        if (override) pp.override = override;\n        if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n          this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n        }\n        pp.parameter = ((elt: any): N.Identifier | N.AssignmentPattern);\n        return this.finishNode(pp, \"TSParameterProperty\");\n      }\n\n      if (decorators.length) {\n        left.decorators = decorators;\n      }\n\n      return elt;\n    }\n\n    parseFunctionBodyAndFinish(\n      node: N.BodilessFunctionOrMethodBase,\n      type: string,\n      isMethod?: boolean = false,\n    ): void {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeOrTypePredicateAnnotation(tt.colon);\n      }\n\n      const bodilessType =\n        type === \"FunctionDeclaration\"\n          ? \"TSDeclareFunction\"\n          : type === \"ClassMethod\"\n          ? \"TSDeclareMethod\"\n          : undefined;\n      if (bodilessType && !this.match(tt.braceL) && this.isLineTerminator()) {\n        this.finishNode(node, bodilessType);\n        return;\n      }\n      if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n        this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n        if (\n          // $FlowIgnore\n          node.declare\n        ) {\n          super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n          return;\n        }\n      }\n\n      super.parseFunctionBodyAndFinish(node, type, isMethod);\n    }\n\n    registerFunctionStatementId(node: N.Function): void {\n      if (!node.body && node.id) {\n        // Function ids are validated after parsing their body.\n        // For bodyless function, we need to do it here.\n        this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n      } else {\n        super.registerFunctionStatementId(...arguments);\n      }\n    }\n\n    tsCheckForInvalidTypeCasts(items: $ReadOnlyArray<?N.Expression>) {\n      items.forEach(node => {\n        if (node?.type === \"TSTypeCastExpression\") {\n          this.raise(\n            node.typeAnnotation.start,\n            TSErrors.UnexpectedTypeAnnotation,\n          );\n        }\n      });\n    }\n\n    toReferencedList(\n      exprList: $ReadOnlyArray<?N.Expression>,\n      isInParens?: boolean, // eslint-disable-line no-unused-vars\n    ): $ReadOnlyArray<?N.Expression> {\n      // Handles invalid scenarios like: `f(a:b)`, `(a:b);`, and `(a:b,c:d)`.\n      //\n      // Note that `f<T>(a:b)` goes through a different path and is handled\n      // in `parseSubscript` directly.\n      this.tsCheckForInvalidTypeCasts(exprList);\n      return exprList;\n    }\n\n    parseArrayLike(...args): N.ArrayExpression | N.TupleExpression {\n      const node = super.parseArrayLike(...args);\n\n      if (node.type === \"ArrayExpression\") {\n        this.tsCheckForInvalidTypeCasts(node.elements);\n      }\n\n      return node;\n    }\n\n    parseSubscript(\n      base: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      noCalls: ?boolean,\n      state: N.ParseSubscriptState,\n    ): N.Expression {\n      if (!this.hasPrecedingLineBreak() && this.match(tt.bang)) {\n        // When ! is consumed as a postfix operator (non-null assertion),\n        // disallow JSX tag forming after. e.g. When parsing `p! < n.p!`\n        // `<n.p` can not be a start of JSX tag\n        this.state.exprAllowed = false;\n        this.next();\n\n        const nonNullExpression: N.TsNonNullExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        nonNullExpression.expression = base;\n        return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n      }\n\n      if (this.isRelational(\"<\")) {\n        // tsTryParseAndCatch is expensive, so avoid if not necessary.\n        // There are number of things we are going to \"maybe\" parse, like type arguments on\n        // tagged template expressions. If any of them fail, walk it back and continue.\n        const result = this.tsTryParseAndCatch(() => {\n          if (!noCalls && this.atPossibleAsyncArrow(base)) {\n            // Almost certainly this is a generic async function `async <T>() => ...\n            // But it might be a call with a type argument `async<T>();`\n            const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(\n              startPos,\n              startLoc,\n            );\n            if (asyncArrowFn) {\n              return asyncArrowFn;\n            }\n          }\n\n          const node: N.CallExpression = this.startNodeAt(startPos, startLoc);\n          node.callee = base;\n\n          const typeArguments = this.tsParseTypeArguments();\n\n          if (typeArguments) {\n            if (!noCalls && this.eat(tt.parenL)) {\n              // possibleAsync always false here, because we would have handled it above.\n              // $FlowIgnore (won't be any undefined arguments)\n              node.arguments = this.parseCallExpressionArguments(\n                tt.parenR,\n                /* possibleAsync */ false,\n              );\n\n              // Handles invalid case: `f<T>(a:b)`\n              this.tsCheckForInvalidTypeCasts(node.arguments);\n\n              node.typeParameters = typeArguments;\n              if (state.optionalChainMember) {\n                // $FlowIgnore\n                node.optional = false;\n              }\n              return this.finishCallExpression(node, state.optionalChainMember);\n            } else if (this.match(tt.backQuote)) {\n              const result = this.parseTaggedTemplateExpression(\n                base,\n                startPos,\n                startLoc,\n                state,\n              );\n              result.typeParameters = typeArguments;\n              return result;\n            }\n          }\n\n          this.unexpected();\n        });\n\n        if (result) return result;\n      }\n\n      return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n    }\n\n    parseNewArguments(node: N.NewExpression): void {\n      if (this.isRelational(\"<\")) {\n        // tsTryParseAndCatch is expensive, so avoid if not necessary.\n        // 99% certain this is `new C<T>();`. But may be `new C < T;`, which is also legal.\n        const typeParameters = this.tsTryParseAndCatch(() => {\n          const args = this.tsParseTypeArguments();\n          if (!this.match(tt.parenL)) this.unexpected();\n          return args;\n        });\n        if (typeParameters) {\n          node.typeParameters = typeParameters;\n        }\n      }\n\n      super.parseNewArguments(node);\n    }\n\n    parseExprOp(\n      left: N.Expression,\n      leftStartPos: number,\n      leftStartLoc: Position,\n      minPrec: number,\n    ) {\n      if (\n        nonNull(tt._in.binop) > minPrec &&\n        !this.hasPrecedingLineBreak() &&\n        this.isContextual(\"as\")\n      ) {\n        const node: N.TsAsExpression = this.startNodeAt(\n          leftStartPos,\n          leftStartLoc,\n        );\n        node.expression = left;\n        const _const = this.tsTryNextParseConstantContext();\n        if (_const) {\n          node.typeAnnotation = _const;\n        } else {\n          node.typeAnnotation = this.tsNextThenParseType();\n        }\n        this.finishNode(node, \"TSAsExpression\");\n        // rescan `<`, `>` because they were scanned when this.state.inType was true\n        this.reScan_lt_gt();\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n\n      return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    checkReservedWord(\n      word: string, // eslint-disable-line no-unused-vars\n      startLoc: number, // eslint-disable-line no-unused-vars\n      checkKeywords: boolean, // eslint-disable-line no-unused-vars\n      // eslint-disable-next-line no-unused-vars\n      isBinding: boolean,\n    ): void {\n      // Don't bother checking for TypeScript code.\n      // Strict mode words may be allowed as in `declare namespace N { const static: number; }`.\n      // And we have a type checker anyway, so don't bother having the parser do it.\n    }\n\n    /*\n    Don't bother doing this check in TypeScript code because:\n    1. We may have a nested export statement with the same name:\n      export const x = 0;\n      export namespace N {\n        export const x = 1;\n      }\n    2. We have a type checker to warn us about this sort of thing.\n    */\n    checkDuplicateExports() {}\n\n    parseImport(node: N.Node): N.AnyImport {\n      node.importKind = \"value\";\n      if (this.match(tt.name) || this.match(tt.star) || this.match(tt.braceL)) {\n        let ahead = this.lookahead();\n\n        if (\n          this.isContextual(\"type\") &&\n          // import type, { a } from \"b\";\n          ahead.type !== tt.comma &&\n          // import type from \"a\";\n          !(ahead.type === tt.name && ahead.value === \"from\") &&\n          // import type = require(\"a\");\n          ahead.type !== tt.eq\n        ) {\n          node.importKind = \"type\";\n          this.next();\n          ahead = this.lookahead();\n        }\n\n        if (this.match(tt.name) && ahead.type === tt.eq) {\n          return this.tsParseImportEqualsDeclaration(node);\n        }\n      }\n\n      const importNode = super.parseImport(node);\n      /*:: invariant(importNode.type !== \"TSImportEqualsDeclaration\") */\n\n      // `import type` can only be used on imports with named imports or with a\n      // default import - but not both\n      if (\n        importNode.importKind === \"type\" &&\n        importNode.specifiers.length > 1 &&\n        importNode.specifiers[0].type === \"ImportDefaultSpecifier\"\n      ) {\n        this.raise(\n          importNode.start,\n          TSErrors.TypeImportCannotSpecifyDefaultAndNamed,\n        );\n      }\n\n      return importNode;\n    }\n\n    parseExport(node: N.Node): N.AnyExport {\n      if (this.match(tt._import)) {\n        // `export import A = B;`\n        this.next(); // eat `tt._import`\n        if (\n          this.isContextual(\"type\") &&\n          this.lookaheadCharCode() !== charCodes.equalsTo\n        ) {\n          node.importKind = \"type\";\n          this.next(); // eat \"type\"\n        } else {\n          node.importKind = \"value\";\n        }\n        return this.tsParseImportEqualsDeclaration(node, /* isExport */ true);\n      } else if (this.eat(tt.eq)) {\n        // `export = x;`\n        const assign: N.TsExportAssignment = node;\n        assign.expression = this.parseExpression();\n        this.semicolon();\n        return this.finishNode(assign, \"TSExportAssignment\");\n      } else if (this.eatContextual(\"as\")) {\n        // `export as namespace A;`\n        const decl: N.TsNamespaceExportDeclaration = node;\n        // See `parseNamespaceExportDeclaration` in TypeScript's own parser\n        this.expectContextual(\"namespace\");\n        decl.id = this.parseIdentifier();\n        this.semicolon();\n        return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n      } else {\n        if (this.isContextual(\"type\") && this.lookahead().type === tt.braceL) {\n          this.next();\n          node.exportKind = \"type\";\n        } else {\n          node.exportKind = \"value\";\n        }\n\n        return super.parseExport(node);\n      }\n    }\n\n    isAbstractClass(): boolean {\n      return (\n        this.isContextual(\"abstract\") && this.lookahead().type === tt._class\n      );\n    }\n\n    parseExportDefaultExpression(): N.Expression | N.Declaration {\n      if (this.isAbstractClass()) {\n        const cls = this.startNode();\n        this.next(); // Skip \"abstract\"\n        cls.abstract = true;\n        this.parseClass(cls, true, true);\n        return cls;\n      }\n\n      // export default interface allowed in:\n      // https://github.com/Microsoft/TypeScript/pull/16040\n      if (this.state.value === \"interface\") {\n        const result = this.tsParseDeclaration(\n          this.startNode(),\n          this.state.value,\n          true,\n        );\n\n        if (result) return result;\n      }\n\n      return super.parseExportDefaultExpression();\n    }\n\n    parseStatementContent(context: ?string, topLevel: ?boolean): N.Statement {\n      if (this.state.type === tt._const) {\n        const ahead = this.lookahead();\n        if (ahead.type === tt.name && ahead.value === \"enum\") {\n          const node: N.TsEnumDeclaration = this.startNode();\n          this.expect(tt._const);\n          this.expectContextual(\"enum\");\n          return this.tsParseEnumDeclaration(node, /* isConst */ true);\n        }\n      }\n      return super.parseStatementContent(context, topLevel);\n    }\n\n    parseAccessModifier(): ?N.Accessibility {\n      return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n    }\n\n    tsHasSomeModifiers(member: any, modifiers: TsModifier[]): boolean {\n      return modifiers.some(modifier => {\n        if (tsIsAccessModifier(modifier)) {\n          return member.accessibility === modifier;\n        }\n        return !!member[modifier];\n      });\n    }\n\n    parseClassMember(\n      classBody: N.ClassBody,\n      member: any,\n      state: N.ParseClassMemberState,\n    ): void {\n      const invalidModifersForStaticBlocks = [\n        \"declare\",\n        \"private\",\n        \"public\",\n        \"protected\",\n        \"override\",\n        \"abstract\",\n        \"readonly\",\n      ];\n      this.tsParseModifiers(\n        member,\n        invalidModifersForStaticBlocks.concat([\"static\"]),\n      );\n\n      const callParseClassMemberWithIsStatic = () => {\n        const isStatic = !!member.static;\n        if (isStatic && this.eat(tt.braceL)) {\n          if (this.tsHasSomeModifiers(member, invalidModifersForStaticBlocks)) {\n            this.raise(this.state.pos, TSErrors.StaticBlockCannotHaveModifier);\n          }\n          this.parseClassStaticBlock(classBody, ((member: any): N.StaticBlock));\n        } else {\n          this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n        }\n      };\n      if (member.declare) {\n        this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n      } else {\n        callParseClassMemberWithIsStatic();\n      }\n    }\n\n    parseClassMemberWithIsStatic(\n      classBody: N.ClassBody,\n      member: N.ClassMember | N.TsIndexSignature,\n      state: N.ParseClassMemberState,\n      isStatic: boolean,\n    ): void {\n      const idx = this.tsTryParseIndexSignature(member);\n      if (idx) {\n        classBody.body.push(idx);\n\n        if ((member: any).abstract) {\n          this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n        }\n        if ((member: any).accessibility) {\n          this.raise(\n            member.start,\n            TSErrors.IndexSignatureHasAccessibility,\n            (member: any).accessibility,\n          );\n        }\n        if ((member: any).declare) {\n          this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n        }\n        if ((member: any).override) {\n          this.raise(member.start, TSErrors.IndexSignatureHasOverride);\n        }\n\n        return;\n      }\n\n      if (!this.state.inAbstractClass && (member: any).abstract) {\n        this.raise(member.start, TSErrors.NonAbstractClassHasAbstractMethod);\n      }\n\n      if ((member: any).override) {\n        if (!state.hadSuperClass) {\n          this.raise(member.start, TSErrors.OverrideNotInSubClass);\n        }\n      }\n\n      /*:: invariant(member.type !== \"TSIndexSignature\") */\n\n      super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n    }\n\n    parsePostMemberNameModifiers(\n      methodOrProp: N.ClassMethod | N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      const optional = this.eat(tt.question);\n      if (optional) methodOrProp.optional = true;\n\n      if ((methodOrProp: any).readonly && this.match(tt.parenL)) {\n        this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n      }\n\n      if ((methodOrProp: any).declare && this.match(tt.parenL)) {\n        this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n      }\n    }\n\n    // Note: The reason we do this in `parseExpressionStatement` and not `parseStatement`\n    // is that e.g. `type()` is valid JS, so we must try parsing that first.\n    // If it's really a type, we will parse `type` as the statement, and can correct it here\n    // by parsing the rest.\n    parseExpressionStatement(\n      node: N.ExpressionStatement,\n      expr: N.Expression,\n    ): N.Statement {\n      const decl =\n        expr.type === \"Identifier\"\n          ? this.tsParseExpressionStatement(node, expr)\n          : undefined;\n      return decl || super.parseExpressionStatement(node, expr);\n    }\n\n    // export type\n    // Should be true for anything parsed by `tsTryParseExportDeclaration`.\n    shouldParseExportDeclaration(): boolean {\n      if (this.tsIsDeclarationStart()) return true;\n      return super.shouldParseExportDeclaration();\n    }\n\n    // An apparent conditional expression could actually be an optional parameter in an arrow function.\n    parseConditional(\n      expr: N.Expression,\n      startPos: number,\n      startLoc: Position,\n      refExpressionErrors?: ?ExpressionErrors,\n    ): N.Expression {\n      // only do the expensive clone if there is a question mark\n      // and if we come from inside parens\n      if (!this.state.maybeInArrowParameters || !this.match(tt.question)) {\n        return super.parseConditional(\n          expr,\n          startPos,\n          startLoc,\n          refExpressionErrors,\n        );\n      }\n\n      const result = this.tryParse(() =>\n        super.parseConditional(expr, startPos, startLoc),\n      );\n\n      if (!result.node) {\n        if (result.error) {\n          /*:: invariant(refExpressionErrors != null) */\n          super.setOptionalParametersError(refExpressionErrors, result.error);\n        }\n\n        return expr;\n      }\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    // Note: These \"type casts\" are *not* valid TS expressions.\n    // But we parse them here and change them when completing the arrow function.\n    parseParenItem(\n      node: N.Expression,\n      startPos: number,\n      startLoc: Position,\n    ): N.Expression {\n      node = super.parseParenItem(node, startPos, startLoc);\n      if (this.eat(tt.question)) {\n        node.optional = true;\n        // Include questionmark in location of node\n        // Don't use this.finishNode() as otherwise we might process comments twice and\n        // include already consumed parens\n        this.resetEndLocation(node);\n      }\n\n      if (this.match(tt.colon)) {\n        const typeCastNode: N.TsTypeCastExpression = this.startNodeAt(\n          startPos,\n          startLoc,\n        );\n        typeCastNode.expression = node;\n        typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n\n        return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n      }\n\n      return node;\n    }\n\n    parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n      // Store original location/position\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n\n      // \"export declare\" is equivalent to just \"export\".\n      const isDeclare = this.eatContextual(\"declare\");\n\n      if (\n        isDeclare &&\n        (this.isContextual(\"declare\") || !this.shouldParseExportDeclaration())\n      ) {\n        throw this.raise(\n          this.state.start,\n          TSErrors.ExpectedAmbientAfterExportDeclare,\n        );\n      }\n\n      let declaration: ?N.Declaration;\n\n      if (this.match(tt.name)) {\n        declaration = this.tsTryParseExportDeclaration();\n      }\n      if (!declaration) {\n        declaration = super.parseExportDeclaration(node);\n      }\n      if (\n        declaration &&\n        (declaration.type === \"TSInterfaceDeclaration\" ||\n          declaration.type === \"TSTypeAliasDeclaration\" ||\n          isDeclare)\n      ) {\n        node.exportKind = \"type\";\n      }\n\n      if (declaration && isDeclare) {\n        // Reset location to include `declare` in range\n        this.resetStartLocation(declaration, startPos, startLoc);\n\n        declaration.declare = true;\n      }\n\n      return declaration;\n    }\n\n    parseClassId(\n      node: N.Class,\n      isStatement: boolean,\n      optionalId: ?boolean,\n    ): void {\n      if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n        return;\n      }\n\n      super.parseClassId(\n        node,\n        isStatement,\n        optionalId,\n        (node: any).declare ? BIND_TS_AMBIENT : BIND_CLASS,\n      );\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) node.typeParameters = typeParameters;\n    }\n\n    parseClassPropertyAnnotation(\n      node: N.ClassProperty | N.ClassPrivateProperty,\n    ): void {\n      if (!node.optional && this.eat(tt.bang)) {\n        node.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) node.typeAnnotation = type;\n    }\n\n    parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n      this.parseClassPropertyAnnotation(node);\n\n      if (this.state.isAmbientContext && this.match(tt.eq)) {\n        this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n      }\n\n      return super.parseClassProperty(node);\n    }\n\n    parseClassPrivateProperty(\n      node: N.ClassPrivateProperty,\n    ): N.ClassPrivateProperty {\n      // $FlowIgnore\n      if (node.abstract) {\n        this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n      }\n\n      // $FlowIgnore\n      if (node.accessibility) {\n        this.raise(\n          node.start,\n          TSErrors.PrivateElementHasAccessibility,\n          node.accessibility,\n        );\n      }\n\n      this.parseClassPropertyAnnotation(node);\n      return super.parseClassPrivateProperty(node);\n    }\n\n    pushClassMethod(\n      classBody: N.ClassBody,\n      method: N.ClassMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n      isConstructor: boolean,\n      allowsDirectSuper: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters && isConstructor) {\n        this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n      }\n\n      // $FlowIgnore\n      if (method.declare && (method.kind === \"get\" || method.kind === \"set\")) {\n        this.raise(method.start, TSErrors.DeclareAccessor, method.kind);\n      }\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassMethod(\n        classBody,\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    }\n\n    pushClassPrivateMethod(\n      classBody: N.ClassBody,\n      method: N.ClassPrivateMethod,\n      isGenerator: boolean,\n      isAsync: boolean,\n    ): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) method.typeParameters = typeParameters;\n      super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n    }\n\n    parseClassSuper(node: N.Class): void {\n      super.parseClassSuper(node);\n      if (node.superClass && this.isRelational(\"<\")) {\n        node.superTypeParameters = this.tsParseTypeArguments();\n      }\n      if (this.eatContextual(\"implements\")) {\n        node.implements = this.tsParseHeritageClause(\"implements\");\n      }\n    }\n\n    parseObjPropValue(prop: N.ObjectMember, ...args): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) prop.typeParameters = typeParameters;\n\n      super.parseObjPropValue(prop, ...args);\n    }\n\n    parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n      const typeParameters = this.tsTryParseTypeParameters();\n      if (typeParameters) node.typeParameters = typeParameters;\n      super.parseFunctionParams(node, allowModifiers);\n    }\n\n    // `let x: number;`\n    parseVarId(\n      decl: N.VariableDeclarator,\n      kind: \"var\" | \"let\" | \"const\",\n    ): void {\n      super.parseVarId(decl, kind);\n      if (decl.id.type === \"Identifier\" && this.eat(tt.bang)) {\n        decl.definite = true;\n      }\n\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) {\n        decl.id.typeAnnotation = type;\n        this.resetEndLocation(decl.id); // set end position to end of type\n      }\n    }\n\n    // parse the return type of an async arrow function - let foo = (async (): number => {});\n    parseAsyncArrowFromCallExpression(\n      node: N.ArrowFunctionExpression,\n      call: N.CallExpression,\n    ): N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        node.returnType = this.tsParseTypeAnnotation();\n      }\n      return super.parseAsyncArrowFromCallExpression(node, call);\n    }\n\n    parseMaybeAssign(...args): N.Expression {\n      // Note: When the JSX plugin is on, type assertions (`<T> x`) aren't valid syntax.\n\n      let state: ?State;\n      let jsx;\n      let typeCast;\n\n      if (\n        this.hasPlugin(\"jsx\") &&\n        (this.match(tt.jsxTagStart) || this.isRelational(\"<\"))\n      ) {\n        // Prefer to parse JSX if possible. But may be an arrow fn.\n        state = this.state.clone();\n\n        jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n\n        /*:: invariant(!jsx.aborted) */\n        /*:: invariant(jsx.node != null) */\n        if (!jsx.error) return jsx.node;\n\n        // Remove `tc.j_expr` and `tc.j_oTag` from context added\n        // by parsing `jsxTagStart` to stop the JSX plugin from\n        // messing with the tokens\n        const { context } = this.state;\n        if (context[context.length - 1] === ct.j_oTag) {\n          context.length -= 2;\n        } else if (context[context.length - 1] === ct.j_expr) {\n          context.length -= 1;\n        }\n      }\n\n      if (!jsx?.error && !this.isRelational(\"<\")) {\n        return super.parseMaybeAssign(...args);\n      }\n\n      // Either way, we're looking at a '<': tt.jsxTagStart or relational.\n\n      let typeParameters: N.TsTypeParameterDeclaration;\n      state = state || this.state.clone();\n\n      const arrow = this.tryParse(abort => {\n        // This is similar to TypeScript's `tryParseParenthesizedArrowFunctionExpression`.\n        typeParameters = this.tsParseTypeParameters();\n        const expr = super.parseMaybeAssign(...args);\n\n        if (\n          expr.type !== \"ArrowFunctionExpression\" ||\n          expr.extra?.parenthesized\n        ) {\n          abort();\n        }\n\n        // Correct TypeScript code should have at least 1 type parameter, but don't crash on bad code.\n        if (typeParameters?.params.length !== 0) {\n          this.resetStartLocationFromNode(expr, typeParameters);\n        }\n        expr.typeParameters = typeParameters;\n        return expr;\n      }, state);\n\n      /*:: invariant(arrow.node != null) */\n      if (!arrow.error && !arrow.aborted) return arrow.node;\n\n      if (!jsx) {\n        // Try parsing a type cast instead of an arrow function.\n        // This will never happen outside of JSX.\n        // (Because in JSX the '<' should be a jsxTagStart and not a relational.\n        assert(!this.hasPlugin(\"jsx\"));\n\n        // This will start with a type assertion (via parseMaybeUnary).\n        // But don't directly call `this.tsParseTypeAssertion` because we want to handle any binary after it.\n        typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n        /*:: invariant(!typeCast.aborted) */\n        /*:: invariant(typeCast.node != null) */\n        if (!typeCast.error) return typeCast.node;\n      }\n\n      if (jsx?.node) {\n        /*:: invariant(jsx.failState) */\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrow.node) {\n        /*:: invariant(arrow.failState) */\n        this.state = arrow.failState;\n        return arrow.node;\n      }\n\n      if (typeCast?.node) {\n        /*:: invariant(typeCast.failState) */\n        this.state = typeCast.failState;\n        return typeCast.node;\n      }\n\n      if (jsx?.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      if (typeCast?.thrown) throw typeCast.error;\n\n      throw jsx?.error || arrow.error || typeCast?.error;\n    }\n\n    // Handle type assertions\n    parseMaybeUnary(refExpressionErrors?: ?ExpressionErrors): N.Expression {\n      if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n        return this.tsParseTypeAssertion();\n      } else {\n        return super.parseMaybeUnary(refExpressionErrors);\n      }\n    }\n\n    parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n      if (this.match(tt.colon)) {\n        // This is different from how the TS parser does it.\n        // TS uses lookahead. The Babel Parser parses it as a parenthesized expression and converts.\n\n        const result = this.tryParse(abort => {\n          const returnType = this.tsParseTypeOrTypePredicateAnnotation(\n            tt.colon,\n          );\n          if (this.canInsertSemicolon() || !this.match(tt.arrow)) abort();\n          return returnType;\n        });\n\n        if (result.aborted) return;\n\n        if (!result.thrown) {\n          if (result.error) this.state = result.failState;\n          node.returnType = result.node;\n        }\n      }\n\n      return super.parseArrow(node);\n    }\n\n    // Allow type annotations inside of a parameter list.\n    parseAssignableListItemTypes(param: N.Pattern) {\n      if (this.eat(tt.question)) {\n        if (\n          param.type !== \"Identifier\" &&\n          !this.state.isAmbientContext &&\n          !this.state.inType\n        ) {\n          this.raise(param.start, TSErrors.PatternIsOptional);\n        }\n\n        ((param: any): N.Identifier).optional = true;\n      }\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) param.typeAnnotation = type;\n      this.resetEndLocation(param);\n\n      return param;\n    }\n\n    toAssignable(node: N.Node, isLHS: boolean = false): N.Node {\n      switch (node.type) {\n        case \"TSTypeCastExpression\":\n          return super.toAssignable(this.typeCastToParameter(node), isLHS);\n        case \"TSParameterProperty\":\n          return super.toAssignable(node, isLHS);\n        case \"ParenthesizedExpression\":\n          return this.toAssignableParenthesizedExpression(node, isLHS);\n        case \"TSAsExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n          node.expression = this.toAssignable(node.expression, isLHS);\n          return node;\n        default:\n          return super.toAssignable(node, isLHS);\n      }\n    }\n\n    toAssignableParenthesizedExpression(node: N.Node, isLHS: boolean) {\n      switch (node.expression.type) {\n        case \"TSAsExpression\":\n        case \"TSNonNullExpression\":\n        case \"TSTypeAssertion\":\n        case \"ParenthesizedExpression\":\n          node.expression = this.toAssignable(node.expression, isLHS);\n          return node;\n        default:\n          return super.toAssignable(node, isLHS);\n      }\n    }\n\n    checkLVal(\n      expr: N.Expression,\n      contextDescription: string,\n      ...args:\n        | [BindingTypes | void]\n        | [BindingTypes | void, ?Set<string>, boolean | void, boolean | void]\n    ): void {\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          // Allow \"typecasts\" to appear on the left of assignment expressions,\n          // because it may be in an arrow function.\n          // e.g. `const f = (foo: number = 0) => foo;`\n          return;\n        case \"TSParameterProperty\":\n          this.checkLVal(expr.parameter, \"parameter property\", ...args);\n          return;\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n          if (\n            /*bindingType*/ !args[0] &&\n            contextDescription !== \"parenthesized expression\" &&\n            !expr.extra?.parenthesized\n          ) {\n            this.raise(expr.start, Errors.InvalidLhs, contextDescription);\n            break;\n          }\n          this.checkLVal(expr.expression, \"parenthesized expression\", ...args);\n          return;\n        case \"TSNonNullExpression\":\n          this.checkLVal(expr.expression, contextDescription, ...args);\n          return;\n        default:\n          super.checkLVal(expr, contextDescription, ...args);\n          return;\n      }\n    }\n\n    parseBindingAtom(): N.Pattern {\n      switch (this.state.type) {\n        case tt._this:\n          // \"this\" may be the name of a parameter, so allow it.\n          return this.parseIdentifier(/* liberal */ true);\n        default:\n          return super.parseBindingAtom();\n      }\n    }\n\n    parseMaybeDecoratorArguments(expr: N.Expression): N.Expression {\n      if (this.isRelational(\"<\")) {\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (this.match(tt.parenL)) {\n          const call = super.parseMaybeDecoratorArguments(expr);\n          call.typeParameters = typeArguments;\n          return call;\n        }\n\n        this.unexpected(this.state.start, tt.parenL);\n      }\n\n      return super.parseMaybeDecoratorArguments(expr);\n    }\n\n    checkCommaAfterRest(close) {\n      if (\n        this.state.isAmbientContext &&\n        this.match(tt.comma) &&\n        this.lookaheadCharCode() === close\n      ) {\n        this.next();\n      } else {\n        super.checkCommaAfterRest(close);\n      }\n    }\n\n    // === === === === === === === === === === === === === === === ===\n    // Note: All below methods are duplicates of something in flow.js.\n    // Not sure what the best way to combine these is.\n    // === === === === === === === === === === === === === === === ===\n\n    isClassMethod(): boolean {\n      return this.isRelational(\"<\") || super.isClassMethod();\n    }\n\n    isClassProperty(): boolean {\n      return (\n        this.match(tt.bang) || this.match(tt.colon) || super.isClassProperty()\n      );\n    }\n\n    parseMaybeDefault(...args): N.Pattern {\n      const node = super.parseMaybeDefault(...args);\n\n      if (\n        node.type === \"AssignmentPattern\" &&\n        node.typeAnnotation &&\n        node.right.start < node.typeAnnotation.start\n      ) {\n        this.raise(\n          node.typeAnnotation.start,\n          TSErrors.TypeAnnotationAfterAssign,\n        );\n      }\n\n      return node;\n    }\n\n    // ensure that inside types, we bypass the jsx parser plugin\n    getTokenFromCode(code: number): void {\n      if (\n        this.state.inType &&\n        (code === charCodes.greaterThan || code === charCodes.lessThan)\n      ) {\n        return this.finishOp(tt.relational, 1);\n      } else {\n        return super.getTokenFromCode(code);\n      }\n    }\n\n    // used after we have finished parsing types\n    reScan_lt_gt() {\n      if (this.match(tt.relational)) {\n        const code = this.input.charCodeAt(this.state.start);\n        if (code === charCodes.lessThan || code === charCodes.greaterThan) {\n          this.state.pos -= 1;\n          this.readToken_lt_gt(code);\n        }\n      }\n    }\n\n    toAssignableList(exprList: N.Expression[]): $ReadOnlyArray<N.Pattern> {\n      for (let i = 0; i < exprList.length; i++) {\n        const expr = exprList[i];\n        if (!expr) continue;\n        switch (expr.type) {\n          case \"TSTypeCastExpression\":\n            exprList[i] = this.typeCastToParameter(expr);\n            break;\n          case \"TSAsExpression\":\n          case \"TSTypeAssertion\":\n            if (!this.state.maybeInArrowParameters) {\n              exprList[i] = this.typeCastToParameter(expr);\n            } else {\n              this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n            }\n            break;\n        }\n      }\n      return super.toAssignableList(...arguments);\n    }\n\n    typeCastToParameter(node: N.TsTypeCastExpression): N.Node {\n      node.expression.typeAnnotation = node.typeAnnotation;\n\n      this.resetEndLocation(\n        node.expression,\n        node.typeAnnotation.end,\n        node.typeAnnotation.loc.end,\n      );\n\n      return node.expression;\n    }\n\n    shouldParseArrow() {\n      return this.match(tt.colon) || super.shouldParseArrow();\n    }\n\n    shouldParseAsyncArrow(): boolean {\n      return this.match(tt.colon) || super.shouldParseAsyncArrow();\n    }\n\n    canHaveLeadingDecorator() {\n      // Avoid unnecessary lookahead in checking for abstract class unless needed!\n      return super.canHaveLeadingDecorator() || this.isAbstractClass();\n    }\n\n    jsxParseOpeningElementAfterName(\n      node: N.JSXOpeningElement,\n    ): N.JSXOpeningElement {\n      if (this.isRelational(\"<\")) {\n        const typeArguments = this.tsTryParseAndCatch(() =>\n          this.tsParseTypeArguments(),\n        );\n        if (typeArguments) node.typeParameters = typeArguments;\n      }\n      return super.jsxParseOpeningElementAfterName(node);\n    }\n\n    getGetterSetterExpectedParamCount(\n      method: N.ObjectMethod | N.ClassMethod,\n    ): number {\n      const baseCount = super.getGetterSetterExpectedParamCount(method);\n      const params = this.getObjectOrClassMethodParams(method);\n      const firstParam = params[0];\n      const hasContextParam = firstParam && this.isThisParam(firstParam);\n\n      return hasContextParam ? baseCount + 1 : baseCount;\n    }\n\n    parseCatchClauseParam(): N.Pattern {\n      const param = super.parseCatchClauseParam();\n      const type = this.tsTryParseTypeAnnotation();\n\n      if (type) {\n        param.typeAnnotation = type;\n        this.resetEndLocation(param);\n      }\n\n      return param;\n    }\n\n    tsInAmbientContext<T>(cb: () => T): T {\n      const oldIsAmbientContext = this.state.isAmbientContext;\n      this.state.isAmbientContext = true;\n      try {\n        return cb();\n      } finally {\n        this.state.isAmbientContext = oldIsAmbientContext;\n      }\n    }\n\n    parseClass<T: N.Class>(node: T, ...args: any[]): T {\n      const oldInAbstractClass = this.state.inAbstractClass;\n      this.state.inAbstractClass = !!(node: any).abstract;\n      try {\n        return super.parseClass(node, ...args);\n      } finally {\n        this.state.inAbstractClass = oldInAbstractClass;\n      }\n    }\n\n    tsParseAbstractDeclaration(\n      node: any,\n    ): N.ClassDeclaration | N.TsInterfaceDeclaration | typeof undefined {\n      if (this.match(tt._class)) {\n        node.abstract = true;\n        return this.parseClass<N.ClassDeclaration>(\n          (node: N.ClassDeclaration),\n          /* isStatement */ true,\n          /* optionalId */ false,\n        );\n      } else if (this.isContextual(\"interface\")) {\n        // for invalid abstract interface\n\n        // To avoid\n        //   abstract interface\n        //   Foo {}\n        if (!this.hasFollowingLineBreak()) {\n          node.abstract = true;\n          this.raise(\n            node.start,\n            TSErrors.NonClassMethodPropertyHasAbstractModifer,\n          );\n          this.next();\n          return this.tsParseInterfaceDeclaration(\n            (node: N.TsInterfaceDeclaration),\n          );\n        }\n      } else {\n        this.unexpected(null, tt._class);\n      }\n    }\n\n    parseMethod(...args: any[]) {\n      const method = super.parseMethod(...args);\n      if (method.abstract) {\n        const hasBody = this.hasPlugin(\"estree\")\n          ? !!method.value.body\n          : !!method.body;\n        if (hasBody) {\n          const { key } = method;\n          this.raise(\n            method.start,\n            TSErrors.AbstractMethodHasImplementation,\n            key.type === \"Identifier\"\n              ? key.name\n              : `[${this.input.slice(key.start, key.end)}]`,\n          );\n        }\n      }\n      return method;\n    }\n\n    shouldParseAsAmbientContext(): boolean {\n      return !!this.getPluginOption(\"typescript\", \"dts\");\n    }\n\n    parse() {\n      if (this.shouldParseAsAmbientContext()) {\n        this.state.isAmbientContext = true;\n      }\n      return super.parse();\n    }\n\n    getExpression() {\n      if (this.shouldParseAsAmbientContext()) {\n        this.state.isAmbientContext = true;\n      }\n      return super.getExpression();\n    }\n  };\n","// @flow\n\nimport * as charCodes from \"charcodes\";\n\nimport { types as tt, TokenType } from \"../tokenizer/types\";\nimport type Parser from \"../parser\";\nimport * as N from \"../types\";\nimport { makeErrorTemplates, ErrorCodes } from \"../parser/error\";\n\ntt.placeholder = new TokenType(\"%%\", { startsExpr: true });\n\nexport type PlaceholderTypes =\n  | \"Identifier\"\n  | \"StringLiteral\"\n  | \"Expression\"\n  | \"Statement\"\n  | \"Declaration\"\n  | \"BlockStatement\"\n  | \"ClassBody\"\n  | \"Pattern\";\n\n// $PropertyType doesn't support enums. Use a fake \"switch\" (GetPlaceholderNode)\n//type MaybePlaceholder<T: PlaceholderTypes> = $PropertyType<N, T> | N.Placeholder<T>;\n\ntype _Switch<Value, Cases, Index> = $Call<\n  (\n    $ElementType<$ElementType<Cases, Index>, 0>,\n  ) => $ElementType<$ElementType<Cases, Index>, 1>,\n  Value,\n>;\ntype $Switch<Value, Cases> = _Switch<Value, Cases, *>;\n\ntype NodeOf<T: PlaceholderTypes> = $Switch<\n  T,\n  [\n    [\"Identifier\", N.Identifier],\n    [\"StringLiteral\", N.StringLiteral],\n    [\"Expression\", N.Expression],\n    [\"Statement\", N.Statement],\n    [\"Declaration\", N.Declaration],\n    [\"BlockStatement\", N.BlockStatement],\n    [\"ClassBody\", N.ClassBody],\n    [\"Pattern\", N.Pattern],\n  ],\n>;\n\n// Placeholder<T> breaks everything, because its type is incompatible with\n// the substituted nodes.\ntype MaybePlaceholder<T: PlaceholderTypes> = NodeOf<T>; // | Placeholder<T>\n\nconst PlaceHolderErrors = makeErrorTemplates(\n  {\n    ClassNameIsRequired: \"A class name is required.\",\n  },\n  /* code */ ErrorCodes.SyntaxError,\n);\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    parsePlaceholder<T: PlaceholderTypes>(\n      expectedNode: T,\n    ): /*?N.Placeholder<T>*/ ?MaybePlaceholder<T> {\n      if (this.match(tt.placeholder)) {\n        const node = this.startNode();\n        this.next();\n        this.assertNoSpace(\"Unexpected space in placeholder.\");\n\n        // We can't use this.parseIdentifier because\n        // we don't want nested placeholders.\n        node.name = super.parseIdentifier(/* liberal */ true);\n\n        this.assertNoSpace(\"Unexpected space in placeholder.\");\n        this.expect(tt.placeholder);\n        return this.finishPlaceholder(node, expectedNode);\n      }\n    }\n\n    finishPlaceholder<T: PlaceholderTypes>(\n      node: N.Node,\n      expectedNode: T,\n    ): /*N.Placeholder<T>*/ MaybePlaceholder<T> {\n      const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n      node.expectedNode = expectedNode;\n\n      return isFinished ? node : this.finishNode(node, \"Placeholder\");\n    }\n\n    /* ============================================================ *\n     * tokenizer/index.js                                           *\n     * ============================================================ */\n\n    getTokenFromCode(code: number) {\n      if (\n        code === charCodes.percentSign &&\n        this.input.charCodeAt(this.state.pos + 1) === charCodes.percentSign\n      ) {\n        return this.finishOp(tt.placeholder, 2);\n      }\n\n      return super.getTokenFromCode(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(): MaybePlaceholder<\"Expression\"> {\n      return (\n        this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments)\n      );\n    }\n\n    parseIdentifier(): MaybePlaceholder<\"Identifier\"> {\n      // NOTE: This function only handles identifiers outside of\n      // expressions and binding patterns, since they are already\n      // handled by the parseExprAtom and parseBindingAtom functions.\n      // This is needed, for example, to parse \"class %%NAME%% {}\".\n      return (\n        this.parsePlaceholder(\"Identifier\") ||\n        super.parseIdentifier(...arguments)\n      );\n    }\n\n    checkReservedWord(word: string): void {\n      // Sometimes we call #checkReservedWord(node.name), expecting\n      // that node is an Identifier. If it is a Placeholder, name\n      // will be undefined.\n      if (word !== undefined) super.checkReservedWord(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/lval.js                                               *\n     * ============================================================ */\n\n    parseBindingAtom(): MaybePlaceholder<\"Pattern\"> {\n      return (\n        this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments)\n      );\n    }\n\n    checkLVal(expr: N.Expression): void {\n      if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n    }\n\n    toAssignable(node: N.Node): N.Node {\n      if (\n        node &&\n        node.type === \"Placeholder\" &&\n        node.expectedNode === \"Expression\"\n      ) {\n        node.expectedNode = \"Pattern\";\n        return node;\n      }\n      return super.toAssignable(...arguments);\n    }\n\n    /* ============================================================ *\n     * parser/statement.js                                          *\n     * ============================================================ */\n\n    isLet(context: ?string): boolean {\n      if (super.isLet(context)) {\n        return true;\n      }\n\n      // Replicate the original checks that lead to looking ahead for an\n      // identifier.\n      if (!this.isContextual(\"let\")) {\n        return false;\n      }\n      if (context) return false;\n\n      // Accept \"let %%\" as the start of \"let %%placeholder%%\", as though the\n      // placeholder were an identifier.\n      const nextToken = this.lookahead();\n      if (nextToken.type === tt.placeholder) {\n        return true;\n      }\n\n      return false;\n    }\n\n    verifyBreakContinue(node: N.BreakStatement | N.ContinueStatement) {\n      if (node.label && node.label.type === \"Placeholder\") return;\n      super.verifyBreakContinue(...arguments);\n    }\n\n    parseExpressionStatement(\n      node: MaybePlaceholder<\"Statement\">,\n      expr: N.Expression,\n    ): MaybePlaceholder<\"Statement\"> {\n      if (\n        expr.type !== \"Placeholder\" ||\n        (expr.extra && expr.extra.parenthesized)\n      ) {\n        return super.parseExpressionStatement(...arguments);\n      }\n\n      if (this.match(tt.colon)) {\n        const stmt: N.LabeledStatement = node;\n        stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n        this.next();\n        stmt.body = this.parseStatement(\"label\");\n        return this.finishNode(stmt, \"LabeledStatement\");\n      }\n\n      this.semicolon();\n\n      node.name = expr.name;\n      return this.finishPlaceholder(node, \"Statement\");\n    }\n\n    parseBlock(): MaybePlaceholder<\"BlockStatement\"> {\n      return (\n        this.parsePlaceholder(\"BlockStatement\") ||\n        super.parseBlock(...arguments)\n      );\n    }\n\n    parseFunctionId(): ?MaybePlaceholder<\"Identifier\"> {\n      return (\n        this.parsePlaceholder(\"Identifier\") ||\n        super.parseFunctionId(...arguments)\n      );\n    }\n\n    parseClass<T: N.Class>(\n      node: T,\n      isStatement: /* T === ClassDeclaration */ boolean,\n      optionalId?: boolean,\n    ): T {\n      const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n\n      this.next();\n      this.takeDecorators(node);\n      const oldStrict = this.state.strict;\n\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (placeholder) {\n        if (\n          this.match(tt._extends) ||\n          this.match(tt.placeholder) ||\n          this.match(tt.braceL)\n        ) {\n          node.id = placeholder;\n        } else if (optionalId || !isStatement) {\n          node.id = null;\n          node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n          return this.finishNode(node, type);\n        } else {\n          this.unexpected(null, PlaceHolderErrors.ClassNameIsRequired);\n        }\n      } else {\n        this.parseClassId(node, isStatement, optionalId);\n      }\n\n      this.parseClassSuper(node);\n      node.body =\n        this.parsePlaceholder(\"ClassBody\") ||\n        this.parseClassBody(!!node.superClass, oldStrict);\n      return this.finishNode(node, type);\n    }\n\n    parseExport(node: N.Node): N.Node {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseExport(...arguments);\n\n      if (!this.isContextual(\"from\") && !this.match(tt.comma)) {\n        // export %%DECL%%;\n        node.specifiers = [];\n        node.source = null;\n        node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n        return this.finishNode(node, \"ExportNamedDeclaration\");\n      }\n\n      // export %%NAME%% from \"foo\";\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = placeholder;\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n\n      return super.parseExport(node);\n    }\n\n    isExportDefaultSpecifier(): boolean {\n      if (this.match(tt._default)) {\n        const next = this.nextTokenStart();\n        if (this.isUnparsedContextual(next, \"from\")) {\n          if (\n            this.input.startsWith(\n              tt.placeholder.label,\n              this.nextTokenStartSince(next + 4),\n            )\n          ) {\n            return true;\n          }\n        }\n      }\n      return super.isExportDefaultSpecifier();\n    }\n\n    maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n      if (node.specifiers && node.specifiers.length > 0) {\n        // \"export %%NAME%%\" has already been parsed by #parseExport.\n        return true;\n      }\n      return super.maybeParseExportDefaultSpecifier(...arguments);\n    }\n\n    checkExport(node: N.ExportNamedDeclaration): void {\n      const { specifiers } = node;\n      if (specifiers?.length) {\n        node.specifiers = specifiers.filter(\n          node => node.exported.type === \"Placeholder\",\n        );\n      }\n      super.checkExport(node);\n      node.specifiers = specifiers;\n    }\n\n    parseImport(\n      node: N.Node,\n    ): N.ImportDeclaration | N.TsImportEqualsDeclaration {\n      const placeholder = this.parsePlaceholder(\"Identifier\");\n      if (!placeholder) return super.parseImport(...arguments);\n\n      node.specifiers = [];\n\n      if (!this.isContextual(\"from\") && !this.match(tt.comma)) {\n        // import %%STRING%%;\n        node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n        this.semicolon();\n        return this.finishNode(node, \"ImportDeclaration\");\n      }\n\n      // import %%DEFAULT%% ...\n      const specifier = this.startNodeAtNode(placeholder);\n      specifier.local = placeholder;\n      this.finishNode(specifier, \"ImportDefaultSpecifier\");\n      node.specifiers.push(specifier);\n\n      if (this.eat(tt.comma)) {\n        // import %%DEFAULT%%, * as ...\n        const hasStarImport = this.maybeParseStarImportSpecifier(node);\n\n        // import %%DEFAULT%%, { ...\n        if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n      }\n\n      this.expectContextual(\"from\");\n      node.source = this.parseImportSource();\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    parseImportSource(): MaybePlaceholder<\"StringLiteral\"> {\n      // import ... from %%STRING%%;\n\n      return (\n        this.parsePlaceholder(\"StringLiteral\") ||\n        super.parseImportSource(...arguments)\n      );\n    }\n  };\n","import type Parser from \"../parser\";\nimport { types as tt } from \"../tokenizer/types\";\nimport * as N from \"../types\";\n\nexport default (superClass: Class<Parser>): Class<Parser> =>\n  class extends superClass {\n    parseV8Intrinsic(): N.Expression {\n      if (this.match(tt.modulo)) {\n        const v8IntrinsicStart = this.state.start;\n        // let the `loc` of Identifier starts from `%`\n        const node = this.startNode();\n        this.eat(tt.modulo);\n        if (this.match(tt.name)) {\n          const name = this.parseIdentifierName(this.state.start);\n          const identifier = this.createIdentifier(node, name);\n          identifier.type = \"V8IntrinsicIdentifier\";\n          if (this.match(tt.parenL)) {\n            return identifier;\n          }\n        }\n        this.unexpected(v8IntrinsicStart);\n      }\n    }\n\n    /* ============================================================ *\n     * parser/expression.js                                         *\n     * ============================================================ */\n\n    parseExprAtom(): N.Expression {\n      return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n    }\n  };\n","// @flow\n\nimport type Parser from \"./parser\";\n\nexport type Plugin = string | [string, Object];\n\nexport type PluginList = $ReadOnlyArray<Plugin>;\n\nexport type MixinPlugin = (superClass: Class<Parser>) => Class<Parser>;\n\nexport function hasPlugin(plugins: PluginList, name: string): boolean {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\n\nexport function getPluginOption(\n  plugins: PluginList,\n  name: string,\n  option: string,\n) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\n\nconst PIPELINE_PROPOSALS = [\"minimal\", \"smart\", \"fsharp\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\n\nexport function validatePlugins(plugins: PluginList) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\n        \"Cannot use the decorators and decorators-legacy plugin together\",\n      );\n    }\n\n    const decoratorsBeforeExport = getPluginOption(\n      plugins,\n      \"decorators\",\n      \"decoratorsBeforeExport\",\n    );\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\n        \"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" +\n          \" whose value must be a boolean. If you are migrating from\" +\n          \" Babylon/Babel 6 or want to use the old decorators proposal, you\" +\n          \" should use the 'decorators-legacy' plugin instead of 'decorators'.\",\n      );\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (\n    hasPlugin(plugins, \"pipelineOperator\") &&\n    !PIPELINE_PROPOSALS.includes(\n      getPluginOption(plugins, \"pipelineOperator\", \"proposal\"),\n    )\n  ) {\n    throw new Error(\n      \"'pipelineOperator' requires 'proposal' option whose value should be one of: \" +\n        PIPELINE_PROPOSALS.map(p => `'${p}'`).join(\", \"),\n    );\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    if (process.env.BABEL_8_BREAKING) {\n      throw new Error(\n        \"`moduleAttributes` has been removed in Babel 8, please use `importAssertions` parser plugin, or `@babel/plugin-syntax-import-assertions`.\",\n      );\n    } else {\n      if (hasPlugin(plugins, \"importAssertions\")) {\n        throw new Error(\n          \"Cannot combine importAssertions and moduleAttributes plugins.\",\n        );\n      }\n      const moduleAttributesVerionPluginOption = getPluginOption(\n        plugins,\n        \"moduleAttributes\",\n        \"version\",\n      );\n      if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n        throw new Error(\n          \"The 'moduleAttributes' plugin requires a 'version' option,\" +\n            \" representing the last proposal update. Currently, the\" +\n            \" only supported value is 'may-2020'.\",\n        );\n      }\n    }\n  }\n\n  if (\n    hasPlugin(plugins, \"recordAndTuple\") &&\n    !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(\n      getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"),\n    )\n  ) {\n    throw new Error(\n      \"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" +\n        RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"),\n    );\n  }\n\n  if (\n    hasPlugin(plugins, \"asyncDoExpressions\") &&\n    !hasPlugin(plugins, \"doExpressions\")\n  ) {\n    const error = new Error(\n      \"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\",\n    );\n    // $FlowIgnore\n    error.missingPlugins = \"doExpressions\"; // so @babel/core can provide better error message\n    throw error;\n  }\n}\n\n// These plugins are defined using a mixin which extends the parser class.\n\nimport estree from \"./plugins/estree\";\nimport flow from \"./plugins/flow\";\nimport jsx from \"./plugins/jsx\";\nimport typescript from \"./plugins/typescript\";\nimport placeholders from \"./plugins/placeholders\";\nimport v8intrinsic from \"./plugins/v8intrinsic\";\n\n// NOTE: order is important. estree must come first; placeholders must come last.\nexport const mixinPlugins: { [name: string]: MixinPlugin } = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders,\n};\n\nexport const mixinPluginNames: $ReadOnlyArray<string> =\n  Object.keys(mixinPlugins);\n","// @flow\n\nimport type { PluginList } from \"./plugin-utils\";\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nexport type SourceType = \"script\" | \"module\" | \"unambiguous\";\n\nexport type Options = {\n  sourceType: SourceType,\n  sourceFilename?: string,\n  startLine: number,\n  allowAwaitOutsideFunction: boolean,\n  allowReturnOutsideFunction: boolean,\n  allowImportExportEverywhere: boolean,\n  allowSuperOutsideMethod: boolean,\n  allowUndeclaredExports: boolean,\n  plugins: PluginList,\n  strictMode: ?boolean,\n  ranges: boolean,\n  tokens: boolean,\n  createParenthesizedExpressions: boolean,\n  errorRecovery: boolean,\n};\n\nexport const defaultOptions: Options = {\n  // Source type (\"script\" or \"module\") for different semantics\n  sourceType: \"script\",\n  // Source filename.\n  sourceFilename: undefined,\n  // Line from which to start counting source. Useful for\n  // integration with other tools.\n  startLine: 1,\n  // When enabled, await at the top level is not considered an\n  // error.\n  allowAwaitOutsideFunction: false,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // TODO\n  allowSuperOutsideMethod: false,\n  // When enabled, export statements can reference undeclared variables.\n  allowUndeclaredExports: false,\n  // An array of plugins to enable\n  plugins: [],\n  // TODO\n  strictMode: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // Adds all parsed tokens to a `tokens` property on the `File` node\n  tokens: false,\n  // Whether to create ParenthesizedExpression AST nodes (if false\n  // the parser sets extra.parenthesized on the expression nodes instead).\n  createParenthesizedExpressions: false,\n  // When enabled, errors are attached to the AST instead of being directly thrown.\n  // Some errors will still throw, because @babel/parser can't always recover.\n  errorRecovery: false,\n};\n\n// Interpret and default an options object\n\nexport function getOptions(opts: ?Options): Options {\n  const options: any = {};\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n  return options;\n}\n","// @flow\n\n/*:: declare var invariant; */\n\nimport type { Options } from \"../options\";\nimport * as N from \"../types\";\nimport type { Position } from \"../util/location\";\nimport * as charCodes from \"charcodes\";\nimport { isIdentifierStart, isIdentifierChar } from \"../util/identifier\";\nimport { types as tt, keywords as keywordTypes, type TokenType } from \"./types\";\nimport { type TokContext, types as ct } from \"./context\";\nimport ParserErrors, { Errors, type ErrorTemplate } from \"../parser/error\";\nimport { SourceLocation } from \"../util/location\";\nimport {\n  lineBreakG,\n  isNewLine,\n  isWhitespace,\n  skipWhiteSpace,\n} from \"../util/whitespace\";\nimport State from \"./state\";\nimport type { LookaheadState } from \"./state\";\n\nconst VALID_REGEX_FLAGS = new Set([\n  charCodes.lowercaseG,\n  charCodes.lowercaseM,\n  charCodes.lowercaseS,\n  charCodes.lowercaseI,\n  charCodes.lowercaseY,\n  charCodes.lowercaseU,\n  charCodes.lowercaseD,\n]);\n\n// The following character codes are forbidden from being\n// an immediate sibling of NumericLiteralSeparator _\n\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [\n    charCodes.dot,\n    charCodes.uppercaseB,\n    charCodes.uppercaseE,\n    charCodes.uppercaseO,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseB,\n    charCodes.lowercaseE,\n    charCodes.lowercaseO,\n  ],\n  hex: [\n    charCodes.dot,\n    charCodes.uppercaseX,\n    charCodes.underscore, // multiple separators are not allowed\n    charCodes.lowercaseX,\n  ],\n};\n\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [\n  // 0 - 1\n  charCodes.digit0,\n  charCodes.digit1,\n];\nallowedNumericSeparatorSiblings.oct = [\n  // 0 - 7\n  ...allowedNumericSeparatorSiblings.bin,\n\n  charCodes.digit2,\n  charCodes.digit3,\n  charCodes.digit4,\n  charCodes.digit5,\n  charCodes.digit6,\n  charCodes.digit7,\n];\nallowedNumericSeparatorSiblings.dec = [\n  // 0 - 9\n  ...allowedNumericSeparatorSiblings.oct,\n\n  charCodes.digit8,\n  charCodes.digit9,\n];\n\nallowedNumericSeparatorSiblings.hex = [\n  // 0 - 9, A - F, a - f,\n  ...allowedNumericSeparatorSiblings.dec,\n\n  charCodes.uppercaseA,\n  charCodes.uppercaseB,\n  charCodes.uppercaseC,\n  charCodes.uppercaseD,\n  charCodes.uppercaseE,\n  charCodes.uppercaseF,\n\n  charCodes.lowercaseA,\n  charCodes.lowercaseB,\n  charCodes.lowercaseC,\n  charCodes.lowercaseD,\n  charCodes.lowercaseE,\n  charCodes.lowercaseF,\n];\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nexport class Token {\n  constructor(state: State) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n  declare type: TokenType;\n  declare value: any;\n  declare start: number;\n  declare end: number;\n  declare loc: SourceLocation;\n}\n\n// ## Tokenizer\n\nexport default class Tokenizer extends ParserErrors {\n  // Forward-declarations\n  // parser/util.js\n  /*::\n  +hasPrecedingLineBreak: () => boolean;\n  +unexpected: (pos?: ?number, messageOrType?: ErrorTemplate | TokenType) => empty;\n  +expectPlugin: (name: string, pos?: ?number) => true;\n  */\n\n  isLookahead: boolean;\n\n  // Token store.\n  tokens: Array<Token | N.Comment> = [];\n\n  constructor(options: Options, input: string) {\n    super();\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token: Token | N.Comment) {\n    // Pop out invalid tokens trapped by try-catch parsing.\n    // Those parsing branches are mainly created by typescript and flow plugins.\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  // Move to the next token\n\n  next(): void {\n    this.checkKeywordEscapes();\n    if (this.options.tokens) {\n      this.pushToken(new Token(this.state));\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  // TODO\n\n  eat(type: TokenType): boolean {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  // TODO\n\n  match(type: TokenType): boolean {\n    return this.state.type === type;\n  }\n\n  /**\n   * Create a LookaheadState from current parser state\n   *\n   * @param {State} state\n   * @returns {LookaheadState}\n   * @memberof Tokenizer\n   */\n  createLookaheadState(state: State): LookaheadState {\n    return {\n      pos: state.pos,\n      value: null,\n      type: state.type,\n      start: state.start,\n      end: state.end,\n      lastTokEnd: state.end,\n      context: [this.curContext()],\n      inType: state.inType,\n    };\n  }\n\n  /**\n   * lookahead peeks the next token, skipping changes to token context and\n   * comment stack. For performance it returns a limited LookaheadState\n   * instead of full parser state.\n   *\n   * The { column, line } Loc info is not included in lookahead since such usage\n   * is rare. Although it may return other location properties e.g. `curLine` and\n   * `lineStart`, these properties are not listed in the LookaheadState interface\n   * and thus the returned value is _NOT_ reliable.\n   *\n   * The tokenizer should make best efforts to avoid using any parser state\n   * other than those defined in LookaheadState\n   *\n   * @returns {LookaheadState}\n   * @memberof Tokenizer\n   */\n  lookahead(): LookaheadState {\n    const old = this.state;\n    // For performance we use a simpified tokenizer state structure\n    // $FlowIgnore\n    this.state = this.createLookaheadState(old);\n\n    this.isLookahead = true;\n    this.nextToken();\n    this.isLookahead = false;\n\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart(): number {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos: number): number {\n    skipWhiteSpace.lastIndex = pos;\n    const skip = skipWhiteSpace.exec(this.input);\n    // $FlowIgnore: The skipWhiteSpace ensures to match any string\n    return pos + skip[0].length;\n  }\n\n  lookaheadCharCode(): number {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  codePointAtPos(pos: number): number {\n    // The implementation is based on\n    // https://source.chromium.org/chromium/chromium/src/+/master:v8/src/builtins/builtins-string-gen.cc;l=1455;drc=221e331b49dfefadbc6fa40b0c68e6f97606d0b3;bpv=0;bpt=1\n    // We reimplement `codePointAt` because `codePointAt` is a V8 builtin which is not inlined by TurboFan (as of M91)\n    // since `input` is mostly ASCII, an inlined `charCodeAt` wins here\n    let cp = this.input.charCodeAt(pos);\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n    return cp;\n  }\n\n  // Toggle strict mode. Re-reads the next number or string to please\n  // pedantic tests (`\"use strict\"; 010;` should fail).\n\n  setStrict(strict: boolean): void {\n    this.state.strict = strict;\n    if (strict) {\n      // Throw an error for any string decimal escape found before/immediately\n      // after a \"use strict\" directive. Strict mode will be set at parse\n      // time for any literals that occur after the next node of the strict\n      // directive.\n      this.state.strictErrors.forEach((message, pos) =>\n        /* eslint-disable @babel/development-internal/dry-error-messages */\n        this.raise(pos, message),\n      );\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext(): TokContext {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  // Read a single token, updating the parser object's token-related\n  // properties.\n\n  nextToken(): void {\n    const curContext = this.curContext();\n    if (!curContext.preserveSpace) this.skipSpace();\n    this.state.start = this.state.pos;\n    if (!this.isLookahead) this.state.startLoc = this.state.curPosition();\n    if (this.state.pos >= this.length) {\n      this.finishToken(tt.eof);\n      return;\n    }\n\n    if (curContext === ct.template) {\n      this.readTmplToken();\n    } else {\n      this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n    }\n  }\n\n  pushComment(\n    block: boolean,\n    text: string,\n    start: number,\n    end: number,\n    startLoc: Position,\n    endLoc: Position,\n  ): void {\n    const comment = {\n      type: block ? \"CommentBlock\" : \"CommentLine\",\n      value: text,\n      start: start,\n      end: end,\n      loc: new SourceLocation(startLoc, endLoc),\n    };\n\n    if (this.options.tokens) this.pushToken(comment);\n    this.state.comments.push(comment);\n    this.addComment(comment);\n  }\n\n  skipBlockComment(): void {\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", this.state.pos + 2);\n    if (end === -1) throw this.raise(start, Errors.UnterminatedComment);\n\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start;\n    let match;\n    while (\n      (match = lineBreakG.exec(this.input)) &&\n      match.index < this.state.pos\n    ) {\n      ++this.state.curLine;\n      this.state.lineStart = match.index + match[0].length;\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n    /*:: invariant(startLoc) */\n\n    this.pushComment(\n      true,\n      this.input.slice(start + 2, end),\n      start,\n      this.state.pos,\n      startLoc,\n      this.state.curPosition(),\n    );\n  }\n\n  skipLineComment(startSkip: number): void {\n    const start = this.state.pos;\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt((this.state.pos += startSkip));\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    // If we are doing a lookahead right now we need to advance the position (above code)\n    // but we do not want to push the comment to the state.\n    if (this.isLookahead) return;\n    /*:: invariant(startLoc) */\n\n    this.pushComment(\n      false,\n      this.input.slice(start + startSkip, this.state.pos),\n      start,\n      this.state.pos,\n      startLoc,\n      this.state.curPosition(),\n    );\n  }\n\n  // Called at the start of the parse and after every token. Skips\n  // whitespace and comments, and.\n\n  skipSpace(): void {\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n      switch (ch) {\n        case charCodes.space:\n        case charCodes.nonBreakingSpace:\n        case charCodes.tab:\n          ++this.state.pos;\n          break;\n        case charCodes.carriageReturn:\n          if (\n            this.input.charCodeAt(this.state.pos + 1) === charCodes.lineFeed\n          ) {\n            ++this.state.pos;\n          }\n        // fall through\n        case charCodes.lineFeed:\n        case charCodes.lineSeparator:\n        case charCodes.paragraphSeparator:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case charCodes.slash:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case charCodes.asterisk:\n              this.skipBlockComment();\n              break;\n\n            case charCodes.slash:\n              this.skipLineComment(2);\n              break;\n\n            default:\n              break loop;\n          }\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else {\n            break loop;\n          }\n      }\n    }\n  }\n\n  // Called at the end of every token. Sets `end`, `val`, and\n  // maintains `context` and `exprAllowed`, and skips the space after\n  // the token, so that the next one's `start` will point at the\n  // right position.\n\n  finishToken(type: TokenType, val: any): void {\n    this.state.end = this.state.pos;\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) {\n      this.state.endLoc = this.state.curPosition();\n      this.updateContext(prevType);\n    }\n  }\n\n  // ### Token reading\n\n  // This is the function that is called to fetch the next token. It\n  // is somewhat obscure, because it works in character codes rather\n  // than characters, and because operator parsing has been inlined\n  // into it.\n  //\n  // All in the name of speed.\n\n  // number sign is \"#\"\n  readToken_numberSign(): void {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      throw this.raise(this.state.pos, Errors.UnexpectedDigitAfterHash);\n    }\n\n    if (\n      next === charCodes.leftCurlyBrace ||\n      (next === charCodes.leftSquareBracket && this.hasPlugin(\"recordAndTuple\"))\n    ) {\n      // When we see `#{`, it is likely to be a hash record.\n      // However we don't yell at `#[` since users may intend to use \"computed private fields\",\n      // which is not allowed in the spec. Throwing expecting recordAndTuple is\n      // misleading\n      this.expectPlugin(\"recordAndTuple\");\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(\n          this.state.pos,\n          next === charCodes.leftCurlyBrace\n            ? Errors.RecordExpressionHashIncorrectStartSyntaxType\n            : Errors.TupleExpressionHashIncorrectStartSyntaxType,\n        );\n      }\n\n      this.state.pos += 2;\n      if (next === charCodes.leftCurlyBrace) {\n        // #{\n        this.finishToken(tt.braceHashL);\n      } else {\n        // #[\n        this.finishToken(tt.bracketHashL);\n      }\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(tt.privateName, this.readWord1(next));\n    } else if (next === charCodes.backslash) {\n      ++this.state.pos;\n      this.finishToken(tt.privateName, this.readWord1());\n    } else {\n      this.finishOp(tt.hash, 1);\n    }\n  }\n\n  readToken_dot(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next >= charCodes.digit0 && next <= charCodes.digit9) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (\n      next === charCodes.dot &&\n      this.input.charCodeAt(this.state.pos + 2) === charCodes.dot\n    ) {\n      this.state.pos += 3;\n      this.finishToken(tt.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.dot);\n    }\n  }\n\n  readToken_slash(): void {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.slashAssign, 2);\n    } else {\n      this.finishOp(tt.slash, 1);\n    }\n  }\n\n  readToken_interpreter(): boolean {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== charCodes.exclamationMark) return false;\n\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n\n    this.finishToken(tt.interpreterDirective, value);\n\n    return true;\n  }\n\n  readToken_mult_modulo(code: number): void {\n    // '%*'\n    let type = code === charCodes.asterisk ? tt.star : tt.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n\n    // Exponentiation operator **\n    if (code === charCodes.asterisk && next === charCodes.asterisk) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = tt.exponent;\n    }\n\n    if (next === charCodes.equalsTo && !this.state.inType) {\n      width++;\n      type = tt.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code: number): void {\n    // '||' '&&' '||=' '&&='\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, 3);\n      } else {\n        this.finishOp(\n          code === charCodes.verticalBar ? tt.logicalOR : tt.logicalAND,\n          2,\n        );\n      }\n      return;\n    }\n\n    if (code === charCodes.verticalBar) {\n      // '|>'\n      if (next === charCodes.greaterThan) {\n        this.finishOp(tt.pipeline, 2);\n        return;\n      }\n      // '|}'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightCurlyBrace\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(\n            this.state.pos,\n            Errors.RecordExpressionBarIncorrectEndSyntaxType,\n          );\n        }\n        this.state.pos += 2;\n        this.finishToken(tt.braceBarR);\n        return;\n      }\n\n      // '|]'\n      if (\n        this.hasPlugin(\"recordAndTuple\") &&\n        next === charCodes.rightSquareBracket\n      ) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(\n            this.state.pos,\n            Errors.TupleExpressionBarIncorrectEndSyntaxType,\n          );\n        }\n        this.state.pos += 2;\n        this.finishToken(tt.bracketBarR);\n        return;\n      }\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n      return;\n    }\n\n    this.finishOp(\n      code === charCodes.verticalBar ? tt.bitwiseOR : tt.bitwiseAND,\n      1,\n    );\n  }\n\n  readToken_caret(): void {\n    // '^'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code: number): void {\n    // '+-'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (\n        next === charCodes.dash &&\n        !this.inModule &&\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.greaterThan &&\n        (this.state.lastTokEnd === 0 || this.hasPrecedingLineBreak())\n      ) {\n        // A `-->` line comment\n        this.skipLineComment(3);\n        this.skipSpace();\n        this.nextToken();\n        return;\n      }\n      this.finishOp(tt.incDec, 2);\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      this.finishOp(tt.assign, 2);\n    } else {\n      this.finishOp(tt.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code: number): void {\n    // '<>'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size =\n        code === charCodes.greaterThan &&\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.greaterThan\n          ? 3\n          : 2;\n      if (this.input.charCodeAt(this.state.pos + size) === charCodes.equalsTo) {\n        this.finishOp(tt.assign, size + 1);\n        return;\n      }\n      this.finishOp(tt.bitShift, size);\n      return;\n    }\n\n    if (\n      next === charCodes.exclamationMark &&\n      code === charCodes.lessThan &&\n      !this.inModule &&\n      this.input.charCodeAt(this.state.pos + 2) === charCodes.dash &&\n      this.input.charCodeAt(this.state.pos + 3) === charCodes.dash\n    ) {\n      // `<!--`, an XML-style comment that should be interpreted as a line comment\n      this.skipLineComment(4);\n      this.skipSpace();\n      this.nextToken();\n      return;\n    }\n\n    if (next === charCodes.equalsTo) {\n      // <= | >=\n      size = 2;\n    }\n\n    this.finishOp(tt.relational, size);\n  }\n\n  readToken_eq_excl(code: number): void {\n    // '=!'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    if (next === charCodes.equalsTo) {\n      this.finishOp(\n        tt.equality,\n        this.input.charCodeAt(this.state.pos + 2) === charCodes.equalsTo\n          ? 3\n          : 2,\n      );\n      return;\n    }\n    if (code === charCodes.equalsTo && next === charCodes.greaterThan) {\n      // '=>'\n      this.state.pos += 2;\n      this.finishToken(tt.arrow);\n      return;\n    }\n    this.finishOp(code === charCodes.equalsTo ? tt.eq : tt.bang, 1);\n  }\n\n  readToken_question(): void {\n    // '?'\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n    if (next === charCodes.questionMark) {\n      if (next2 === charCodes.equalsTo) {\n        // '??='\n        this.finishOp(tt.assign, 3);\n      } else {\n        // '??'\n        this.finishOp(tt.nullishCoalescing, 2);\n      }\n    } else if (\n      next === charCodes.dot &&\n      !(next2 >= charCodes.digit0 && next2 <= charCodes.digit9)\n    ) {\n      // '.' not followed by a number\n      this.state.pos += 2;\n      this.finishToken(tt.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(tt.question);\n    }\n  }\n\n  getTokenFromCode(code: number): void {\n    switch (code) {\n      // The interpretation of a dot depends on whether it is followed\n      // by a digit or another two dots.\n\n      case charCodes.dot:\n        this.readToken_dot();\n        return;\n\n      // Punctuation tokens.\n      case charCodes.leftParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenL);\n        return;\n      case charCodes.rightParenthesis:\n        ++this.state.pos;\n        this.finishToken(tt.parenR);\n        return;\n      case charCodes.semicolon:\n        ++this.state.pos;\n        this.finishToken(tt.semi);\n        return;\n      case charCodes.comma:\n        ++this.state.pos;\n        this.finishToken(tt.comma);\n        return;\n      case charCodes.leftSquareBracket:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              this.state.pos,\n              Errors.TupleExpressionBarIncorrectStartSyntaxType,\n            );\n          }\n\n          // [|\n          this.state.pos += 2;\n          this.finishToken(tt.bracketBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.bracketL);\n        }\n        return;\n      case charCodes.rightSquareBracket:\n        ++this.state.pos;\n        this.finishToken(tt.bracketR);\n        return;\n      case charCodes.leftCurlyBrace:\n        if (\n          this.hasPlugin(\"recordAndTuple\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.verticalBar\n        ) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(\n              this.state.pos,\n              Errors.RecordExpressionBarIncorrectStartSyntaxType,\n            );\n          }\n\n          // {|\n          this.state.pos += 2;\n          this.finishToken(tt.braceBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.braceL);\n        }\n        return;\n      case charCodes.rightCurlyBrace:\n        ++this.state.pos;\n        this.finishToken(tt.braceR);\n        return;\n\n      case charCodes.colon:\n        if (\n          this.hasPlugin(\"functionBind\") &&\n          this.input.charCodeAt(this.state.pos + 1) === charCodes.colon\n        ) {\n          this.finishOp(tt.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(tt.colon);\n        }\n        return;\n\n      case charCodes.questionMark:\n        this.readToken_question();\n        return;\n\n      case charCodes.graveAccent:\n        ++this.state.pos;\n        this.finishToken(tt.backQuote);\n        return;\n\n      case charCodes.digit0: {\n        const next = this.input.charCodeAt(this.state.pos + 1);\n        // '0x', '0X' - hex number\n        if (next === charCodes.lowercaseX || next === charCodes.uppercaseX) {\n          this.readRadixNumber(16);\n          return;\n        }\n        // '0o', '0O' - octal number\n        if (next === charCodes.lowercaseO || next === charCodes.uppercaseO) {\n          this.readRadixNumber(8);\n          return;\n        }\n        // '0b', '0B' - binary number\n        if (next === charCodes.lowercaseB || next === charCodes.uppercaseB) {\n          this.readRadixNumber(2);\n          return;\n        }\n      }\n      // Anything else beginning with a digit is an integer, octal\n      // number, or float. (fall through)\n      case charCodes.digit1:\n      case charCodes.digit2:\n      case charCodes.digit3:\n      case charCodes.digit4:\n      case charCodes.digit5:\n      case charCodes.digit6:\n      case charCodes.digit7:\n      case charCodes.digit8:\n      case charCodes.digit9:\n        this.readNumber(false);\n        return;\n\n      // Quotes produce strings.\n      case charCodes.quotationMark:\n      case charCodes.apostrophe:\n        this.readString(code);\n        return;\n\n      // Operators are parsed inline in tiny state machines. '=' (charCodes.equalsTo) is\n      // often referred to. `finishOp` simply skips the amount of\n      // characters it is given as second argument, and returns a token\n      // of the type given by its first argument.\n\n      case charCodes.slash:\n        this.readToken_slash();\n        return;\n\n      case charCodes.percentSign:\n      case charCodes.asterisk:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case charCodes.verticalBar:\n      case charCodes.ampersand:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case charCodes.caret:\n        this.readToken_caret();\n        return;\n\n      case charCodes.plusSign:\n      case charCodes.dash:\n        this.readToken_plus_min(code);\n        return;\n\n      case charCodes.lessThan:\n      case charCodes.greaterThan:\n        this.readToken_lt_gt(code);\n        return;\n\n      case charCodes.equalsTo:\n      case charCodes.exclamationMark:\n        this.readToken_eq_excl(code);\n        return;\n\n      case charCodes.tilde:\n        this.finishOp(tt.tilde, 1);\n        return;\n\n      case charCodes.atSign:\n        ++this.state.pos;\n        this.finishToken(tt.at);\n        return;\n\n      case charCodes.numberSign:\n        this.readToken_numberSign();\n        return;\n\n      case charCodes.backslash:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n    }\n\n    throw this.raise(\n      this.state.pos,\n      Errors.InvalidOrUnexpectedToken,\n      String.fromCodePoint(code),\n    );\n  }\n\n  finishOp(type: TokenType, size: number): void {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp(): void {\n    const start = this.state.start + 1;\n    let escaped, inClass;\n    let { pos } = this.state;\n    for (; ; ++pos) {\n      if (pos >= this.length) {\n        throw this.raise(start, Errors.UnterminatedRegExp);\n      }\n      const ch = this.input.charCodeAt(pos);\n      if (isNewLine(ch)) {\n        throw this.raise(start, Errors.UnterminatedRegExp);\n      }\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === charCodes.leftSquareBracket) {\n          inClass = true;\n        } else if (ch === charCodes.rightSquareBracket && inClass) {\n          inClass = false;\n        } else if (ch === charCodes.slash && !inClass) {\n          break;\n        }\n        escaped = ch === charCodes.backslash;\n      }\n    }\n    const content = this.input.slice(start, pos);\n    ++pos;\n\n    let mods = \"\";\n\n    while (pos < this.length) {\n      const cp = this.codePointAtPos(pos);\n      // It doesn't matter if cp > 0xffff, the loop will either throw or break because we check on cp\n      const char = String.fromCharCode(cp);\n\n      if (VALID_REGEX_FLAGS.has(cp)) {\n        if (mods.includes(char)) {\n          this.raise(pos + 1, Errors.DuplicateRegExpFlags);\n        }\n      } else if (isIdentifierChar(cp) || cp === charCodes.backslash) {\n        this.raise(pos + 1, Errors.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++pos;\n      mods += char;\n    }\n    this.state.pos = pos;\n\n    this.finishToken(tt.regexp, {\n      pattern: content,\n      flags: mods,\n    });\n  }\n\n  // Read an integer in the given radix. Return null if zero digits\n  // were read, the integer value otherwise. When `len` is given, this\n  // will return `null` unless the integer has exactly `len` digits.\n  // When `forceLen` is `true`, it means that we already know that in case\n  // of a malformed number we have to skip `len` characters anyway, instead\n  // of bailing out early. For example, in \"\\u{123Z}\" we want to read up to }\n  // anyway, while in \"\\u00Z\" we will stop at Z instead of consuming four\n  // characters (and thus the closing quote).\n\n  readInt(\n    radix: number,\n    len?: number,\n    forceLen?: boolean,\n    allowNumSeparator: boolean = true,\n  ): number | null {\n    const start = this.state.pos;\n    const forbiddenSiblings =\n      radix === 16\n        ? forbiddenNumericSeparatorSiblings.hex\n        : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings =\n      radix === 16\n        ? allowedNumericSeparatorSiblings.hex\n        : radix === 10\n        ? allowedNumericSeparatorSiblings.dec\n        : radix === 8\n        ? allowedNumericSeparatorSiblings.oct\n        : allowedNumericSeparatorSiblings.bin;\n\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === charCodes.underscore) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, Errors.UnexpectedNumericSeparator);\n        } else if (\n          forbiddenSiblings.indexOf(prev) > -1 ||\n          forbiddenSiblings.indexOf(next) > -1 ||\n          Number.isNaN(next)\n        ) {\n          this.raise(this.state.pos, Errors.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, Errors.NumericSeparatorInEscapeSequence);\n        }\n\n        // Ignore this _ character\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= charCodes.lowercaseA) {\n        val = code - charCodes.lowercaseA + charCodes.lineFeed;\n      } else if (code >= charCodes.uppercaseA) {\n        val = code - charCodes.uppercaseA + charCodes.lineFeed;\n      } else if (charCodes.isDigit(code)) {\n        val = code - charCodes.digit0; // 0-9\n      } else {\n        val = Infinity;\n      }\n      if (val >= radix) {\n        // If we are in \"errorRecovery\" mode and we found a digit which is too big,\n        // don't break the loop.\n\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, Errors.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n    if (\n      this.state.pos === start ||\n      (len != null && this.state.pos - start !== len) ||\n      invalid\n    ) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix: number): void {\n    const start = this.state.pos;\n    let isBigInt = false;\n\n    this.state.pos += 2; // 0x\n    const val = this.readInt(radix);\n    if (val == null) {\n      this.raise(this.state.start + 2, Errors.InvalidDigit, radix);\n    }\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === charCodes.lowercaseN) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === charCodes.lowercaseM) {\n      throw this.raise(start, Errors.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, Errors.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    this.finishToken(tt.num, val);\n  }\n\n  // Read an integer, octal integer, or floating-point number.\n\n  readNumber(startsWithDot: boolean): void {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, Errors.InvalidNumber);\n    }\n    const hasLeadingZero =\n      this.state.pos - start >= 2 &&\n      this.input.charCodeAt(start) === charCodes.digit0;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, Errors.StrictOctalLiteral);\n      if (!this.state.strict) {\n        // disallow numeric separators in non octal decimals and legacy octal likes\n        const underscorePos = integer.indexOf(\"_\");\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, Errors.ZeroDigitNumericSeparator);\n        }\n      }\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n    if (next === charCodes.dot && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (\n      (next === charCodes.uppercaseE || next === charCodes.lowercaseE) &&\n      !isOctal\n    ) {\n      next = this.input.charCodeAt(++this.state.pos);\n      if (next === charCodes.plusSign || next === charCodes.dash) {\n        ++this.state.pos;\n      }\n      if (this.readInt(10) === null) {\n        this.raise(start, Errors.InvalidOrMissingExponent);\n      }\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === charCodes.lowercaseN) {\n      // disallow floats, legacy octal syntax and non octal decimals\n      // new style octal (\"0o\") is handled in this.readRadixNumber\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, Errors.InvalidBigIntLiteral);\n      }\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === charCodes.lowercaseM) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, Errors.InvalidDecimal);\n      }\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, Errors.NumberIdentifier);\n    }\n\n    // remove \"_\" for numeric literal separator, and trailing `m` or `n`\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(tt.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(tt.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(tt.num, val);\n  }\n\n  // Read a string value, interpreting backslash-escapes.\n\n  readCodePoint(throwOnInvalid: boolean): number | null {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === charCodes.leftCurlyBrace) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(\n        this.input.indexOf(\"}\", this.state.pos) - this.state.pos,\n        true,\n        throwOnInvalid,\n      );\n      ++this.state.pos;\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, Errors.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n    return code;\n  }\n\n  readString(quote: number): void {\n    let out = \"\",\n      chunkStart = ++this.state.pos;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, Errors.UnterminatedString);\n      }\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n      if (ch === charCodes.backslash) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        // $FlowFixMe\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (\n        ch === charCodes.lineSeparator ||\n        ch === charCodes.paragraphSeparator\n      ) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, Errors.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(tt.string, out);\n  }\n\n  // Reads template string tokens.\n\n  readTmplToken(): void {\n    let out = \"\",\n      chunkStart = this.state.pos,\n      containsInvalid = false;\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, Errors.UnterminatedTemplate);\n      }\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (\n        ch === charCodes.graveAccent ||\n        (ch === charCodes.dollarSign &&\n          this.input.charCodeAt(this.state.pos + 1) ===\n            charCodes.leftCurlyBrace)\n      ) {\n        if (this.state.pos === this.state.start && this.match(tt.template)) {\n          if (ch === charCodes.dollarSign) {\n            this.state.pos += 2;\n            this.finishToken(tt.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(tt.backQuote);\n            return;\n          }\n        }\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(tt.template, containsInvalid ? null : out);\n        return;\n      }\n      if (ch === charCodes.backslash) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n        switch (ch) {\n          case charCodes.carriageReturn:\n            if (this.input.charCodeAt(this.state.pos) === charCodes.lineFeed) {\n              ++this.state.pos;\n            }\n          // fall through\n          case charCodes.lineFeed:\n            out += \"\\n\";\n            break;\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(pos: number, message: ErrorTemplate) {\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\n      this.raise(pos, message);\n    } else {\n      this.state.strictErrors.set(pos, message);\n    }\n  }\n\n  // Used to read escaped characters\n  readEscapedChar(inTemplate: boolean): string | null {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n    switch (ch) {\n      case charCodes.lowercaseN:\n        return \"\\n\";\n      case charCodes.lowercaseR:\n        return \"\\r\";\n      case charCodes.lowercaseX: {\n        const code = this.readHexChar(2, false, throwOnInvalid);\n        return code === null ? null : String.fromCharCode(code);\n      }\n      case charCodes.lowercaseU: {\n        const code = this.readCodePoint(throwOnInvalid);\n        return code === null ? null : String.fromCodePoint(code);\n      }\n      case charCodes.lowercaseT:\n        return \"\\t\";\n      case charCodes.lowercaseB:\n        return \"\\b\";\n      case charCodes.lowercaseV:\n        return \"\\u000b\";\n      case charCodes.lowercaseF:\n        return \"\\f\";\n      case charCodes.carriageReturn:\n        if (this.input.charCodeAt(this.state.pos) === charCodes.lineFeed) {\n          ++this.state.pos;\n        }\n      // fall through\n      case charCodes.lineFeed:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n      // fall through\n      case charCodes.lineSeparator:\n      case charCodes.paragraphSeparator:\n        return \"\";\n      case charCodes.digit8:\n      case charCodes.digit9:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(\n            this.state.pos - 1,\n            Errors.StrictNumericEscape,\n          );\n        }\n      // fall through\n      default:\n        if (ch >= charCodes.digit0 && ch <= charCodes.digit7) {\n          const codePos = this.state.pos - 1;\n          const match = this.input\n            .substr(this.state.pos - 1, 3)\n            .match(/^[0-7]+/);\n\n          // This is never null, because of the if condition above.\n          /*:: invariant(match !== null) */\n          let octalStr = match[0];\n\n          let octal = parseInt(octalStr, 8);\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n          if (\n            octalStr !== \"0\" ||\n            next === charCodes.digit8 ||\n            next === charCodes.digit9\n          ) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(codePos, Errors.StrictNumericEscape);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  // Used to read character escape sequences ('\\x', '\\u').\n\n  readHexChar(\n    len: number,\n    forceLen: boolean,\n    throwOnInvalid: boolean,\n  ): number | null {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, Errors.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n    return n;\n  }\n\n  // Read an identifier, and return it as a string. Sets `this.state.containsEsc`\n  // to whether the word contained a '\\u' escape.\n  //\n  // Incrementally adds only escaped chars, adding other chunks as-is\n  // as a micro-optimization.\n  //\n  // When `firstCode` is given, it assumes it is always an identifier start and\n  // will skip reading start position again\n\n  readWord1(firstCode: number | void): string {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === charCodes.backslash) {\n        this.state.containsEsc = true;\n\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck =\n          this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== charCodes.lowercaseU) {\n          this.raise(this.state.pos, Errors.MissingUnicodeEscape);\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, Errors.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  // Read an identifier or keyword token. Will check for reserved\n  // words when necessary.\n\n  readWord(firstCode: number | void): void {\n    const word = this.readWord1(firstCode);\n    const type = keywordTypes.get(word) || tt.name;\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes(): void {\n    const kw = this.state.type.keyword;\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, Errors.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  // the prevType is required by the jsx plugin\n  // eslint-disable-next-line no-unused-vars\n  updateContext(prevType: TokenType): void {\n    this.state.type.updateContext?.(this.state.context);\n  }\n}\n","// @flow\n\nimport {\n  CLASS_ELEMENT_KIND_ACCESSOR,\n  CLASS_ELEMENT_FLAG_STATIC,\n  type ClassElementTypes,\n} from \"./scopeflags\";\nimport { Errors, type raiseFunction } from \"../parser/error\";\n\nexport class ClassScope {\n  // A list of private named declared in the current class\n  privateNames: Set<string> = new Set();\n\n  // A list of private getters of setters without their counterpart\n  loneAccessors: Map<string, ClassElementTypes> = new Map();\n\n  // A list of private names used before being defined, mapping to\n  // their position.\n  undefinedPrivateNames: Map<string, number> = new Map();\n}\n\nexport default class ClassScopeHandler {\n  stack: Array<ClassScope> = [];\n  declare raise: raiseFunction;\n  undefinedPrivateNames: Map<string, number> = new Map();\n\n  constructor(raise: raiseFunction) {\n    this.raise = raise;\n  }\n\n  current(): ClassScope {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n\n    // Migrate the usage of not yet defined private names to the outer\n    // class scope, or raise an error if we reached the top-level scope.\n\n    const current = this.current();\n\n    // Array.from is needed because this is compiled to an array-like for loop\n    for (const [name, pos] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, Errors.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(\n    name: string,\n    elementType: ClassElementTypes,\n    pos: number,\n  ) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n\n        // The private name can be duplicated only if it is used by\n        // two accessors with different kind (get and set), and if\n        // they have the same placement (static or not).\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, Errors.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name: string, pos: number) {\n    let classScope;\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      // top-level\n      this.raise(pos, Errors.InvalidPrivateFieldResolution, name);\n    }\n  }\n}\n","// @flow\n\nimport type { ErrorTemplate, raiseFunction } from \"../parser/error\";\n\n/*:: declare var invariant; */\n/**\n * @module util/expression-scope\n\nExpressionScope is used to track declaration errors in these ambiguous patterns:\n\n- CoverParenthesizedExpressionAndArrowParameterList\n  e.g. we don't know if `({ x })` is an parenthesized expression or an\n  arrow function parameters until we see an `=>` after `)`.\n\n- CoverCallExpressionAndAsyncArrowHead\n   e.g. we don't know if `async({ x })` is a call expression or an async arrow\n   function parameters until we see an `=>` after `)`\n\nThe following declaration errors (@see parser/error-message) will be recorded in\nsome expression scopes and thrown later when we know what the ambigous pattern is\n\n- AwaitBindingIdentifier\n- AwaitExpressionFormalParameter\n- YieldInParameter\n- InvalidParenthesizedAssignment when parenthesized is an identifier\n\nThere are four different expression scope\n- Expression\n  A general scope that represents program / function body / static block. No errors\n  will be recorded nor thrown in this scope.\n\n- MaybeArrowParameterDeclaration\n  A scope that represents ambiguous arrow head e.g. `(x)`. Errors will be recorded\n  alongside parent scopes and thrown when `ExpressionScopeHandler#validateAsPattern`\n  is called.\n\n- MaybeAsyncArrowParameterDeclaration\n  A scope that represents ambiguous async arrow head e.g. `async(x)`. Errors will\n  be recorded alongside parent scopes and thrown when\n  `ExpressionScopeHandler#validateAsPattern` is called.\n\n- ParameterDeclaration\n  A scope that represents unambiguous function parameters `function(x)`. Errors\n  recorded in this scope will be thrown immediately. No errors will be recorded in\n  this scope.\n\n// @see {@link https://docs.google.com/document/d/1FAvEp9EUK-G8kHfDIEo_385Hs2SUBCYbJ5H-NnLvq8M|V8 Expression Scope design docs}\n */\n\nconst kExpression = 0,\n  kMaybeArrowParameterDeclaration = 1,\n  kMaybeAsyncArrowParameterDeclaration = 2,\n  kParameterDeclaration = 3;\n\ntype ExpressionScopeType = 0 | 1 | 2 | 3;\n\nclass ExpressionScope {\n  type: ExpressionScopeType;\n\n  constructor(type: ExpressionScopeType = kExpression) {\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return (\n      this.type === kMaybeAsyncArrowParameterDeclaration ||\n      this.type === kMaybeArrowParameterDeclaration\n    );\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  errors: Map</* pos */ number, /* message */ ErrorTemplate> = new Map();\n  constructor(type: 1 | 2) {\n    super(type);\n  }\n  recordDeclarationError(pos: number, template: ErrorTemplate) {\n    this.errors.set(pos, template);\n  }\n  clearDeclarationError(pos: number) {\n    this.errors.delete(pos);\n  }\n  iterateErrors(iterator: (template: ErrorTemplate, pos: number) => void) {\n    this.errors.forEach(iterator);\n  }\n}\n\nexport default class ExpressionScopeHandler {\n  stack: Array<ExpressionScope> = [new ExpressionScope()];\n  declare raise: raiseFunction;\n  constructor(raise: raiseFunction) {\n    this.raise = raise;\n  }\n  enter(scope: ExpressionScope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  /**\n   * Record likely parameter initializer errors\n   *\n   * When current scope is a ParameterDeclaration, the error will be thrown immediately,\n   * otherwise it will be recorded to any ancestry MaybeArrowParameterDeclaration and\n   * MaybeAsyncArrowParameterDeclaration scope until an Expression scope is seen.\n   * @param {number} pos Error position\n   * @param {ErrorTemplate} template Error template\n   * @memberof ExpressionScopeHandler\n   */\n  recordParameterInitializerError(pos: number, template: ErrorTemplate): void {\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n        scope.recordDeclarationError(pos, template);\n      } else {\n        /*:: invariant(scope.type == kExpression) */\n        // Type-Expression is the boundary where initializer error can populate to\n        return;\n      }\n      scope = stack[--i];\n    }\n    /* eslint-disable @babel/development-internal/dry-error-messages */\n    this.raise(pos, template);\n  }\n\n  /**\n   * Record parenthesized identifier errors\n   *\n   * A parenthesized identifier in LHS can be ambiguous because the assignment\n   * can be transformed to an assignable later, but not vice versa:\n   * For example, in `([(a) = []] = []) => {}`, we think `(a) = []` is an LHS in `[(a) = []]`,\n   * an LHS within `[(a) = []] = []`. However the LHS chain is then transformed by toAssignable,\n   * and we should throw assignment `(a)`, which is only valid in LHS. Hence we record the\n   * location of parenthesized `(a)` to current scope if it is one of MaybeArrowParameterDeclaration\n   * and MaybeAsyncArrowParameterDeclaration\n   *\n   * Unlike `recordParameterInitializerError`, we don't record to ancestry scope because we\n   * validate arrow head parsing scope before exit, and then the LHS will be unambiguous:\n   * For example, in `( x = ( [(a) = []] = [] ) ) => {}`, we should not record `(a)` in `( x = ... ) =>`\n   * arrow scope because when we finish parsing `( [(a) = []] = [] )`, it is an unambiguous assignment\n   * expression and can not be cast to pattern\n   * @param {number} pos\n   * @param {ErrorTemplate} template\n   * @returns {void}\n   * @memberof ExpressionScopeHandler\n   */\n  recordParenthesizedIdentifierError(\n    pos: number,\n    template: ErrorTemplate,\n  ): void {\n    const { stack } = this;\n    const scope: ExpressionScope = stack[stack.length - 1];\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, template);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n      scope.recordDeclarationError(pos, template);\n    } else {\n      return;\n    }\n  }\n\n  /**\n   * Record likely async arrow parameter errors\n   *\n   * Errors will be recorded to any ancestry MaybeAsyncArrowParameterDeclaration\n   * scope until an Expression scope is seen.\n   * @param {number} pos\n   * @param {ErrorTemplate} template\n   * @memberof ExpressionScopeHandler\n   */\n  recordAsyncArrowParametersError(pos: number, template: ErrorTemplate): void {\n    const { stack } = this;\n    let i = stack.length - 1;\n    let scope: ExpressionScope = stack[i];\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n        scope.recordDeclarationError(pos, template);\n      }\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern(): void {\n    const { stack } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    /*:: invariant(currentScope instanceof ArrowHeadParsingScope) */\n    currentScope.iterateErrors((template, pos) => {\n      /* eslint-disable @babel/development-internal/dry-error-messages */\n      this.raise(pos, template);\n      // iterate from parent scope\n      let i = stack.length - 2;\n      let scope = stack[i];\n      while (scope.canBeArrowParameterDeclaration()) {\n        /*:: invariant(scope instanceof ArrowHeadParsingScope) */\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n}\n\nexport function newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\n\nexport function newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\n\nexport function newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\n\nexport function newExpressionScope() {\n  return new ExpressionScope();\n}\n","// @flow\n\nimport { types as tt, TokenType } from \"../tokenizer/types\";\nimport Tokenizer from \"../tokenizer\";\nimport State from \"../tokenizer/state\";\nimport type { Node } from \"../types\";\nimport { lineBreak } from \"../util/whitespace\";\nimport { isIdentifierChar } from \"../util/identifier\";\nimport ClassScopeHandler from \"../util/class-scope\";\nimport ExpressionScopeHandler from \"../util/expression-scope\";\nimport { SCOPE_PROGRAM } from \"../util/scopeflags\";\nimport ProductionParameterHandler, {\n  PARAM_AWAIT,\n  PARAM,\n} from \"../util/production-parameter\";\nimport { Errors, type ErrorTemplate, ErrorCodes } from \"./error\";\nimport type { ParsingError } from \"./error\";\n/*::\nimport type ScopeHandler from \"../util/scope\";\n*/\n\ntype TryParse<Node, Error, Thrown, Aborted, FailState> = {\n  node: Node,\n  error: Error,\n  thrown: Thrown,\n  aborted: Aborted,\n  failState: FailState,\n};\n\n// ## Parser utilities\n\nexport default class UtilParser extends Tokenizer {\n  // Forward-declaration: defined in parser/index.js\n  /*::\n  +getScopeHandler: () => Class<ScopeHandler<*>>;\n  */\n\n  // TODO\n\n  addExtra(node: Node, key: string, val: any): void {\n    if (!node) return;\n\n    const extra = (node.extra = node.extra || {});\n    extra[key] = val;\n  }\n\n  // TODO\n\n  isRelational(op: \"<\" | \">\"): boolean {\n    return this.match(tt.relational) && this.state.value === op;\n  }\n\n  // TODO\n\n  expectRelational(op: \"<\" | \">\"): void {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, tt.relational);\n    }\n  }\n\n  // Tests whether parsed token is a contextual keyword.\n\n  isContextual(name: string): boolean {\n    return (\n      this.match(tt.name) &&\n      this.state.value === name &&\n      !this.state.containsEsc\n    );\n  }\n\n  isUnparsedContextual(nameStart: number, name: string): boolean {\n    const nameEnd = nameStart + name.length;\n    if (this.input.slice(nameStart, nameEnd) === name) {\n      const nextCh = this.input.charCodeAt(nameEnd);\n      return !(\n        isIdentifierChar(nextCh) ||\n        // check if `nextCh is between 0xd800 - 0xdbff,\n        // if `nextCh` is NaN, `NaN & 0xfc00` is 0, the function\n        // returns true\n        (nextCh & 0xfc00) === 0xd800\n      );\n    }\n    return false;\n  }\n\n  isLookaheadContextual(name: string): boolean {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  // Consumes contextual keyword if possible.\n\n  eatContextual(name: string): boolean {\n    return this.isContextual(name) && this.eat(tt.name);\n  }\n\n  // Asserts that following token is given contextual keyword.\n\n  expectContextual(name: string, template?: ErrorTemplate): void {\n    if (!this.eatContextual(name)) this.unexpected(null, template);\n  }\n\n  // Test whether a semicolon can be inserted at the current position.\n\n  canInsertSemicolon(): boolean {\n    return (\n      this.match(tt.eof) ||\n      this.match(tt.braceR) ||\n      this.hasPrecedingLineBreak()\n    );\n  }\n\n  hasPrecedingLineBreak(): boolean {\n    return lineBreak.test(\n      this.input.slice(this.state.lastTokEnd, this.state.start),\n    );\n  }\n\n  hasFollowingLineBreak(): boolean {\n    return lineBreak.test(\n      this.input.slice(this.state.end, this.nextTokenStart()),\n    );\n  }\n\n  // TODO\n\n  isLineTerminator(): boolean {\n    return this.eat(tt.semi) || this.canInsertSemicolon();\n  }\n\n  // Consume a semicolon, or, failing that, see if we are allowed to\n  // pretend that there is a semicolon at this position.\n\n  semicolon(allowAsi: boolean = true): void {\n    if (allowAsi ? this.isLineTerminator() : this.eat(tt.semi)) return;\n    this.raise(this.state.lastTokEnd, Errors.MissingSemicolon);\n  }\n\n  // Expect a token of a given type. If found, consume it, otherwise,\n  // raise an unexpected token error at given pos.\n\n  expect(type: TokenType, pos?: ?number): void {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  // Throws if the current token and the prev one are separated by a space.\n  assertNoSpace(message: string = \"Unexpected space.\"): void {\n    if (this.state.start > this.state.lastTokEnd) {\n      /* eslint-disable @babel/development-internal/dry-error-messages */\n      this.raise(this.state.lastTokEnd, {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedSpace\",\n        template: message,\n      });\n      /* eslint-enable @babel/development-internal/dry-error-messages */\n    }\n  }\n\n  // Raise an unexpected token error. Can take the expected token type\n  // instead of a message string.\n\n  unexpected(\n    pos: ?number,\n    messageOrType: ErrorTemplate | TokenType = {\n      code: ErrorCodes.SyntaxError,\n      reasonCode: \"UnexpectedToken\",\n      template: \"Unexpected token\",\n    },\n  ): empty {\n    if (messageOrType instanceof TokenType) {\n      messageOrType = {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedToken\",\n        template: `Unexpected token, expected \"${messageOrType.label}\"`,\n      };\n    }\n\n    /* eslint-disable @babel/development-internal/dry-error-messages */\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n    /* eslint-enable @babel/development-internal/dry-error-messages */\n  }\n\n  expectPlugin(name: string, pos?: ?number): true {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(\n        pos != null ? pos : this.state.start,\n        { missingPlugin: [name] },\n        `This experimental syntax requires enabling the parser plugin: '${name}'`,\n      );\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names: Array<string>, pos?: ?number): void {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(\n        pos != null ? pos : this.state.start,\n        { missingPlugin: names },\n        `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\n          \", \",\n        )}'`,\n      );\n    }\n  }\n\n  // tryParse will clone parser state.\n  // It is expensive and should be used with cautions\n  tryParse<T: Node | $ReadOnlyArray<Node>>(\n    fn: (abort: (node?: T) => empty) => T,\n    oldState: State = this.state.clone(),\n  ):\n    | TryParse<T, null, false, false, null>\n    | TryParse<T | null, ParsingError, boolean, false, State>\n    | TryParse<T | null, null, false, true, State> {\n    const abortSignal: { node: T | null } = { node: null };\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        // tokensLength should be preserved during error recovery mode\n        // since the parser does not halt and will instead parse the\n        // remaining tokens\n        this.state.tokensLength = failState.tokensLength;\n        return {\n          node,\n          error: (failState.errors[oldState.errors.length]: ParsingError),\n          thrown: false,\n          aborted: false,\n          failState,\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null,\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n      if (error instanceof SyntaxError) {\n        return { node: null, error, thrown: true, aborted: false, failState };\n      }\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState,\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(\n    refExpressionErrors: ?ExpressionErrors,\n    andThrow: boolean,\n  ) {\n    if (!refExpressionErrors) return false;\n    const { shorthandAssign, doubleProto, optionalParameters } =\n      refExpressionErrors;\n    if (!andThrow) {\n      return (\n        shorthandAssign >= 0 || doubleProto >= 0 || optionalParameters >= 0\n      );\n    }\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, Errors.DuplicateProto);\n    }\n    if (optionalParameters >= 0) {\n      this.unexpected(optionalParameters);\n    }\n  }\n\n  /**\n   * Test if current token is a literal property name\n   * https://tc39.es/ecma262/#prod-LiteralPropertyName\n   * LiteralPropertyName:\n   *   IdentifierName\n   *   StringLiteral\n   *   NumericLiteral\n   *   BigIntLiteral\n   */\n  isLiteralPropertyName(): boolean {\n    return (\n      this.match(tt.name) ||\n      !!this.state.type.keyword ||\n      this.match(tt.string) ||\n      this.match(tt.num) ||\n      this.match(tt.bigint) ||\n      this.match(tt.decimal)\n    );\n  }\n\n  /*\n   * Test if given node is a PrivateName\n   * will be overridden in ESTree plugin\n   */\n  isPrivateName(node: Node): boolean {\n    return node.type === \"PrivateName\";\n  }\n\n  /*\n   * Return the string value of a given private name\n   * WITHOUT `#`\n   * @see {@link https://tc39.es/proposal-class-fields/#sec-private-names-static-semantics-stringvalue}\n   */\n  getPrivateNameSV(node: Node): string {\n    return node.id.name;\n  }\n\n  /*\n   * Return whether the given node is a member/optional chain that\n   * contains a private name as its property\n   * It is overridden in ESTree plugin\n   */\n  hasPropertyAsPrivateName(node: Node): boolean {\n    return (\n      (node.type === \"MemberExpression\" ||\n        node.type === \"OptionalMemberExpression\") &&\n      this.isPrivateName(node.property)\n    );\n  }\n\n  isOptionalChain(node: Node): boolean {\n    return (\n      node.type === \"OptionalMemberExpression\" ||\n      node.type === \"OptionalCallExpression\"\n    );\n  }\n\n  isObjectProperty(node: Node): boolean {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node: Node): boolean {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(\n    inModule: boolean = this.options.sourceType === \"module\",\n  ): () => void {\n    // Initialize state\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n\n    const oldExportedIdentifiers = this.exportedIdentifiers;\n    this.exportedIdentifiers = new Set();\n\n    // initialize scopes\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n\n    return () => {\n      // Revert state\n      this.state.labels = oldLabels;\n      this.exportedIdentifiers = oldExportedIdentifiers;\n\n      // Revert scopes\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n}\n\n/**\n * The ExpressionErrors is a context struct used to track ambiguous patterns\n * When we are sure the parsed pattern is a RHS, which means it is not a pattern,\n * we will throw on this position on invalid assign syntax, otherwise it will be reset to -1\n *\n * Types of ExpressionErrors:\n *\n * - **shorthandAssign**: track initializer `=` position\n * - **doubleProto**: track the duplicate `__proto__` key position\n * - **optionalParameters**: track the optional paramter (`?`).\n * It's only used by typescript and flow plugins\n */\nexport class ExpressionErrors {\n  shorthandAssign = -1;\n  doubleProto = -1;\n  optionalParameters = -1;\n}\n","// @flow\n\nimport type Parser from \"./index\";\nimport UtilParser from \"./util\";\nimport { SourceLocation, type Position } from \"../util/location\";\nimport type { Comment, Node as NodeType, NodeBase } from \"../types\";\n\n// Start an AST node, attaching a start offset.\n\nclass Node implements NodeBase {\n  constructor(parser: Parser, pos: number, loc: Position) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser?.options.ranges) this.range = [pos, 0];\n    if (parser?.filename) this.loc.filename = parser.filename;\n  }\n\n  type: string;\n  start: number;\n  end: number;\n  loc: SourceLocation;\n  range: [number, number];\n  leadingComments: Array<Comment>;\n  trailingComments: Array<Comment>;\n  innerComments: Array<Comment>;\n  extra: { [key: string]: any };\n\n  __clone(): this {\n    // $FlowIgnore\n    const newNode: any = new Node();\n    const keys = Object.keys(this);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      // Do not clone comments that are already attached to the node\n      if (\n        key !== \"leadingComments\" &&\n        key !== \"trailingComments\" &&\n        key !== \"innerComments\"\n      ) {\n        // $FlowIgnore\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  }\n}\n\nexport class NodeUtils extends UtilParser {\n  startNode<T: NodeType>(): T {\n    // $FlowIgnore\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt<T: NodeType>(pos: number, loc: Position): T {\n    // $FlowIgnore\n    return new Node(this, pos, loc);\n  }\n\n  /** Start a new node with a previous node's location. */\n  startNodeAtNode<T: NodeType>(type: NodeType): T {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  // Finish an AST node, adding `type` and `end` properties.\n\n  finishNode<T: NodeType>(node: T, type: string): T {\n    return this.finishNodeAt(\n      node,\n      type,\n      this.state.lastTokEnd,\n      this.state.lastTokEndLoc,\n    );\n  }\n\n  // Finish node at given position\n\n  finishNodeAt<T: NodeType>(\n    node: T,\n    type: string,\n    pos: number,\n    loc: Position,\n  ): T {\n    if (process.env.NODE_ENV !== \"production\" && node.end > 0) {\n      throw new Error(\n        \"Do not call finishNode*() twice on the same node.\" +\n          \" Instead use resetEndLocation() or change type directly.\",\n      );\n    }\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node: NodeBase, start: number, startLoc: Position): void {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(\n    node: NodeBase,\n    end?: number = this.state.lastTokEnd,\n    endLoc?: Position = this.state.lastTokEndLoc,\n  ): void {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  /**\n   * Reset the start location of node to the start location of locationNode\n   */\n  resetStartLocationFromNode(node: NodeBase, locationNode: NodeBase): void {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n}\n","// @flow\n\n/*:: declare var invariant; */\nimport * as charCodes from \"charcodes\";\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport type {\n  TSParameterProperty,\n  Decorator,\n  Expression,\n  Node,\n  Pattern,\n  RestElement,\n  SpreadElement,\n  /*:: Identifier, */\n  /*:: ObjectExpression, */\n  /*:: ObjectPattern, */\n} from \"../types\";\nimport type { Pos, Position } from \"../util/location\";\nimport {\n  isStrictBindOnlyReservedWord,\n  isStrictBindReservedWord,\n} from \"../util/identifier\";\nimport { NodeUtils } from \"./node\";\nimport { type BindingTypes, BIND_NONE } from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport { Errors } from \"./error\";\n\nconst unwrapParenthesizedExpression = (node: Node): Node => {\n  return node.type === \"ParenthesizedExpression\"\n    ? unwrapParenthesizedExpression(node.expression)\n    : node;\n};\n\nexport default class LValParser extends NodeUtils {\n  // Forward-declaration: defined in expression.js\n  /*::\n  +parseIdentifier: (liberal?: boolean) => Identifier;\n  +parseMaybeAssignAllowIn: (\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n    refNeedsArrowPos?: ?Pos,\n  ) => Expression;\n  +parseObjectLike: <T: ObjectPattern | ObjectExpression>(\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ) => T;\n  */\n  // Forward-declaration: defined in statement.js\n  /*::\n  +parseDecorator: () => Decorator;\n  */\n\n  /**\n   * Convert existing expression atom to assignable pattern\n   * if possible. Also checks invalid destructuring targets:\n\n   - Parenthesized Destructuring patterns\n   - RestElement is not the last element\n   - Missing `=` in assignment pattern\n\n   NOTE: There is a corresponding \"isAssignable\" method in flow.js.\n   When this one is updated, please check if also that one needs to be updated.\n\n   * @param {Node} node The expression atom\n   * @param {boolean} [isLHS=false] Whether we are parsing a LeftHandSideExpression. If isLHS is `true`, the following cases are allowed:\n                                    `[(a)] = [0]`, `[(a.b)] = [0]`\n\n   * @returns {Node} The converted assignable pattern\n   * @memberof LValParser\n   */\n  toAssignable(node: Node, isLHS: boolean = false): Node {\n    let parenthesized = undefined;\n    if (node.type === \"ParenthesizedExpression\" || node.extra?.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n      if (isLHS) {\n        // an LHS can be reinterpreted to a binding pattern but not vice versa.\n        // therefore a parenthesized identifier is ambiguous until we are sure it is an assignment expression\n        // i.e. `([(a) = []] = []) => {}`\n        // see also `recordParenthesizedIdentifierError` signature in packages/babel-parser/src/util/expression-scope.js\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(\n            node.start,\n            Errors.InvalidParenthesizedAssignment,\n          );\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          // A parenthesized member expression can be in LHS but not in pattern.\n          // If the LHS is later interpreted as a pattern, `checkLVal` will throw for member expression binding\n          // i.e. `([(a.b) = []] = []) => {}`\n          this.raise(node.start, Errors.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, Errors.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        for (\n          let i = 0, length = node.properties.length, last = length - 1;\n          i < length;\n          i++\n        ) {\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (\n            isLast &&\n            prop.type === \"RestElement\" &&\n            node.extra?.trailingComma\n          ) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\": {\n        this.checkToRestConversion(node);\n\n        node.type = \"RestElement\";\n        const arg = node.argument;\n        this.toAssignable(arg, isLHS);\n        break;\n      }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, node.extra?.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, Errors.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        /*::invariant (parenthesized !== undefined) */\n        this.toAssignable(parenthesized, isLHS);\n        break;\n\n      default:\n      // We don't know how to deal with this node. It will\n      // be reported by a later call to checkLVal\n    }\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(\n    prop: Node,\n    isLast: boolean,\n    isLHS: boolean,\n  ) {\n    if (prop.type === \"ObjectMethod\") {\n      const error =\n        prop.kind === \"get\" || prop.kind === \"set\"\n          ? Errors.PatternHasAccessor\n          : Errors.PatternHasMethod;\n\n      /* eslint-disable @babel/development-internal/dry-error-messages */\n      this.raise(prop.key.start, error);\n      /* eslint-enable @babel/development-internal/dry-error-messages */\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  // Convert list of expression atoms to binding list.\n\n  toAssignableList(\n    exprList: Expression[],\n    trailingCommaPos?: ?number,\n    isLHS: boolean,\n  ): $ReadOnlyArray<Pattern> {\n    let end = exprList.length;\n    if (end) {\n      const last = exprList[end - 1];\n      if (last?.type === \"RestElement\") {\n        --end;\n      } else if (last?.type === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n        if (\n          arg.type !== \"Identifier\" &&\n          arg.type !== \"MemberExpression\" &&\n          arg.type !== \"ArrayPattern\" &&\n          arg.type !== \"ObjectPattern\"\n        ) {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n    return exprList;\n  }\n\n  // Convert list of expression atoms to a list of\n\n  toReferencedList(\n    exprList: $ReadOnlyArray<?Expression>,\n    isParenthesizedExpr?: boolean, // eslint-disable-line no-unused-vars\n  ): $ReadOnlyArray<?Expression> {\n    return exprList;\n  }\n\n  toReferencedListDeep(\n    exprList: $ReadOnlyArray<?Expression>,\n    isParenthesizedExpr?: boolean,\n  ): void {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if (expr?.type === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  // Parses spread element.\n\n  parseSpread(\n    refExpressionErrors: ?ExpressionErrors,\n    refNeedsArrowPos?: ?Pos,\n  ): SpreadElement {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(\n      refExpressionErrors,\n      undefined,\n      refNeedsArrowPos,\n    );\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingRestProperty\n  // https://tc39.es/ecma262/#prod-BindingRestElement\n  parseRestBinding(): RestElement {\n    const node = this.startNode();\n    this.next(); // eat `...`\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  // Parses lvalue (assignable) atom.\n  parseBindingAtom(): Pattern {\n    // https://tc39.es/ecma262/#prod-BindingPattern\n    switch (this.state.type) {\n      case tt.bracketL: {\n        const node = this.startNode();\n        this.next();\n        node.elements = this.parseBindingList(\n          tt.bracketR,\n          charCodes.rightSquareBracket,\n          true,\n        );\n        return this.finishNode(node, \"ArrayPattern\");\n      }\n\n      case tt.braceL:\n        return this.parseObjectLike(tt.braceR, true);\n    }\n\n    // https://tc39.es/ecma262/#prod-BindingIdentifier\n    return this.parseIdentifier();\n  }\n\n  // https://tc39.es/ecma262/#prod-BindingElementList\n  parseBindingList(\n    close: TokenType,\n    closeCharCode: $Values<typeof charCodes>,\n    allowEmpty?: boolean,\n    allowModifiers?: boolean,\n  ): $ReadOnlyArray<Pattern | TSParameterProperty> {\n    const elts: Array<Pattern | TSParameterProperty> = [];\n    let first = true;\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n      }\n      if (allowEmpty && this.match(tt.comma)) {\n        // $FlowFixMe This method returns `$ReadOnlyArray<?Pattern>` if `allowEmpty` is set.\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(tt.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n        if (this.match(tt.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, Errors.UnsupportedParameterDecorator);\n        }\n        // invariant: hasPlugin(\"decorators-legacy\")\n        while (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n        }\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n    return elts;\n  }\n\n  parseAssignableListItem(\n    allowModifiers: ?boolean,\n    decorators: Decorator[],\n  ): Pattern | TSParameterProperty {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n    return elt;\n  }\n\n  // Used by flow/typescript plugin to add type annotations to binding elements\n  parseAssignableListItemTypes(param: Pattern): Pattern {\n    return param;\n  }\n\n  // Parses assignment pattern around given atom if possible.\n  // https://tc39.es/ecma262/#prod-BindingElement\n  parseMaybeDefault(\n    startPos?: ?number,\n    startLoc?: ?Position,\n    left?: ?Pattern,\n  ): Pattern {\n    startLoc = startLoc ?? this.state.startLoc;\n    startPos = startPos ?? this.state.start;\n    // $FlowIgnore\n    left = left ?? this.parseBindingAtom();\n    if (!this.eat(tt.eq)) return left;\n\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  /**\n   * Verify that if a node is an lval - something that can be assigned to.\n   *\n   * @param {Expression} expr The given node\n   * @param {string} contextDescription The auxiliary context information printed when error is thrown\n   * @param {BindingTypes} [bindingType=BIND_NONE] The desired binding type. If the given node is an identifier and `bindingType` is not\n                                                   BIND_NONE, `checkLVal` will register binding to the parser scope\n                                                   See also src/util/scopeflags.js\n   * @param {?Set<string>} checkClashes An optional string set to check if an identifier name is included. `checkLVal` will add checked\n                                        identifier name to `checkClashes` It is used in tracking duplicates in function parameter lists. If\n                                        it is nullish, `checkLVal` will skip duplicate checks\n   * @param {boolean} [disallowLetBinding] Whether an identifier named \"let\" should be disallowed\n   * @param {boolean} [strictModeChanged=false] Whether an identifier has been parsed in a sloppy context but should be reinterpreted as\n                                                strict-mode. e.g. `(arguments) => { \"use strict \"}`\n   * @memberof LValParser\n   */\n  checkLVal(\n    expr: Expression,\n    contextDescription: string,\n    bindingType: BindingTypes = BIND_NONE,\n    checkClashes: ?Set<string>,\n    disallowLetBinding?: boolean,\n    strictModeChanged?: boolean = false,\n  ): void {\n    switch (expr.type) {\n      case \"Identifier\": {\n        const { name } = expr;\n        if (\n          this.state.strict &&\n          // \"Global\" reserved words have already been checked by parseIdentifier,\n          // unless they have been found in the id or parameters of a strict-mode\n          // function in a sloppy context.\n          (strictModeChanged\n            ? isStrictBindReservedWord(name, this.inModule)\n            : isStrictBindOnlyReservedWord(name))\n        ) {\n          this.raise(\n            expr.start,\n            bindingType === BIND_NONE\n              ? Errors.StrictEvalArguments\n              : Errors.StrictEvalArgumentsBinding,\n            name,\n          );\n        }\n\n        if (checkClashes) {\n          if (checkClashes.has(name)) {\n            this.raise(expr.start, Errors.ParamDupe);\n          } else {\n            checkClashes.add(name);\n          }\n        }\n        if (disallowLetBinding && name === \"let\") {\n          this.raise(expr.start, Errors.LetInLexicalBinding);\n        }\n        if (!(bindingType & BIND_NONE)) {\n          this.scope.declareName(name, bindingType, expr.start);\n        }\n        break;\n      }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, Errors.InvalidPropertyBindingPattern);\n        }\n        break;\n\n      case \"ObjectPattern\":\n        for (let prop of expr.properties) {\n          if (this.isObjectProperty(prop)) prop = prop.value;\n          // If we find here an ObjectMethod, it's because this was originally\n          // an ObjectExpression which has then been converted.\n          // toAssignable already reported this error with a nicer message.\n          else if (this.isObjectMethod(prop)) continue;\n\n          this.checkLVal(\n            prop,\n            \"object destructuring pattern\",\n            bindingType,\n            checkClashes,\n            disallowLetBinding,\n          );\n        }\n        break;\n\n      case \"ArrayPattern\":\n        for (const elem of expr.elements) {\n          if (elem) {\n            this.checkLVal(\n              elem,\n              \"array destructuring pattern\",\n              bindingType,\n              checkClashes,\n              disallowLetBinding,\n            );\n          }\n        }\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(\n          expr.left,\n          \"assignment pattern\",\n          bindingType,\n          checkClashes,\n        );\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(\n          expr.argument,\n          \"rest element\",\n          bindingType,\n          checkClashes,\n        );\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(\n          expr.expression,\n          \"parenthesized expression\",\n          bindingType,\n          checkClashes,\n        );\n        break;\n\n      default: {\n        this.raise(\n          expr.start,\n          bindingType === BIND_NONE\n            ? Errors.InvalidLhs\n            : Errors.InvalidLhsBinding,\n          contextDescription,\n        );\n      }\n    }\n  }\n\n  checkToRestConversion(node: SpreadElement): void {\n    if (\n      node.argument.type !== \"Identifier\" &&\n      node.argument.type !== \"MemberExpression\"\n    ) {\n      this.raise(node.argument.start, Errors.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close: $Values<typeof charCodes>): void {\n    if (this.match(tt.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos: number) {\n    throw this.raise(pos, Errors.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos: number) {\n    this.raise(pos, Errors.RestTrailingComma);\n  }\n}\n","// @flow\n\n// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport * as N from \"../types\";\nimport LValParser from \"./lval\";\nimport {\n  isKeyword,\n  isReservedWord,\n  isStrictReservedWord,\n  isStrictBindReservedWord,\n  isIdentifierStart,\n  canBeReservedWord,\n} from \"../util/identifier\";\nimport { Position } from \"../util/location\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_OUTSIDE,\n  BIND_VAR,\n  SCOPE_ARROW,\n  SCOPE_CLASS,\n  SCOPE_DIRECT_SUPER,\n  SCOPE_FUNCTION,\n  SCOPE_SUPER,\n  SCOPE_PROGRAM,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport {\n  PARAM_AWAIT,\n  PARAM_IN,\n  PARAM_RETURN,\n  PARAM,\n  functionFlags,\n} from \"../util/production-parameter\";\nimport {\n  newArrowHeadScope,\n  newAsyncArrowScope,\n  newExpressionScope,\n} from \"../util/expression-scope\";\nimport { Errors, SourceTypeModuleErrors } from \"./error\";\nimport type { ParsingError } from \"./error\";\n\n/*::\nimport type { SourceType } from \"../options\";\n*/\n\nexport default class ExpressionParser extends LValParser {\n  // Forward-declaration: defined in statement.js\n  /*::\n  +parseBlock: (\n    allowDirectives?: boolean,\n    createNewLexicalScope?: boolean,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ) => N.BlockStatement;\n  +parseClass: (\n    node: N.Class,\n    isStatement: boolean,\n    optionalId?: boolean,\n  ) => N.Class;\n  +parseDecorators: (allowExport?: boolean) => void;\n  +parseFunction: <T: N.NormalFunction>(\n    node: T,\n    statement?: number,\n    allowExpressionBody?: boolean,\n    isAsync?: boolean,\n  ) => T;\n  +parseFunctionParams: (node: N.Function, allowModifiers?: boolean) => void;\n  +takeDecorators: (node: N.HasDecorators) => void;\n  +parseBlockOrModuleBlockBody: (\n    body: N.Statement[],\n    directives: ?(N.Directive[]),\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void\n  ) => void\n  +parseProgram: (\n    program: N.Program, end: TokenType, sourceType?: SourceType\n  ) => N.Program\n  */\n\n  // For object literal, check if property __proto__ has been used more than once.\n  // If the expression is a destructuring assignment, then __proto__ may appear\n  // multiple times. Otherwise, __proto__ is a duplicated key.\n\n  // For record expression, check if property __proto__ exists\n\n  checkProto(\n    prop: N.ObjectMember | N.SpreadElement,\n    isRecord: boolean,\n    protoRef: { used: boolean },\n    refExpressionErrors: ?ExpressionErrors,\n  ): void {\n    if (\n      prop.type === \"SpreadElement\" ||\n      this.isObjectMethod(prop) ||\n      prop.computed ||\n      // $FlowIgnore\n      prop.shorthand\n    ) {\n      return;\n    }\n\n    const key = prop.key;\n    // It is either an Identifier or a String/NumericLiteral\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, Errors.RecordNoProto);\n        return;\n      }\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          // Store the first redefinition's position, otherwise ignore because\n          // we are parsing ambiguous pattern\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, Errors.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr: N.Expression, potentialArrowAt: number): boolean {\n    return (\n      expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt\n    );\n  }\n\n  // Convenience method to parse an Expression only\n  getExpression(): N.Expression & N.ParserOutput {\n    let paramFlags = PARAM;\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    this.nextToken();\n    const expr = this.parseExpression();\n    if (!this.match(tt.eof)) {\n      this.unexpected();\n    }\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n    return expr;\n  }\n\n  // ### Expression parsing\n\n  // These nest, from the most general expression type at the top to\n  // 'atomic', nondivisible expression types at the bottom. Most of\n  // the functions will simply let the function (s) below them parse,\n  // and, *if* the syntactic construct they handle is present, wrap\n  // the AST node that the inner parser gave them in another node.\n\n  // Parse a full expression.\n  // - `disallowIn`\n  //   is used to forbid the `in` operator (in for loops initialization expressions)\n  //   When `disallowIn` is true, the production parameter [In] is not present.\n\n  // - `refExpressionErrors `\n  //   provides reference for storing '=' operator inside shorthand\n  //   property assignment in contexts where both object expression\n  //   and object pattern might appear (so it's possible to raise\n  //   delayed syntax error at correct position).\n\n  parseExpression(\n    disallowIn?: boolean,\n    refExpressionErrors?: ExpressionErrors,\n  ): N.Expression {\n    if (disallowIn) {\n      return this.disallowInAnd(() =>\n        this.parseExpressionBase(refExpressionErrors),\n      );\n    }\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  // https://tc39.es/ecma262/#prod-Expression\n  parseExpressionBase(refExpressionErrors?: ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n    if (this.match(tt.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n      while (this.eat(tt.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n    return expr;\n  }\n\n  // Set [~In] parameter for assignment expression\n  parseMaybeAssignDisallowIn(\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n  ) {\n    return this.disallowInAnd(() =>\n      this.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n    );\n  }\n\n  // Set [+In] parameter for assignment expression\n  parseMaybeAssignAllowIn(\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n  ) {\n    return this.allowInAnd(() =>\n      this.parseMaybeAssign(refExpressionErrors, afterLeftParse),\n    );\n  }\n\n  // This method is only used by\n  // the typescript and flow plugins.\n  setOptionalParametersError(\n    refExpressionErrors: ExpressionErrors,\n    resultError?: ParsingError,\n  ) {\n    refExpressionErrors.optionalParameters =\n      resultError?.pos ?? this.state.start;\n  }\n\n  // Parse an assignment expression. This includes applications of\n  // operators like `+=`.\n  // https://tc39.es/ecma262/#prod-AssignmentExpression\n  parseMaybeAssign(\n    refExpressionErrors?: ?ExpressionErrors,\n    afterLeftParse?: Function,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        let left = this.parseYield();\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(tt.parenL) || this.match(tt.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors);\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(tt.eq)) {\n        node.left = this.toAssignable(left, /* isLHS */ true);\n        refExpressionErrors.doubleProto = -1; // reset because double __proto__ is valid in assignment expression\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1; // reset because shorthand default was used correctly\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  // Parse a ternary conditional (`?:`) operator.\n  // https://tc39.es/ecma262/#prod-ConditionalExpression\n\n  parseMaybeConditional(refExpressionErrors: ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refExpressionErrors);\n  }\n\n  parseConditional(\n    expr: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    // eslint-disable-next-line no-unused-vars\n    refExpressionErrors?: ?ExpressionErrors,\n  ): N.Expression {\n    if (this.eat(tt.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(tt.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n    return expr;\n  }\n\n  // Start the precedence parser.\n  // https://tc39.es/ecma262/#prod-ShortCircuitExpression\n\n  parseExprOps(refExpressionErrors: ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnary(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  // Parse binary operators with the operator precedence parsing\n  // algorithm. `left` is the left-hand side of the operator.\n  // `minPrec` provides context that allows the function to stop and\n  // defer further parser to one of its callers when it encounters an\n  // operator that has a lower precedence than the set it is parsing.\n\n  parseExprOp(\n    left: N.Expression,\n    leftStartPos: number,\n    leftStartLoc: Position,\n    minPrec: number,\n  ): N.Expression {\n    let prec = this.state.type.binop;\n    if (prec != null && (this.prodParam.hasIn || !this.match(tt._in))) {\n      if (prec > minPrec) {\n        const op = this.state.type;\n        if (op === tt.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n          this.state.inPipeline = true;\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n\n        const logical = op === tt.logicalOR || op === tt.logicalAND;\n        const coalesce = op === tt.nullishCoalescing;\n\n        if (coalesce) {\n          // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n          // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n          prec = ((tt.logicalAND: any): { binop: number }).binop;\n        }\n\n        this.next();\n\n        if (\n          op === tt.pipeline &&\n          this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\"\n        ) {\n          if (\n            this.match(tt.name) &&\n            this.state.value === \"await\" &&\n            this.prodParam.hasAwait\n          ) {\n            throw this.raise(\n              this.state.start,\n              Errors.UnexpectedAwaitAfterPipelineBody,\n            );\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(\n          node,\n          logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\",\n        );\n        /* this check is for all ?? operators\n         * a ?? b && c for this example\n         * when op is coalesce and nextOp is logical (&&), throw at the pos of nextOp that it can not be mixed.\n         * Symmetrically it also throws when op is logical and nextOp is coalesce\n         */\n        const nextOp = this.state.type;\n        if (\n          (coalesce && (nextOp === tt.logicalOR || nextOp === tt.logicalAND)) ||\n          (logical && nextOp === tt.nullishCoalescing)\n        ) {\n          throw this.raise(this.state.start, Errors.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n    return left;\n  }\n\n  // Helper function for `parseExprOp`. Parse the right-hand side of binary-\n  // operator expressions, then apply any operator-specific functions.\n\n  parseExprOpRightExpr(op: TokenType, prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    switch (op) {\n      case tt.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"smart\":\n            return this.withTopicPermittingContext(() => {\n              return this.parseSmartPipelineBody(\n                this.parseExprOpBaseRightExpr(op, prec),\n                startPos,\n                startLoc,\n              );\n            });\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n      // falls through\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  // Helper function for `parseExprOpRightExpr`. Parse the right-hand side of\n  // binary-operator expressions without applying any operator-specific functions.\n\n  parseExprOpBaseRightExpr(op: TokenType, prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    return this.parseExprOp(\n      this.parseMaybeUnary(),\n      startPos,\n      startLoc,\n      op.rightAssociative ? prec - 1 : prec,\n    );\n  }\n\n  checkExponentialAfterUnary(node: N.AwaitExpression | N.UnaryExpression) {\n    if (this.match(tt.exponent)) {\n      this.raise(\n        node.argument.start,\n        Errors.UnexpectedTokenUnaryExponentiation,\n      );\n    }\n  }\n\n  // Parse unary operators, both prefix and postfix.\n  // https://tc39.es/ecma262/#prod-UnaryExpression\n  parseMaybeUnary(\n    refExpressionErrors: ?ExpressionErrors,\n    sawUnary?: boolean,\n  ): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(\"await\");\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startPos, startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n    if (\n      this.isContextual(\"module\") &&\n      this.lookaheadCharCode() === charCodes.leftCurlyBrace &&\n      !this.hasFollowingLineBreak()\n    ) {\n      return this.parseModuleExpression();\n    }\n    const update = this.match(tt.incDec);\n    const node = this.startNode();\n    if (this.state.type.prefix) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(tt._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n      const isDelete = this.match(tt._delete);\n      this.next();\n\n      node.argument = this.parseMaybeUnary(null, true);\n\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, Errors.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, Errors.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) this.checkExponentialAfterUnary(node);\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n\n    if (isAwait) {\n      const startsExpr = this.hasPlugin(\"v8intrinsic\")\n        ? this.state.type.startsExpr\n        : this.state.type.startsExpr && !this.match(tt.modulo);\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(\n          startPos,\n          this.hasPlugin(\"topLevelAwait\")\n            ? Errors.AwaitNotInAsyncContext\n            : Errors.AwaitNotInAsyncFunction,\n        );\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  // https://tc39.es/ecma262/#prod-UpdateExpression\n  parseUpdate(\n    node: N.Expression,\n    update: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): N.Expression {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n    return expr;\n  }\n\n  // Parse call, dot, and `[]`-subscript expressions.\n  // https://tc39.es/ecma262/#prod-LeftHandSideExpression\n  parseExprSubscripts(refExpressionErrors: ?ExpressionErrors): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls?: ?boolean,\n  ): N.Expression {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false,\n    };\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n      // After parsing a subscript, this isn't \"async\" for sure.\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n    return base;\n  }\n\n  /**\n   * @param state Set 'state.stop = true' to indicate that we should stop parsing subscripts.\n   *   state.optionalChainMember to indicate that the member is currently in OptionalChain\n   */\n  parseSubscript(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls: ?boolean,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    if (!noCalls && this.eat(tt.doubleColon)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(tt.backQuote)) {\n      return this.parseTaggedTemplateExpression(\n        base,\n        startPos,\n        startLoc,\n        state,\n      );\n    }\n\n    let optional = false;\n    if (this.match(tt.questionDot)) {\n      if (noCalls && this.lookaheadCharCode() === charCodes.leftParenthesis) {\n        // stop at `?.` when parsing `new a?.()`\n        state.stop = true;\n        return base;\n      }\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(tt.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(\n        base,\n        startPos,\n        startLoc,\n        state,\n        optional,\n      );\n    } else if (optional || this.match(tt.bracketL) || this.eat(tt.dot)) {\n      return this.parseMember(base, startPos, startLoc, state, optional);\n    } else {\n      state.stop = true;\n      return base;\n    }\n  }\n\n  // base[?Yield, ?Await] [ Expression[+In, ?Yield, ?Await] ]\n  // base[?Yield, ?Await] . IdentifierName\n  // base[?Yield, ?Await] . PrivateIdentifier\n  //   where `base` is one of CallExpression, MemberExpression and OptionalChain\n  parseMember(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    optional: boolean,\n  ): N.OptionalMemberExpression | N.MemberExpression {\n    const node = this.startNodeAt(startPos, startLoc);\n    const computed = this.eat(tt.bracketL);\n    node.object = base;\n    node.computed = computed;\n    const privateName =\n      !computed && this.match(tt.privateName) && this.state.value;\n    const property = computed\n      ? this.parseExpression()\n      : privateName\n      ? this.parsePrivateName()\n      : this.parseIdentifier(true);\n\n    if (privateName !== false) {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, Errors.SuperPrivateField);\n      }\n      this.classScope.usePrivateName(privateName, property.start);\n    }\n    node.property = property;\n\n    if (computed) {\n      this.expect(tt.bracketR);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  // https://github.com/tc39/proposal-bind-operator#syntax\n  parseBind(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    noCalls: ?boolean,\n    state: N.ParseSubscriptState,\n  ): N.Expression {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(\n      this.finishNode(node, \"BindExpression\"),\n      startPos,\n      startLoc,\n      noCalls,\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverCallExpressionAndAsyncArrowHead\n  // CoverCallExpressionAndAsyncArrowHead\n  // CallExpression[?Yield, ?Await] Arguments[?Yield, ?Await]\n  // OptionalChain[?Yield, ?Await] Arguments[?Yield, ?Await]\n  parseCoverCallAndAsyncArrowHead(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n    optional: boolean,\n  ): N.Expression {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    let refExpressionErrors = null;\n\n    this.state.maybeInArrowParameters = true;\n    this.next(); // eat `(`\n\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n      refExpressionErrors = new ExpressionErrors();\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(tt.parenR);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(\n        tt.parenR,\n        base.type === \"Import\",\n        base.type !== \"Super\",\n        node,\n        refExpressionErrors,\n      );\n    }\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(\n        this.startNodeAt(startPos, startLoc),\n        node,\n      );\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.checkExpressionErrors(refExpressionErrors, true);\n        this.expressionScope.exit();\n      }\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return node;\n  }\n\n  toReferencedArguments(\n    node: N.CallExpression | N.OptionalCallExpression,\n    isParenthesizedExpr?: boolean,\n  ) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  // MemberExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  // CallExpression [?Yield, ?Await] TemplateLiteral[?Yield, ?Await, +Tagged]\n  parseTaggedTemplateExpression(\n    base: N.Expression,\n    startPos: number,\n    startLoc: Position,\n    state: N.ParseSubscriptState,\n  ): N.TaggedTemplateExpression {\n    const node: N.TaggedTemplateExpression = this.startNodeAt(\n      startPos,\n      startLoc,\n    );\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n    if (state.optionalChainMember) {\n      this.raise(startPos, Errors.OptionalChainingNoTemplate);\n    }\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base: N.Expression): boolean {\n    return (\n      base.type === \"Identifier\" &&\n      base.name === \"async\" &&\n      this.state.lastTokEnd === base.end &&\n      !this.canInsertSemicolon() &&\n      // check there are no escape sequences, such as \\u{61}sync\n      base.end - base.start === 5 &&\n      base.start === this.state.potentialArrowAt\n    );\n  }\n\n  finishCallExpression<T: N.CallExpression | N.OptionalCallExpression>(\n    node: T,\n    optional: boolean,\n  ): N.Expression {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        if (process.env.BABEL_8_BREAKING) {\n          this.expectPlugin(\"importAssertions\");\n        } else {\n          if (!this.hasPlugin(\"moduleAttributes\")) {\n            this.expectPlugin(\"importAssertions\");\n          }\n        }\n      }\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(\n          node.start,\n          Errors.ImportCallArity,\n          this.hasPlugin(\"importAssertions\") ||\n            this.hasPlugin(\"moduleAttributes\")\n            ? \"one or two arguments\"\n            : \"one argument\",\n        );\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, Errors.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n    return this.finishNode(\n      node,\n      optional ? \"OptionalCallExpression\" : \"CallExpression\",\n    );\n  }\n\n  parseCallExpressionArguments(\n    close: TokenType,\n    dynamicImport?: boolean,\n    allowPlaceholder?: boolean,\n    nodeForExtra?: ?N.Node,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): $ReadOnlyArray<?N.Expression> {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (\n            dynamicImport &&\n            !this.hasPlugin(\"importAssertions\") &&\n            !this.hasPlugin(\"moduleAttributes\")\n          ) {\n            this.raise(\n              this.state.lastTokStart,\n              Errors.ImportCallArgumentTrailingComma,\n            );\n          }\n          if (nodeForExtra) {\n            this.addExtra(\n              nodeForExtra,\n              \"trailingComma\",\n              this.state.lastTokStart,\n            );\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(\n        this.parseExprListItem(false, refExpressionErrors, allowPlaceholder),\n      );\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return elts;\n  }\n\n  shouldParseAsyncArrow(): boolean {\n    return this.match(tt.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(\n    node: N.ArrowFunctionExpression,\n    call: N.CallExpression,\n  ): N.ArrowFunctionExpression {\n    this.expect(tt.arrow);\n    this.parseArrowExpression(\n      node,\n      call.arguments,\n      true,\n      call.extra?.trailingComma,\n    );\n    return node;\n  }\n\n  // Parse a no-call expression (like argument of `new` or `::` operators).\n  // https://tc39.es/ecma262/#prod-MemberExpression\n  parseNoCallExpr(): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  // Parse an atomic expression — either a single token that is an\n  // expression, an expression started by a keyword like `function` or\n  // `new`, or an expression wrapped in punctuation like `()`, `[]`,\n  // or `{}`.\n\n  // https://tc39.es/ecma262/#prod-PrimaryExpression\n  // https://tc39.es/ecma262/#prod-AsyncArrowFunction\n  // PrimaryExpression\n  // Super\n  // Import\n  // AsyncArrowFunction\n\n  parseExprAtom(refExpressionErrors?: ?ExpressionErrors): N.Expression {\n    let node;\n\n    switch (this.state.type) {\n      case tt._super:\n        return this.parseSuper();\n\n      case tt._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(tt.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(tt.parenL)) {\n          this.raise(this.state.lastTokStart, Errors.UnsupportedImport);\n        }\n        return this.finishNode(node, \"Import\");\n      case tt._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case tt.name: {\n        const canBeArrow = this.state.potentialArrowAt === this.state.start;\n        const containsEsc = this.state.containsEsc;\n        const id = this.parseIdentifier();\n\n        if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n          if (this.match(tt._function)) {\n            this.next();\n            return this.parseFunction(\n              this.startNodeAtNode(id),\n              undefined,\n              true,\n            );\n          } else if (this.match(tt.name)) {\n            // If the next token begins with \"=\", commit to parsing an async\n            // arrow function. (Peeking ahead for \"=\" lets us avoid a more\n            // expensive full-token lookahead on this common path.)\n            if (this.lookaheadCharCode() === charCodes.equalsTo) {\n              return this.parseAsyncArrowUnaryFunction(id);\n            } else {\n              // Otherwise, treat \"async\" as an identifier and let calling code\n              // deal with the current tt.name token.\n              return id;\n            }\n          } else if (this.match(tt._do)) {\n            return this.parseDo(true);\n          }\n        }\n\n        if (canBeArrow && this.match(tt.arrow) && !this.canInsertSemicolon()) {\n          this.next();\n          return this.parseArrowExpression(\n            this.startNodeAtNode(id),\n            [id],\n            false,\n          );\n        }\n\n        return id;\n      }\n\n      case tt._do: {\n        return this.parseDo(false);\n      }\n\n      case tt.slash:\n      case tt.slashAssign: {\n        this.readRegexp();\n        return this.parseRegExpLiteral(this.state.value);\n      }\n\n      case tt.num:\n        return this.parseNumericLiteral(this.state.value);\n\n      case tt.bigint:\n        return this.parseBigIntLiteral(this.state.value);\n\n      case tt.decimal:\n        return this.parseDecimalLiteral(this.state.value);\n\n      case tt.string:\n        return this.parseStringLiteral(this.state.value);\n\n      case tt._null:\n        return this.parseNullLiteral();\n\n      case tt._true:\n        return this.parseBooleanLiteral(true);\n      case tt._false:\n        return this.parseBooleanLiteral(false);\n\n      case tt.parenL: {\n        const canBeArrow = this.state.potentialArrowAt === this.state.start;\n        return this.parseParenAndDistinguishExpression(canBeArrow);\n      }\n\n      case tt.bracketBarL:\n      case tt.bracketHashL: {\n        return this.parseArrayLike(\n          this.state.type === tt.bracketBarL ? tt.bracketBarR : tt.bracketR,\n          /* canBePattern */ false,\n          /* isTuple */ true,\n          refExpressionErrors,\n        );\n      }\n      case tt.bracketL: {\n        return this.parseArrayLike(\n          tt.bracketR,\n          /* canBePattern */ true,\n          /* isTuple */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt.braceBarL:\n      case tt.braceHashL: {\n        return this.parseObjectLike(\n          this.state.type === tt.braceBarL ? tt.braceBarR : tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ true,\n          refExpressionErrors,\n        );\n      }\n      case tt.braceL: {\n        return this.parseObjectLike(\n          tt.braceR,\n          /* isPattern */ false,\n          /* isRecord */ false,\n          refExpressionErrors,\n        );\n      }\n      case tt._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case tt.at:\n        this.parseDecorators();\n      // fall through\n      case tt._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case tt._new:\n        return this.parseNewOrNewTarget();\n\n      case tt.backQuote:\n        return this.parseTemplate(false);\n\n      // BindExpression[Yield]\n      //   :: MemberExpression[?Yield]\n      case tt.doubleColon: {\n        node = this.startNode();\n        this.next();\n        node.object = null;\n        const callee = (node.callee = this.parseNoCallExpr());\n        if (callee.type === \"MemberExpression\") {\n          return this.finishNode(node, \"BindExpression\");\n        } else {\n          throw this.raise(callee.start, Errors.UnsupportedBind);\n        }\n      }\n\n      case tt.privateName: {\n        // https://tc39.es/proposal-private-fields-in-in\n        // RelationalExpression [In, Yield, Await]\n        //   [+In] PrivateIdentifier in ShiftExpression[?Yield, ?Await]\n        const start = this.state.start;\n        const value = this.state.value;\n        node = this.parsePrivateName();\n        if (this.match(tt._in)) {\n          this.expectPlugin(\"privateIn\");\n          this.classScope.usePrivateName(value, node.start);\n        } else if (this.hasPlugin(\"privateIn\")) {\n          this.raise(this.state.start, Errors.PrivateInExpectedIn, value);\n        } else {\n          throw this.unexpected(start);\n        }\n        return node;\n      }\n      case tt.hash: {\n        if (this.state.inPipeline) {\n          node = this.startNode();\n\n          if (\n            this.getPluginOption(\"pipelineOperator\", \"proposal\") !== \"smart\"\n          ) {\n            this.raise(node.start, Errors.PrimaryTopicRequiresSmartPipeline);\n          }\n\n          this.next();\n\n          if (!this.primaryTopicReferenceIsAllowedInCurrentTopicContext()) {\n            this.raise(node.start, Errors.PrimaryTopicNotAllowed);\n          }\n\n          this.registerTopicReference();\n          return this.finishNode(node, \"PipelinePrimaryTopicReference\");\n        }\n      }\n      // fall through\n      case tt.relational: {\n        if (this.state.value === \"<\") {\n          const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n          if (\n            isIdentifierStart(lookaheadCh) || // Element/Type Parameter <foo>\n            lookaheadCh === charCodes.greaterThan // Fragment <>\n          ) {\n            this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n          }\n        }\n      }\n      // fall through\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  // async [no LineTerminator here] AsyncArrowBindingIdentifier[?Yield] [no LineTerminator here] => AsyncConciseBody[?In]\n  parseAsyncArrowUnaryFunction(id: N.Expression): N.ArrowFunctionExpression {\n    const node = this.startNodeAtNode(id);\n    // We don't need to push a new ParameterDeclarationScope here since we are sure\n    // 1) it is an async arrow, 2) no biding pattern is allowed in params\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, Errors.LineTerminatorBeforeArrow);\n    }\n    this.expect(tt.arrow);\n    // let foo = async bar => {};\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  // https://github.com/tc39/proposal-do-expressions\n  // https://github.com/tc39/proposal-async-do-expressions\n  parseDo(isAsync: boolean): N.DoExpression {\n    this.expectPlugin(\"doExpressions\");\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n    const node = this.startNode();\n    node.async = isAsync;\n    this.next(); // eat `do`\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    if (isAsync) {\n      // AsyncDoExpression :\n      // async [no LineTerminator here] do Block[~Yield, +Await, ~Return]\n      this.prodParam.enter(PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  // Parse the `super` keyword\n  parseSuper(): N.Super {\n    const node = this.startNode();\n    this.next(); // eat `super`\n    if (\n      this.match(tt.parenL) &&\n      !this.scope.allowDirectSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(node.start, Errors.SuperNotAllowed);\n    } else if (\n      !this.scope.allowSuper &&\n      !this.options.allowSuperOutsideMethod\n    ) {\n      this.raise(node.start, Errors.UnexpectedSuper);\n    }\n\n    if (\n      !this.match(tt.parenL) &&\n      !this.match(tt.bracketL) &&\n      !this.match(tt.dot)\n    ) {\n      this.raise(node.start, Errors.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parseMaybePrivateName(\n    isPrivateNameAllowed: boolean,\n  ): N.PrivateName | N.Identifier {\n    const isPrivate = this.match(tt.privateName);\n\n    if (isPrivate) {\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.start + 1, Errors.UnexpectedPrivateField);\n      }\n      return this.parsePrivateName();\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parsePrivateName(): N.PrivateName {\n    const node = this.startNode();\n    const id = this.startNodeAt(\n      this.state.start + 1,\n      // The position is hardcoded because we merge `#` and name into a single\n      // tt.privateName token\n      new Position(\n        this.state.curLine,\n        this.state.start + 1 - this.state.lineStart,\n      ),\n    );\n    const name = this.state.value;\n    this.next(); // eat #name;\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n\n  parseFunctionOrFunctionSent(): N.FunctionExpression | N.MetaProperty {\n    const node = this.startNode();\n\n    // We do not do parseIdentifier here because when parseFunctionOrFunctionSent\n    // is called we already know that the current token is a \"name\" with the value \"function\"\n    // This will improve perf a tiny little bit as we do not do validation but more importantly\n    // here is that parseIdentifier will remove an item from the expression stack\n    // if \"function\" or \"class\" is parsed as identifier (in objects e.g.), which should not happen here.\n    this.next(); // eat `function`\n\n    if (this.prodParam.hasYield && this.match(tt.dot)) {\n      const meta = this.createIdentifier(\n        this.startNodeAtNode(node),\n        \"function\",\n      );\n      this.next(); // eat `.`\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(\n    node: N.MetaProperty,\n    meta: N.Identifier,\n    propertyName: string,\n  ): N.MetaProperty {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      // https://github.com/tc39/proposal-function.sent#syntax-1\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        // The code wasn't `function.sent` but just `function.`, so a simple error is less confusing.\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(\n        node.property.start,\n        Errors.UnsupportedMetaProperty,\n        meta.name,\n        propertyName,\n      );\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportMeta\n  parseImportMetaProperty(node: N.MetaProperty): N.MetaProperty {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next(); // eat `.`\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raise(id.start, SourceTypeModuleErrors.ImportMetaOutsideModule);\n      }\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteralAtNode<T: N.Node>(\n    value: any,\n    type: $ElementType<T, \"type\">,\n    node: any,\n  ): T {\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(node.start, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode<T>(node, type);\n  }\n\n  parseLiteral<T: N.Node>(value: any, type: $ElementType<T, \"type\">): T {\n    const node = this.startNode();\n    return this.parseLiteralAtNode(value, type, node);\n  }\n\n  parseStringLiteral(value: any) {\n    return this.parseLiteral<N.StringLiteral>(value, \"StringLiteral\");\n  }\n\n  parseNumericLiteral(value: any) {\n    return this.parseLiteral<N.NumericLiteral>(value, \"NumericLiteral\");\n  }\n\n  parseBigIntLiteral(value: any) {\n    return this.parseLiteral<N.BigIntLiteral>(value, \"BigIntLiteral\");\n  }\n\n  parseDecimalLiteral(value: any) {\n    return this.parseLiteral<N.DecimalLiteral>(value, \"DecimalLiteral\");\n  }\n\n  parseRegExpLiteral(value: { value: any, pattern: string, flags: string }) {\n    const node = this.parseLiteral<N.RegExpLiteral>(\n      value.value,\n      \"RegExpLiteral\",\n    );\n    node.pattern = value.pattern;\n    node.flags = value.flags;\n    return node;\n  }\n\n  parseBooleanLiteral(value: boolean) {\n    const node = this.startNode();\n    node.value = value;\n    this.next();\n    return this.finishNode<N.BooleanLiteral>(node, \"BooleanLiteral\");\n  }\n\n  parseNullLiteral() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode<N.NullLiteral>(node, \"NullLiteral\");\n  }\n\n  // https://tc39.es/ecma262/#prod-CoverParenthesizedExpressionAndArrowParameterList\n  parseParenAndDistinguishExpression(canBeArrow: boolean): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    let val;\n    this.next(); // eat `(`\n    this.expressionScope.enter(newArrowHeadScope());\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(tt.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(\n          tt.comma,\n          refExpressionErrors.optionalParameters === -1\n            ? null\n            : refExpressionErrors.optionalParameters,\n        );\n        if (this.match(tt.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(tt.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(\n          this.parseParenItem(\n            this.parseRestBinding(),\n            spreadNodeStartPos,\n            spreadNodeStartLoc,\n          ),\n        );\n\n        this.checkCommaAfterRest(charCodes.rightParenthesis);\n\n        break;\n      } else {\n        exprList.push(\n          this.parseMaybeAssignAllowIn(\n            refExpressionErrors,\n            this.parseParenItem,\n          ),\n        );\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(tt.parenR);\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n    if (\n      canBeArrow &&\n      this.shouldParseArrow() &&\n      (arrowNode = this.parseArrow(arrowNode))\n    ) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n\n    this.toReferencedListDeep(exprList, /* isParenthesizedExpr */ true);\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow(): boolean {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node: N.ArrowFunctionExpression): ?N.ArrowFunctionExpression {\n    if (this.eat(tt.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(\n    node: N.Expression,\n    startPos: number, // eslint-disable-line no-unused-vars\n    startLoc: Position, // eslint-disable-line no-unused-vars\n  ): N.Expression {\n    return node;\n  }\n\n  parseNewOrNewTarget(): N.NewExpression | N.MetaProperty {\n    const node = this.startNode();\n    this.next();\n    if (this.match(tt.dot)) {\n      // https://tc39.es/ecma262/#prod-NewTarget\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        this.raise(metaProp.start, Errors.UnexpectedNewTarget);\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  // New's precedence is slightly tricky. It must allow its argument to\n  // be a `[]` or dot subscript expression, but not a call — at least,\n  // not without wrapping it in parentheses. Thus, it uses the noCalls\n  // argument to parseSubscripts to prevent it from consuming the\n  // argument list.\n  // https://tc39.es/ecma262/#prod-NewExpression\n  parseNew(node: N.Expression): N.NewExpression {\n    node.callee = this.parseNoCallExpr();\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, Errors.ImportCallNotNewExpression);\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(this.state.lastTokEnd, Errors.OptionalChainingNoNew);\n    } else if (this.eat(tt.questionDot)) {\n      this.raise(this.state.start, Errors.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node: N.NewExpression): void {\n    if (this.eat(tt.parenL)) {\n      const args = this.parseExprList(tt.parenR);\n      this.toReferencedList(args);\n      // $FlowFixMe (parseExprList should be all non-null in this case)\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  // Parse template expression.\n\n  parseTemplateElement(isTagged: boolean): N.TemplateElement {\n    const elem = this.startNode();\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, Errors.InvalidEscapeSequenceTemplate);\n      }\n    }\n    elem.value = {\n      raw: this.input\n        .slice(this.state.start, this.state.end)\n        .replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value,\n    };\n    this.next();\n    elem.tail = this.match(tt.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  // https://tc39.es/ecma262/#prod-TemplateLiteral\n  parseTemplate(isTagged: boolean): N.TemplateLiteral {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      this.expect(tt.dollarBraceL);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(tt.braceR);\n      node.quasis.push((curElt = this.parseTemplateElement(isTagged)));\n    }\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  // This is overwritten by the TypeScript plugin to parse template types\n  parseTemplateSubstitution(): N.Expression {\n    return this.parseExpression();\n  }\n\n  // Parse an object literal, binding pattern, or record.\n\n  parseObjectLike<T: N.ObjectPattern | N.ObjectExpression>(\n    close: TokenType,\n    isPattern: boolean,\n    isRecord?: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): T {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash: any = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n      if (!isPattern) {\n        // $FlowIgnore RestElement will never be returned if !isPattern\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (\n        isRecord &&\n        !this.isObjectProperty(prop) &&\n        prop.type !== \"SpreadElement\"\n      ) {\n        this.raise(prop.start, Errors.InvalidRecordProperty);\n      }\n\n      // $FlowIgnore\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.next();\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n    return this.finishNode(node, type);\n  }\n\n  // Check grammar production:\n  //   IdentifierName *_opt PropertyName\n  // It is used in `parsePropertyDefinition` to detect AsyncMethod and Accessors\n  maybeAsyncOrAccessorProp(prop: N.ObjectProperty): boolean {\n    return (\n      !prop.computed &&\n      prop.key.type === \"Identifier\" &&\n      (this.isLiteralPropertyName() ||\n        this.match(tt.bracketL) ||\n        this.match(tt.star))\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-PropertyDefinition\n  parsePropertyDefinition(\n    isPattern: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): N.ObjectMember | N.SpreadElement | N.RestElement {\n    let decorators = [];\n    if (this.match(tt.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, Errors.UnsupportedPropertyDecorator);\n      }\n\n      // we needn't check if decorators (stage 0) plugin is enabled since it's checked by\n      // the call to this.parseDecorator\n      while (this.match(tt.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(tt.ellipsis)) {\n      if (decorators.length) this.unexpected();\n      if (isPattern) {\n        this.next();\n        // Don't use parseRestBinding() as we only allow Identifier here.\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(charCodes.rightCurlyBrace);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(tt.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, /* isPrivateNameAllowed */ false);\n\n    if (\n      !isPattern &&\n      !isGenerator &&\n      !containsEsc &&\n      this.maybeAsyncOrAccessorProp(prop)\n    ) {\n      const keyName = key.name;\n      // https://tc39.es/ecma262/#prod-AsyncMethod\n      // https://tc39.es/ecma262/#prod-AsyncGeneratorMethod\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        isGenerator = this.eat(tt.star);\n        this.parsePropertyName(prop, /* isPrivateNameAllowed */ false);\n      }\n      // get PropertyName[?Yield, ?Await] () { FunctionBody[~Yield, ~Await] }\n      // set PropertyName[?Yield, ?Await] ( PropertySetParameterList ) { FunctionBody[~Yield, ~Await] }\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        prop.kind = keyName;\n        if (this.match(tt.star)) {\n          isGenerator = true;\n          this.raise(this.state.pos, Errors.AccessorIsGenerator, keyName);\n          this.next();\n        }\n        this.parsePropertyName(prop, /* isPrivateNameAllowed */ false);\n      }\n    }\n\n    this.parseObjPropValue(\n      prop,\n      startPos,\n      startLoc,\n      isGenerator,\n      isAsync,\n      isPattern,\n      isAccessor,\n      refExpressionErrors,\n    );\n\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(\n    method: N.ObjectMethod | N.ClassMethod,\n  ): number {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  // This exists so we can override within the ESTree plugin\n  getObjectOrClassMethodParams(method: N.ObjectMethod | N.ClassMethod) {\n    return method.params;\n  }\n\n  // get methods aren't allowed to have any parameters\n  // set methods must have exactly 1 parameter which is not a rest parameter\n  checkGetterSetterParams(method: N.ObjectMethod | N.ClassMethod): void {\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, Errors.BadGetterArity);\n      } else {\n        this.raise(start, Errors.BadSetterArity);\n      }\n    }\n\n    if (\n      method.kind === \"set\" &&\n      params[params.length - 1]?.type === \"RestElement\"\n    ) {\n      this.raise(start, Errors.BadSetterRestParameter);\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-MethodDefinition\n  parseObjectMethod(\n    prop: N.ObjectMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n  ): ?N.ObjectMethod {\n    if (isAccessor) {\n      // isAccessor implies isAsync: false, isPattern: false, isGenerator: false\n      this.parseMethod(\n        prop,\n        // This _should_ be false, but with error recovery, we allow it to be\n        // set for informational purposes\n        isGenerator,\n        /* isAsync */ false,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(tt.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        /* isConstructor */ false,\n        false,\n        \"ObjectMethod\",\n      );\n    }\n  }\n\n  // if `isPattern` is true, parse https://tc39.es/ecma262/#prod-BindingProperty\n  // else https://tc39.es/ecma262/#prod-PropertyDefinition\n  parseObjectProperty(\n    prop: N.ObjectProperty,\n    startPos: ?number,\n    startLoc: ?Position,\n    isPattern: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): ?N.ObjectProperty {\n    prop.shorthand = false;\n\n    if (this.eat(tt.colon)) {\n      prop.value = isPattern\n        ? this.parseMaybeDefault(this.state.start, this.state.startLoc)\n        : this.parseMaybeAssignAllowIn(refExpressionErrors);\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      // PropertyDefinition:\n      //   IdentifierReference\n      //   CoveredInitializedName\n      // Note: `{ eval } = {}` will be checked in `checkLVal` later.\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(\n          startPos,\n          startLoc,\n          prop.key.__clone(),\n        );\n      } else if (this.match(tt.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n        prop.value = this.parseMaybeDefault(\n          startPos,\n          startLoc,\n          prop.key.__clone(),\n        );\n      } else {\n        prop.value = prop.key.__clone();\n      }\n      prop.shorthand = true;\n\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(\n    prop: any,\n    startPos: ?number,\n    startLoc: ?Position,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isPattern: boolean,\n    isAccessor: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n  ): void {\n    const node =\n      this.parseObjectMethod(\n        prop,\n        isGenerator,\n        isAsync,\n        isPattern,\n        isAccessor,\n      ) ||\n      this.parseObjectProperty(\n        prop,\n        startPos,\n        startLoc,\n        isPattern,\n        refExpressionErrors,\n      );\n\n    if (!node) this.unexpected();\n\n    // $FlowFixMe\n    return node;\n  }\n\n  parsePropertyName(\n    prop: N.ObjectOrClassMember | N.ClassMember | N.TsNamedTypeElementBase,\n    isPrivateNameAllowed: boolean,\n  ): N.Expression | N.Identifier {\n    if (this.eat(tt.bracketL)) {\n      (prop: $FlowSubtype<N.ObjectOrClassMember>).computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(tt.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      // We check if it's valid for it to be a private name when we push it.\n      const type = this.state.type;\n      (prop: $FlowFixMe).key =\n        type === tt.num ||\n        type === tt.string ||\n        type === tt.bigint ||\n        type === tt.decimal\n          ? this.parseExprAtom()\n          : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (type !== tt.privateName) {\n        // ClassPrivateProperty is never computed, so we don't assign in that case.\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  // Initialize empty function node.\n\n  initFunction(node: N.BodilessFunctionOrMethodBase, isAsync: ?boolean): void {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  // Parse object or class method.\n\n  parseMethod<T: N.MethodLike>(\n    node: T,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowDirectSuper: boolean,\n    type: string,\n    inClassScope: boolean = false,\n  ): T {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor; // For TypeScript parameter properties\n    this.scope.enter(\n      SCOPE_FUNCTION |\n        SCOPE_SUPER |\n        (inClassScope ? SCOPE_CLASS : 0) |\n        (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0),\n    );\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams((node: any), allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n\n    return node;\n  }\n\n  // parse an array literal or tuple literal\n  // https://tc39.es/ecma262/#prod-ArrayLiteral\n  // https://tc39.es/proposal-record-tuple/#prod-TupleLiteral\n  parseArrayLike(\n    close: TokenType,\n    canBePattern: boolean,\n    isTuple: boolean,\n    refExpressionErrors: ?ExpressionErrors,\n  ): N.ArrayExpression | N.TupleExpression {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(\n      close,\n      /* allowEmpty */ !isTuple,\n      refExpressionErrors,\n      node,\n    );\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(\n      node,\n      isTuple ? \"TupleExpression\" : \"ArrayExpression\",\n    );\n  }\n\n  // Parse arrow function expression.\n  // If the parameters are provided, they will be converted to an\n  // assignable list.\n  parseArrowExpression(\n    node: N.ArrowFunctionExpression,\n    params: ?(N.Expression[]),\n    isAsync: boolean,\n    trailingCommaPos: ?number,\n  ): N.ArrowFunctionExpression {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n    // ConciseBody and AsyncConciseBody inherit [In]\n    if (!this.match(tt.bracketL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(\n    node: N.ArrowFunctionExpression,\n    params: N.Expression[],\n    trailingCommaPos: ?number,\n  ): void {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(\n    node: N.BodilessFunctionOrMethodBase,\n    type: string,\n    isMethod?: boolean = false,\n  ): void {\n    // $FlowIgnore (node is not bodiless if we get here)\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  // Parse function body and check parameters.\n  parseFunctionBody(\n    node: N.Function,\n    allowExpression: ?boolean,\n    isMethod?: boolean = false,\n  ): void {\n    const isExpression = allowExpression && !this.match(tt.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      // https://tc39.es/ecma262/#prod-ExpressionBody\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      // Start a new scope with regard to labels\n      // flag (restore them to their old value afterwards).\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n\n      // FunctionBody[Yield, Await]:\n      //   StatementList[?Yield, ?Await, +Return] opt\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(\n        true,\n        false,\n        // Strict mode function checks after we parse the statements in the function body.\n        (hasStrictModeDirective: boolean) => {\n          const nonSimple = !this.isSimpleParamList(node.params);\n\n          if (hasStrictModeDirective && nonSimple) {\n            // This logic is here to align the error location with the ESTree plugin.\n            const errorPos =\n              // $FlowIgnore\n              (node.kind === \"method\" || node.kind === \"constructor\") &&\n              // $FlowIgnore\n              !!node.key\n                ? node.key.end\n                : node.start;\n            this.raise(errorPos, Errors.IllegalLanguageModeDirective);\n          }\n\n          const strictModeChanged = !oldStrict && this.state.strict;\n\n          // Add the params to varDeclaredNames to ensure that an error is thrown\n          // if a let/const declaration in the function clashes with one of the params.\n          this.checkParams(\n            node,\n            !this.state.strict && !allowExpression && !isMethod && !nonSimple,\n            allowExpression,\n            strictModeChanged,\n          );\n\n          // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n          if (this.state.strict && node.id) {\n            this.checkLVal(\n              node.id,\n              \"function name\",\n              BIND_OUTSIDE,\n              undefined,\n              undefined,\n              strictModeChanged,\n            );\n          }\n        },\n      );\n      this.prodParam.exit();\n      this.expressionScope.exit();\n      this.state.labels = oldLabels;\n    }\n  }\n\n  isSimpleParamList(\n    params: $ReadOnlyArray<N.Pattern | N.TSParameterProperty>,\n  ): boolean {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n    return true;\n  }\n\n  checkParams(\n    node: N.Function,\n    allowDuplicates: boolean,\n    // eslint-disable-next-line no-unused-vars\n    isArrowFunction: ?boolean,\n    strictModeChanged?: boolean = true,\n  ): void {\n    const checkClashes = new Set();\n    for (const param of node.params) {\n      this.checkLVal(\n        param,\n        \"function parameter list\",\n        BIND_VAR,\n        allowDuplicates ? null : checkClashes,\n        undefined,\n        strictModeChanged,\n      );\n    }\n  }\n\n  // Parses a comma-separated list of expressions, and returns them as\n  // an array. `close` is the token type that ends the list, and\n  // `allowEmpty` can be turned on to allow subsequent commas with\n  // nothing in between them to be parsed as `null` (which is needed\n  // for array literals).\n\n  parseExprList(\n    close: TokenType,\n    allowEmpty?: boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n    nodeForExtra?: ?N.Node,\n  ): $ReadOnlyArray<?N.Expression> {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(\n              nodeForExtra,\n              \"trailingComma\",\n              this.state.lastTokStart,\n            );\n          }\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n    return elts;\n  }\n\n  parseExprListItem(\n    allowEmpty: ?boolean,\n    refExpressionErrors?: ?ExpressionErrors,\n    allowPlaceholder: ?boolean,\n  ): ?N.Expression {\n    let elt;\n    if (this.match(tt.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, Errors.UnexpectedToken, \",\");\n      }\n      elt = null;\n    } else if (this.match(tt.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n\n      elt = this.parseParenItem(\n        this.parseSpread(refExpressionErrors),\n        spreadNodeStartPos,\n        spreadNodeStartLoc,\n      );\n    } else if (this.match(tt.question)) {\n      this.expectPlugin(\"partialApplication\");\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, Errors.UnexpectedArgumentPlaceholder);\n      }\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(\n        refExpressionErrors,\n        this.parseParenItem,\n      );\n    }\n    return elt;\n  }\n\n  // Parse the next token as an identifier. If `liberal` is true (used\n  // when parsing properties), it will also convert keywords into\n  // identifiers.\n  // This shouldn't be used to parse the keywords of meta properties, since they\n  // are not identifiers and cannot contain escape sequences.\n\n  parseIdentifier(liberal?: boolean): N.Identifier {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node: N.Identifier, name: string): N.Identifier {\n    node.name = name;\n    node.loc.identifierName = name;\n\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos: number, liberal?: boolean): string {\n    let name: string;\n\n    const { start, type } = this.state;\n\n    if (type === tt.name) {\n      name = this.state.value;\n    } else if (type.keyword) {\n      name = type.keyword;\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      // If the current token is not used as a keyword, set its type to \"tt.name\".\n      // This will prevent this.next() from throwing about unexpected escapes.\n      this.state.type = tt.name;\n    } else {\n      this.checkReservedWord(name, start, !!type.keyword, false);\n    }\n\n    this.next();\n\n    return name;\n  }\n\n  checkReservedWord(\n    word: string,\n    startLoc: number,\n    checkKeywords: boolean,\n    isBinding: boolean,\n  ): void {\n    // Every JavaScript reserved word is 10 characters or less.\n    if (word.length > 10) {\n      return;\n    }\n    // Most identifiers are not reservedWord-like, they don't need special\n    // treatments afterward, which very likely ends up throwing errors\n    if (!canBeReservedWord(word)) {\n      return;\n    }\n\n    if (word === \"yield\") {\n      if (this.prodParam.hasYield) {\n        this.raise(startLoc, Errors.YieldBindingIdentifier);\n        return;\n      }\n    } else if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, Errors.AwaitBindingIdentifier);\n        return;\n      } else if (this.scope.inStaticBlock && !this.scope.inNonArrowFunction) {\n        this.raise(startLoc, Errors.AwaitBindingIdentifierInStaticBlock);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(\n          startLoc,\n          Errors.AwaitBindingIdentifier,\n        );\n      }\n    } else if (word === \"arguments\") {\n      if (this.scope.inClassAndNotInNonArrowFunction) {\n        this.raise(startLoc, Errors.ArgumentsInClass);\n        return;\n      }\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, Errors.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict\n      ? isReservedWord\n      : isBinding\n      ? isStrictBindReservedWord\n      : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(startLoc, Errors.UnexpectedReservedWord, word);\n    }\n  }\n\n  isAwaitAllowed(): boolean {\n    if (this.prodParam.hasAwait) return true;\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n    return false;\n  }\n\n  // Parses await expression inside async function.\n\n  parseAwait(startPos: number, startLoc: Position): N.AwaitExpression {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    this.expressionScope.recordParameterInitializerError(\n      node.start,\n      Errors.AwaitExpressionFormalParameter,\n    );\n\n    if (this.eat(tt.star)) {\n      this.raise(node.start, Errors.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait(): boolean {\n    return (\n      this.hasPrecedingLineBreak() ||\n      // All the following expressions are ambiguous:\n      //   await + 0, await - 0, await ( 0 ), await [ 0 ], await / 0 /u, await ``\n      this.match(tt.plusMin) ||\n      this.match(tt.parenL) ||\n      this.match(tt.bracketL) ||\n      this.match(tt.backQuote) ||\n      // Sometimes the tokenizer generates tt.slash for regexps, and this is\n      // handler by parseExprAtom\n      this.match(tt.regexp) ||\n      this.match(tt.slash) ||\n      // This code could be parsed both as a modulo operator or as an intrinsic:\n      //   await %x(0)\n      (this.hasPlugin(\"v8intrinsic\") && this.match(tt.modulo))\n    );\n  }\n\n  // Parses yield expression inside generator.\n\n  parseYield(): N.YieldExpression {\n    const node = this.startNode();\n\n    this.expressionScope.recordParameterInitializerError(\n      node.start,\n      Errors.YieldInParameter,\n    );\n\n    this.next();\n    let delegating = false;\n    let argument = null;\n    if (!this.hasPrecedingLineBreak()) {\n      delegating = this.eat(tt.star);\n      switch (this.state.type) {\n        case tt.semi:\n        case tt.eof:\n        case tt.braceR:\n        case tt.parenR:\n        case tt.bracketR:\n        case tt.braceBarR:\n        case tt.colon:\n        case tt.comma:\n          // The above is the complete set of tokens that can\n          // follow an AssignmentExpression, and none of them\n          // can start an AssignmentExpression\n          if (!delegating) break;\n        /* fallthrough */\n        default:\n          argument = this.parseMaybeAssign();\n      }\n    }\n    node.delegate = delegating;\n    node.argument = argument;\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  // Validates a pipeline (for any of the pipeline Babylon plugins) at the point\n  // of the infix operator `|>`.\n\n  checkPipelineAtInfixOperator(left: N.Expression, leftStartPos: number) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        // Ensure that the pipeline head is not a comma-delimited\n        // sequence expression.\n        this.raise(leftStartPos, Errors.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  parseSmartPipelineBody(\n    childExpression: N.Expression,\n    startPos: number,\n    startLoc: Position,\n  ): N.PipelineBody {\n    this.checkSmartPipelineBodyEarlyErrors(childExpression, startPos);\n\n    return this.parseSmartPipelineBodyInStyle(\n      childExpression,\n      startPos,\n      startLoc,\n    );\n  }\n\n  checkSmartPipelineBodyEarlyErrors(\n    childExpression: N.Expression,\n    startPos: number,\n  ): void {\n    if (this.match(tt.arrow)) {\n      // If the following token is invalidly `=>`, then throw a human-friendly error\n      // instead of something like 'Unexpected token, expected \";\"'.\n      throw this.raise(this.state.start, Errors.PipelineBodyNoArrow);\n    } else if (childExpression.type === \"SequenceExpression\") {\n      this.raise(startPos, Errors.PipelineBodySequenceExpression);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(\n    childExpression: N.Expression,\n    startPos: number,\n    startLoc: Position,\n  ): N.PipelineBody {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n    const isSimpleReference = this.isSimpleReference(childExpression);\n    if (isSimpleReference) {\n      bodyNode.callee = childExpression;\n    } else {\n      if (!this.topicReferenceWasUsedInCurrentTopicContext()) {\n        this.raise(startPos, Errors.PipelineTopicUnused);\n      }\n      bodyNode.expression = childExpression;\n    }\n    return this.finishNode(\n      bodyNode,\n      isSimpleReference ? \"PipelineBareFunction\" : \"PipelineTopicExpression\",\n    );\n  }\n\n  isSimpleReference(expression: N.Expression): boolean {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return (\n          !expression.computed && this.isSimpleReference(expression.object)\n        );\n      case \"Identifier\":\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  // Enable topic references from outer contexts within smart pipeline bodies.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references with the smartPipelines plugin. They then run a\n  // callback, then they reset the parser to the old topic-context state that it\n  // had before the function was called.\n\n  withTopicPermittingContext<T>(callback: () => T): T {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      // Enable the use of the primary topic reference.\n      maxNumOfResolvableTopics: 1,\n      // Hide the use of any topic references from outer contexts.\n      maxTopicIndex: null,\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  // Disable topic references from outer contexts within syntax constructs\n  // such as the bodies of iteration statements.\n  // The function modifies the parser's topic-context state to enable or disable\n  // the use of topic references with the smartPipelines plugin. They then run a\n  // callback, then they reset the parser to the old topic-context state that it\n  // had before the function was called.\n\n  withTopicForbiddingContext<T>(callback: () => T): T {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      // Disable the use of the primary topic reference.\n      maxNumOfResolvableTopics: 0,\n      // Hide the use of any topic references from outer contexts.\n      maxTopicIndex: null,\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSoloAwaitPermittingContext<T>(callback: () => T): T {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  disallowInAnd<T>(callback: () => T): T {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n    return callback();\n  }\n\n  // Register the use of a primary topic reference (`#`) within the current\n  // topic context.\n  registerTopicReference(): void {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  primaryTopicReferenceIsAllowedInCurrentTopicContext(): boolean {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentTopicContext(): boolean {\n    return (\n      this.state.topicContext.maxTopicIndex != null &&\n      this.state.topicContext.maxTopicIndex >= 0\n    );\n  }\n\n  parseFSharpPipelineBody(prec: number): N.Expression {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n\n    const ret = this.parseExprOp(\n      this.parseMaybeUnary(),\n      startPos,\n      startLoc,\n      prec,\n    );\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n\n    return ret;\n  }\n\n  // https://github.com/tc39/proposal-js-module-blocks\n  parseModuleExpression(): N.ModuleExpression {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode<N.ModuleExpression>();\n    this.next(); // eat \"module\"\n    this.eat(tt.braceL);\n\n    const revertScopes = this.initializeScopes(/** inModule */ true);\n    this.enterInitialScopes();\n\n    const program = this.startNode<N.Program>();\n    try {\n      node.body = this.parseProgram(program, tt.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n    this.eat(tt.braceR);\n    return this.finishNode<N.ModuleExpression>(node, \"ModuleExpression\");\n  }\n}\n","// @flow\n\nimport * as N from \"../types\";\nimport { types as tt, type TokenType } from \"../tokenizer/types\";\nimport ExpressionParser from \"./expression\";\nimport { Errors, SourceTypeModuleErrors } from \"./error\";\nimport { isIdentifierChar, isIdentifierStart } from \"../util/identifier\";\nimport { lineBreak } from \"../util/whitespace\";\nimport * as charCodes from \"charcodes\";\nimport {\n  BIND_CLASS,\n  BIND_LEXICAL,\n  BIND_VAR,\n  BIND_FUNCTION,\n  SCOPE_CLASS,\n  SCOPE_FUNCTION,\n  SCOPE_OTHER,\n  SCOPE_SIMPLE_CATCH,\n  SCOPE_STATIC_BLOCK,\n  SCOPE_SUPER,\n  CLASS_ELEMENT_OTHER,\n  CLASS_ELEMENT_INSTANCE_GETTER,\n  CLASS_ELEMENT_INSTANCE_SETTER,\n  CLASS_ELEMENT_STATIC_GETTER,\n  CLASS_ELEMENT_STATIC_SETTER,\n  type BindingTypes,\n} from \"../util/scopeflags\";\nimport { ExpressionErrors } from \"./util\";\nimport { PARAM, functionFlags } from \"../util/production-parameter\";\nimport {\n  newExpressionScope,\n  newParameterDeclarationScope,\n} from \"../util/expression-scope\";\nimport type { SourceType } from \"../options\";\nimport { Token } from \"../tokenizer\";\nimport { Position } from \"../util/location\";\n\nconst loopLabel = { kind: \"loop\" },\n  switchLabel = { kind: \"switch\" };\n\nconst FUNC_NO_FLAGS = 0b000,\n  FUNC_STATEMENT = 0b001,\n  FUNC_HANGING_STATEMENT = 0b010,\n  FUNC_NULLABLE_ID = 0b100;\n\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\n\nconst keywordRelationalOperator = /in(?:stanceof)?/y;\n\n/**\n * Convert tt.privateName to tt.hash + tt.name for backward Babel 7 compat.\n * For performance reasons this routine mutates `tokens`, it is okay\n * here since we execute `parseTopLevel` once for every file.\n * @param {*} tokens\n * @returns\n */\nfunction babel7CompatTokens(tokens) {\n  if (!process.env.BABEL_8_BREAKING) {\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n      if (token.type === tt.privateName) {\n        const { loc, start, value, end } = token;\n        const hashEndPos = start + 1;\n        const hashEndLoc = new Position(loc.start.line, loc.start.column + 1);\n        tokens.splice(\n          i,\n          1,\n          // $FlowIgnore: hacky way to create token\n          new Token({\n            type: tt.hash,\n            value: \"#\",\n            start: start,\n            end: hashEndPos,\n            startLoc: loc.start,\n            endLoc: hashEndLoc,\n          }),\n          // $FlowIgnore: hacky way to create token\n          new Token({\n            type: tt.name,\n            value: value,\n            start: hashEndPos,\n            end: end,\n            startLoc: hashEndLoc,\n            endLoc: loc.end,\n          }),\n        );\n      }\n    }\n  }\n  return tokens;\n}\nexport default class StatementParser extends ExpressionParser {\n  // ### Statement parsing\n\n  // Parse a program. Initializes the parser, reads any number of\n  // statements, and wraps them in a Program node.  Optionally takes a\n  // `program` argument.  If present, the statements will be appended\n  // to its body instead of creating a new node.\n\n  parseTopLevel(file: N.File, program: N.Program): N.File {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n\n    if (this.options.tokens) file.tokens = babel7CompatTokens(this.tokens);\n\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(\n    program: N.Program,\n    end: TokenType = tt.eof,\n    sourceType: SourceType = this.options.sourceType,\n  ): N.Program {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n    if (\n      this.inModule &&\n      !this.options.allowUndeclaredExports &&\n      this.scope.undefinedExports.size > 0\n    ) {\n      for (const [name] of Array.from(this.scope.undefinedExports)) {\n        const pos = this.scope.undefinedExports.get(name);\n        // $FlowIssue\n        this.raise(pos, Errors.ModuleExportUndefined, name);\n      }\n    }\n    return this.finishNode<N.Program>(program, \"Program\");\n  }\n\n  // TODO\n\n  stmtToDirective(stmt: N.Statement): N.Directive {\n    const expr = stmt.expression;\n\n    const directiveLiteral = this.startNodeAt(expr.start, expr.loc.start);\n    const directive = this.startNodeAt(stmt.start, stmt.loc.start);\n\n    const raw = this.input.slice(expr.start, expr.end);\n    const val = (directiveLiteral.value = raw.slice(1, -1)); // remove quotes\n\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n\n    directive.value = this.finishNodeAt(\n      directiveLiteral,\n      \"DirectiveLiteral\",\n      expr.end,\n      expr.loc.end,\n    );\n\n    return this.finishNodeAt(directive, \"Directive\", stmt.end, stmt.loc.end);\n  }\n\n  parseInterpreterDirective(): N.InterpreterDirective | null {\n    if (!this.match(tt.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context: ?string): boolean {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n    return this.isLetKeyword(context);\n  }\n\n  /**\n   * Assuming we have seen a contextual `let`, check if it starts a variable declaration\n   so that `left` should be interpreted as a `let` keyword.\n   *\n   * @param {?string} context When `context` is non nullish, it will return early and _skip_ checking\n                              if the next token after `let` is `{` or a keyword relational operator\n   * @returns {boolean}\n   * @memberof StatementParser\n   */\n  isLetKeyword(context: ?string): boolean {\n    const next = this.nextTokenStart();\n    const nextCh = this.codePointAtPos(next);\n    // For ambiguous cases, determine if a LexicalDeclaration (or only a\n    // Statement) is allowed here. If context is not empty then only a Statement\n    // is allowed. However, `let [` is an explicit negative lookahead for\n    // ExpressionStatement, so special-case it first.\n    // Also, `let \\` is never valid as an expression so this must be a keyword.\n    if (\n      nextCh === charCodes.backslash ||\n      nextCh === charCodes.leftSquareBracket\n    ) {\n      return true;\n    }\n    if (context) return false;\n\n    if (nextCh === charCodes.leftCurlyBrace) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      keywordRelationalOperator.lastIndex = next;\n      const matched = keywordRelationalOperator.exec(this.input);\n      if (matched !== null) {\n        // We have seen `in` or `instanceof` so far, now check if the identfier\n        // ends here\n        const endCh = this.codePointAtPos(next + matched[0].length);\n        if (!isIdentifierChar(endCh) && endCh !== charCodes.backslash) {\n          return false;\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  // Parse a single statement.\n  //\n  // If expecting a statement and finding a slash operator, parse a\n  // regular expression literal. This is to handle cases like\n  // `if (foo) /blah/.exec(foo)`, where looking at the previous token\n  // does not help.\n  // https://tc39.es/ecma262/#prod-Statement\n  // ImportDeclaration and ExportDeclaration are also handled here so we can throw recoverable errors\n  // when they are not at the top level\n  parseStatement(context: ?string, topLevel?: boolean): N.Statement {\n    if (this.match(tt.at)) {\n      this.parseDecorators(true);\n    }\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context: ?string, topLevel: ?boolean): N.Statement {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = tt._var;\n      kind = \"let\";\n    }\n\n    // Most types of statements are recognized by the keyword they\n    // start with. Many are trivial to parse, some require a bit of\n    // complexity.\n\n    switch (starttype) {\n      case tt._break:\n      case tt._continue:\n        // $FlowFixMe\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n      case tt._debugger:\n        return this.parseDebuggerStatement(node);\n      case tt._do:\n        return this.parseDoStatement(node);\n      case tt._for:\n        return this.parseForStatement(node);\n      case tt._function:\n        if (this.lookaheadCharCode() === charCodes.dot) break;\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, Errors.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, Errors.SloppyFunction);\n          }\n        }\n        return this.parseFunctionStatement(node, false, !context);\n\n      case tt._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case tt._if:\n        return this.parseIfStatement(node);\n      case tt._return:\n        return this.parseReturnStatement(node);\n      case tt._switch:\n        return this.parseSwitchStatement(node);\n      case tt._throw:\n        return this.parseThrowStatement(node);\n      case tt._try:\n        return this.parseTryStatement(node);\n\n      case tt._const:\n      case tt._var:\n        kind = kind || this.state.value;\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, Errors.UnexpectedLexicalDeclaration);\n        }\n        return this.parseVarStatement(node, kind);\n\n      case tt._while:\n        return this.parseWhileStatement(node);\n      case tt._with:\n        return this.parseWithStatement(node);\n      case tt.braceL:\n        return this.parseBlock();\n      case tt.semi:\n        return this.parseEmptyStatement(node);\n      case tt._import: {\n        const nextTokenCharCode = this.lookaheadCharCode();\n        if (\n          nextTokenCharCode === charCodes.leftParenthesis || // import()\n          nextTokenCharCode === charCodes.dot // import.meta\n        ) {\n          break;\n        }\n      }\n      // fall through\n      case tt._export: {\n        if (!this.options.allowImportExportEverywhere && !topLevel) {\n          this.raise(this.state.start, Errors.UnexpectedImportExport);\n        }\n\n        this.next(); // eat `import`/`export`\n\n        let result;\n        if (starttype === tt._import) {\n          result = this.parseImport(node);\n\n          if (\n            result.type === \"ImportDeclaration\" &&\n            (!result.importKind || result.importKind === \"value\")\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        } else {\n          result = this.parseExport(node);\n\n          if (\n            (result.type === \"ExportNamedDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            (result.type === \"ExportAllDeclaration\" &&\n              (!result.exportKind || result.exportKind === \"value\")) ||\n            result.type === \"ExportDefaultDeclaration\"\n          ) {\n            this.sawUnambiguousESM = true;\n          }\n        }\n\n        this.assertModuleNodeAllowed(node);\n\n        return result;\n      }\n\n      default: {\n        if (this.isAsyncFunction()) {\n          if (context) {\n            this.raise(\n              this.state.start,\n              Errors.AsyncFunctionInSingleStatementContext,\n            );\n          }\n          this.next();\n          return this.parseFunctionStatement(node, true, !context);\n        }\n      }\n    }\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (\n      starttype === tt.name &&\n      expr.type === \"Identifier\" &&\n      this.eat(tt.colon)\n    ) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node: N.Node): void {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(node.start, SourceTypeModuleErrors.ImportOutsideModule);\n    }\n  }\n\n  takeDecorators(node: N.HasDecorators): void {\n    const decorators =\n      this.state.decoratorStack[this.state.decoratorStack.length - 1];\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator(): boolean {\n    return this.match(tt._class);\n  }\n\n  parseDecorators(allowExport?: boolean): void {\n    const currentContextDecorators =\n      this.state.decoratorStack[this.state.decoratorStack.length - 1];\n    while (this.match(tt.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(tt._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (\n        this.hasPlugin(\"decorators\") &&\n        !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")\n      ) {\n        this.raise(this.state.start, Errors.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, Errors.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator(): N.Decorator {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      // Every time a decorator class expression is evaluated, a new empty array is pushed onto the stack\n      // So that the decorators of any nested class expressions will be dealt with separately\n      this.state.decoratorStack.push([]);\n\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr: N.Expression;\n\n      if (this.eat(tt.parenL)) {\n        expr = this.parseExpression();\n        this.expect(tt.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(tt.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr: N.Expression): N.Expression {\n    if (this.eat(tt.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(tt.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(\n    node: N.BreakStatement | N.ContinueStatement,\n    keyword: string,\n  ): N.BreakStatement | N.ContinueStatement {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n\n    return this.finishNode(\n      node,\n      isBreak ? \"BreakStatement\" : \"ContinueStatement\",\n    );\n  }\n\n  verifyBreakContinue(\n    node: N.BreakStatement | N.ContinueStatement,\n    keyword: string,\n  ) {\n    const isBreak = keyword === \"break\";\n    let i;\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n    if (i === this.state.labels.length) {\n      this.raise(node.start, Errors.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node: N.DebuggerStatement): N.DebuggerStatement {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression(): N.Expression {\n    this.expect(tt.parenL);\n    const val = this.parseExpression();\n    this.expect(tt.parenR);\n    return val;\n  }\n\n  parseDoStatement(node: N.DoWhileStatement): N.DoWhileStatement {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse the loop body's body.\n        this.parseStatement(\"do\"),\n      );\n\n    this.state.labels.pop();\n\n    this.expect(tt._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(tt.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  // Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n  // loop is non-trivial. Basically, we have to parse the init `var`\n  // statement or expression, disallowing the `in` operator (see\n  // the second parameter to `parseExpression`), and then check\n  // whether the next token is `in` or `of`. When there is no init\n  // part (semicolon immediately after the opening parenthesis), it\n  // is a regular `for` loop.\n\n  parseForStatement(node: N.Node): N.ForLike {\n    this.next();\n    this.state.labels.push(loopLabel);\n\n    let awaitAt = -1;\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(tt.parenL);\n\n    if (this.match(tt.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node, null);\n    }\n\n    const startsWithLet = this.isContextual(\"let\");\n    const isLet = startsWithLet && this.isLetKeyword();\n    if (this.match(tt._var) || this.match(tt._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if (\n        (this.match(tt._in) || this.isContextual(\"of\")) &&\n        init.declarations.length === 1\n      ) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n      return this.parseFor(node, init);\n    }\n\n    // Check whether the first token is possibly a contextual keyword, so that\n    // we can forbid `for (async of` if this turns out to be a for-of loop.\n    const startsWithUnescapedName =\n      this.match(tt.name) && !this.state.containsEsc;\n\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(\"of\");\n    if (isForOf) {\n      // Check for leading tokens that are forbidden in for-of loops:\n      if (startsWithLet) {\n        this.raise(init.start, Errors.ForOfLet);\n      } else if (\n        // `for await (async of []);` is allowed.\n        awaitAt === -1 &&\n        startsWithUnescapedName &&\n        init.type === \"Identifier\" &&\n        init.name === \"async\"\n      ) {\n        // This catches the case where the `async` in `for (async of` was\n        // parsed as an identifier. If it was parsed as the start of an async\n        // arrow function (e.g. `for (async of => {} of []);`), the LVal check\n        // further down will raise a more appropriate error.\n        this.raise(init.start, Errors.ForOfAsync);\n      }\n    }\n    if (isForOf || this.match(tt._in)) {\n      this.toAssignable(init, /* isLHS */ true);\n      const description = isForOf ? \"for-of statement\" : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(\n    node: N.FunctionDeclaration,\n    isAsync?: boolean,\n    declarationPosition?: boolean,\n  ): N.FunctionDeclaration {\n    this.next();\n    return this.parseFunction(\n      node,\n      FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT),\n      isAsync,\n    );\n  }\n\n  parseIfStatement(node: N.IfStatement): N.IfStatement {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(tt._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node: N.ReturnStatement): N.ReturnStatement {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, Errors.IllegalReturn);\n    }\n\n    this.next();\n\n    // In `return` (and `break`/`continue`), the keywords with\n    // optional arguments, we eagerly look for a semicolon or the\n    // possibility to insert one.\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node: N.SwitchStatement): N.SwitchStatement {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = (node.cases = []);\n    this.expect(tt.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n\n    // Statements under must be grouped (by label) in SwitchCase\n    // nodes. `cur` is used to keep the node that we are currently\n    // adding statements to.\n\n    let cur;\n    for (let sawDefault; !this.match(tt.braceR); ) {\n      if (this.match(tt._case) || this.match(tt._default)) {\n        const isCase = this.match(tt._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push((cur = this.startNode()));\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(\n              this.state.lastTokStart,\n              Errors.MultipleDefaultsInSwitch,\n            );\n          }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(tt.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next(); // Closing brace\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node: N.ThrowStatement): N.ThrowStatement {\n    this.next();\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, Errors.NewlineAfterThrow);\n    }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam(): N.Pattern {\n    const param = this.parseBindingAtom();\n\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n\n    return param;\n  }\n\n  parseTryStatement(node: N.TryStatement): N.TryStatement {\n    this.next();\n\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(tt._catch)) {\n      const clause = this.startNode();\n      this.next();\n      if (this.match(tt.parenL)) {\n        this.expect(tt.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(tt.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body =\n        // For the smartPipelines plugin: Disable topic references from outer\n        // contexts within the catch clause's body.\n        this.withTopicForbiddingContext(() =>\n          // Parse the catch clause's body.\n          this.parseBlock(false, false),\n        );\n      this.scope.exit();\n\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(tt._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, Errors.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(\n    node: N.VariableDeclaration,\n    kind: \"var\" | \"let\" | \"const\",\n  ): N.VariableDeclaration {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node: N.WhileStatement): N.WhileStatement {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(\"while\"),\n      );\n\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node: N.WithStatement): N.WithStatement {\n    if (this.state.strict) {\n      this.raise(this.state.start, Errors.StrictWith);\n    }\n    this.next();\n    node.object = this.parseHeaderExpression();\n\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the with statement's body.\n      // They are permitted in function default-parameter expressions, which are\n      // part of the outer context, outside of the with statement's body.\n      this.withTopicForbiddingContext(() =>\n        // Parse the statement body.\n        this.parseStatement(\"with\"),\n      );\n\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node: N.EmptyStatement): N.EmptyStatement {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(\n    node: N.LabeledStatement,\n    maybeName: string,\n    expr: N.Identifier,\n    context: ?string,\n  ): N.LabeledStatement {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(expr.start, Errors.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop\n      ? \"loop\"\n      : this.match(tt._switch)\n      ? \"switch\"\n      : null;\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start,\n    });\n    node.body = this.parseStatement(\n      context\n        ? context.indexOf(\"label\") === -1\n          ? context + \"label\"\n          : context\n        : \"label\",\n    );\n\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(\n    node: N.ExpressionStatement,\n    expr: N.Expression,\n  ): N.Statement {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  // Parse a semicolon-enclosed block of statements, handling `\"use\n  // strict\"` declarations when `allowDirectives` is true (used for\n  // function bodies).\n\n  parseBlock(\n    allowDirectives?: boolean = false,\n    createNewLexicalScope?: boolean = true,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): N.BlockStatement {\n    const node = this.startNode();\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n    this.expect(tt.braceL);\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n    this.parseBlockBody(\n      node,\n      allowDirectives,\n      false,\n      tt.braceR,\n      afterBlockParse,\n    );\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt: N.Statement): boolean {\n    return (\n      stmt.type === \"ExpressionStatement\" &&\n      stmt.expression.type === \"StringLiteral\" &&\n      !stmt.expression.extra.parenthesized\n    );\n  }\n\n  parseBlockBody(\n    node: N.BlockStatementLike,\n    allowDirectives: ?boolean,\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const body = (node.body = []);\n    const directives = (node.directives = []);\n    this.parseBlockOrModuleBlockBody(\n      body,\n      allowDirectives ? directives : undefined,\n      topLevel,\n      end,\n      afterBlockParse,\n    );\n  }\n\n  // Undefined directives means that directives are not allowed.\n  // https://tc39.es/ecma262/#prod-Block\n  // https://tc39.es/ecma262/#prod-ModuleBody\n  parseBlockOrModuleBlockBody(\n    body: N.Statement[],\n    directives: ?(N.Directive[]),\n    topLevel: boolean,\n    end: TokenType,\n    afterBlockParse?: (hasStrictModeDirective: boolean) => void,\n  ): void {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (\n            !hasStrictModeDirective &&\n            directive.value.value === \"use strict\"\n          ) {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n        parsedNonDirective = true;\n        // clear strict errors since the strict mode will not change within the block\n        this.state.strictErrors.clear();\n      }\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  // Parse a regular `for` loop. The disambiguation code in\n  // `parseStatement` will already have parsed the init statement or\n  // expression.\n\n  parseFor(\n    node: N.ForStatement,\n    init: ?(N.VariableDeclaration | N.Expression),\n  ): N.ForStatement {\n    node.init = init;\n    this.semicolon(/* allowAsi */ false);\n    node.test = this.match(tt.semi) ? null : this.parseExpression();\n    this.semicolon(/* allowAsi */ false);\n    node.update = this.match(tt.parenR) ? null : this.parseExpression();\n    this.expect(tt.parenR);\n\n    node.body =\n      // For the smartPipelines plugin: Disable topic references from outer\n      // contexts within the loop body. They are permitted in test expressions,\n      // outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse the loop body.\n        this.parseStatement(\"for\"),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  // Parse a `for`/`in` and `for`/`of` loop, which are almost\n  // same from parser's perspective.\n\n  parseForIn(\n    node: N.ForInOf,\n    init: N.VariableDeclaration | N.AssignmentPattern,\n    awaitAt: number,\n  ): N.ForInOf {\n    const isForIn = this.match(tt._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (\n      init.type === \"VariableDeclaration\" &&\n      init.declarations[0].init != null &&\n      (!isForIn ||\n        this.state.strict ||\n        init.kind !== \"var\" ||\n        init.declarations[0].id.type !== \"Identifier\")\n    ) {\n      this.raise(\n        init.start,\n        Errors.ForInOfLoopInitializer,\n        isForIn ? \"for-in\" : \"for-of\",\n      );\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, Errors.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn\n      ? this.parseExpression()\n      : this.parseMaybeAssignAllowIn();\n    this.expect(tt.parenR);\n\n    node.body =\n      // For the smartPipelines plugin:\n      // Disable topic references from outer contexts within the loop body.\n      // They are permitted in test expressions, outside of the loop body.\n      this.withTopicForbiddingContext(() =>\n        // Parse loop body.\n        this.parseStatement(\"for\"),\n      );\n\n    this.scope.exit();\n    this.state.labels.pop();\n\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  // Parse a list of variable declarations.\n\n  parseVar(\n    node: N.VariableDeclaration,\n    isFor: boolean,\n    kind: \"var\" | \"let\" | \"const\",\n  ): N.VariableDeclaration {\n    const declarations = (node.declarations = []);\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n      if (this.eat(tt.eq)) {\n        decl.init = isFor\n          ? this.parseMaybeAssignDisallowIn()\n          : this.parseMaybeAssignAllowIn();\n      } else {\n        if (\n          kind === \"const\" &&\n          !(this.match(tt._in) || this.isContextual(\"of\"))\n        ) {\n          // `const` with no initializer is allowed in TypeScript.\n          // It could be a declaration like `const x: number;`.\n          if (!isTypescript) {\n            this.raise(\n              this.state.lastTokEnd,\n              Errors.DeclarationMissingInitializer,\n              \"Const declarations\",\n            );\n          }\n        } else if (\n          decl.id.type !== \"Identifier\" &&\n          !(isFor && (this.match(tt._in) || this.isContextual(\"of\")))\n        ) {\n          this.raise(\n            this.state.lastTokEnd,\n            Errors.DeclarationMissingInitializer,\n            \"Complex binding patterns\",\n          );\n        }\n        decl.init = null;\n      }\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(tt.comma)) break;\n    }\n    return node;\n  }\n\n  parseVarId(decl: N.VariableDeclarator, kind: \"var\" | \"let\" | \"const\"): void {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(\n      decl.id,\n      \"variable declaration\",\n      kind === \"var\" ? BIND_VAR : BIND_LEXICAL,\n      undefined,\n      kind !== \"var\",\n    );\n  }\n\n  // Parse a function declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseFunction<T: N.NormalFunction>(\n    node: T,\n    statement?: number = FUNC_NO_FLAGS,\n    isAsync?: boolean = false,\n  ): T {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n\n    this.initFunction(node, isAsync);\n\n    if (this.match(tt.star) && isHangingStatement) {\n      this.raise(this.state.start, Errors.GeneratorInSingleStatementContext);\n    }\n    node.generator = this.eat(tt.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, /* allowModifiers */ false);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the function body. They are permitted in function\n    // default-parameter expressions, outside of the function body.\n    this.withTopicForbiddingContext(() => {\n      // Parse the function body.\n      this.parseFunctionBodyAndFinish(\n        node,\n        isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\",\n      );\n    });\n\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      // We need to register this _after_ parsing the function body\n      // because of TypeScript body-less function declarations,\n      // which shouldn't be added to the scope.\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId?: boolean): ?N.Identifier {\n    return requireId || this.match(tt.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node: N.Function, allowModifiers?: boolean): void {\n    this.expect(tt.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(\n      tt.parenR,\n      charCodes.rightParenthesis,\n      /* allowEmpty */ false,\n      allowModifiers,\n    );\n\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node: N.Function): void {\n    if (!node.id) return;\n\n    // If it is a regular function declaration in sloppy mode, then it is\n    // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n    // mode depends on properties of the current scope (see\n    // treatFunctionsAsVar).\n    this.scope.declareName(\n      node.id.name,\n      this.state.strict || node.generator || node.async\n        ? this.scope.treatFunctionsAsVar\n          ? BIND_VAR\n          : BIND_LEXICAL\n        : BIND_FUNCTION,\n      node.id.start,\n    );\n  }\n\n  // Parse a class declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  parseClass<T: N.Class>(\n    node: T,\n    isStatement: /* T === ClassDeclaration */ boolean,\n    optionalId?: boolean,\n  ): T {\n    this.next();\n    this.takeDecorators(node);\n\n    // A class definition is always strict mode code.\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    // this.state.strict is restored in parseClassBody\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n\n    return this.finishNode(\n      node,\n      isStatement ? \"ClassDeclaration\" : \"ClassExpression\",\n    );\n  }\n\n  isClassProperty(): boolean {\n    return this.match(tt.eq) || this.match(tt.semi) || this.match(tt.braceR);\n  }\n\n  isClassMethod(): boolean {\n    return this.match(tt.parenL);\n  }\n\n  isNonstaticConstructor(method: N.ClassMethod | N.ClassProperty): boolean {\n    return (\n      !method.computed &&\n      !method.static &&\n      (method.key.name === \"constructor\" || // Identifier\n        method.key.value === \"constructor\") // String literal\n    );\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassBody\n  parseClassBody(hadSuperClass: boolean, oldStrict: boolean): N.ClassBody {\n    this.classScope.enter();\n\n    const state: N.ParseClassMemberState = {\n      hadConstructor: false,\n      hadSuperClass,\n    };\n    let decorators: N.Decorator[] = [];\n    const classBody: N.ClassBody = this.startNode();\n    classBody.body = [];\n\n    this.expect(tt.braceL);\n\n    // For the smartPipelines plugin: Disable topic references from outer\n    // contexts within the class body.\n    this.withTopicForbiddingContext(() => {\n      while (!this.match(tt.braceR)) {\n        if (this.eat(tt.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, Errors.DecoratorSemicolon);\n          }\n          continue;\n        }\n\n        if (this.match(tt.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        // steal the decorators if there are any\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (\n          member.kind === \"constructor\" &&\n          member.decorators &&\n          member.decorators.length > 0\n        ) {\n          this.raise(member.start, Errors.DecoratorConstructor);\n        }\n      }\n    });\n\n    this.state.strict = oldStrict;\n\n    this.next(); // eat `}`\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, Errors.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  // returns true if the current identifier is a method/field name,\n  // false if it is a modifier\n  parseClassMemberFromModifier(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n  ): boolean {\n    const key = this.parseIdentifier(true); // eats the modifier\n\n    if (this.isClassMethod()) {\n      const method: N.ClassMethod = (member: any);\n\n      // a method named like the modifier\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(\n        classBody,\n        method,\n        false,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop: N.ClassProperty = (member: any);\n\n      // a property named like the modifier\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n    return false;\n  }\n\n  parseClassMember(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n    state: N.ParseClassMemberState,\n  ): void {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        // a class element named 'static'\n        return;\n      }\n      if (this.eat(tt.braceL)) {\n        this.parseClassStaticBlock(classBody, ((member: any): N.StaticBlock));\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(\n    classBody: N.ClassBody,\n    member: N.ClassMember,\n    state: N.ParseClassMemberState,\n    isStatic: boolean,\n  ) {\n    const publicMethod: $FlowSubtype<N.ClassMethod> = member;\n    const privateMethod: $FlowSubtype<N.ClassPrivateMethod> = member;\n    const publicProp: $FlowSubtype<N.ClassMethod> = member;\n    const privateProp: $FlowSubtype<N.ClassPrivateMethod> = member;\n\n    const method: typeof publicMethod | typeof privateMethod = publicMethod;\n    const publicMember: typeof publicMethod | typeof publicProp = publicMethod;\n\n    member.static = isStatic;\n\n    if (this.eat(tt.star)) {\n      // a generator\n      method.kind = \"method\";\n      const isPrivateName = this.match(tt.privateName);\n      this.parseClassElementName(method);\n\n      if (isPrivateName) {\n        // Private generator method\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, Errors.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        true,\n        false,\n        /* isConstructor */ false,\n        false,\n      );\n\n      return;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const isPrivate = this.match(tt.privateName);\n    const key = this.parseClassElementName(member);\n    // Check the key is not a computed expression or string literal.\n    const isSimple = key.type === \"Identifier\";\n    const maybeQuestionTokenStart = this.state.start;\n\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      // a normal method\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        // TypeScript allows multiple overloaded constructor declarations.\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, Errors.DuplicateConstructor);\n        }\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(key.start, Errors.OverrideOnConstructor);\n        }\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n\n      this.pushClassMethod(\n        classBody,\n        publicMethod,\n        false,\n        false,\n        isConstructor,\n        allowsDirectSuper,\n      );\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (\n      isSimple &&\n      key.name === \"async\" &&\n      !containsEsc &&\n      !this.isLineTerminator()\n    ) {\n      // an async method\n      const isGenerator = this.eat(tt.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      // The so-called parsed name would have been \"async\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (isPrivate) {\n        // private async method\n        this.pushClassPrivateMethod(\n          classBody,\n          privateMethod,\n          isGenerator,\n          true,\n        );\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, Errors.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          isGenerator,\n          true,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n    } else if (\n      isSimple &&\n      (key.name === \"get\" || key.name === \"set\") &&\n      !containsEsc &&\n      !(this.match(tt.star) && this.isLineTerminator())\n    ) {\n      // `get\\n*` is an uninitialized property named 'get' followed by a generator.\n      // a getter or setter\n      method.kind = key.name;\n      // The so-called parsed name would have been \"get/set\": get the real name.\n      const isPrivate = this.match(tt.privateName);\n      this.parseClassElementName(publicMethod);\n\n      if (isPrivate) {\n        // private getter/setter\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, Errors.ConstructorIsAccessor);\n        }\n        this.pushClassMethod(\n          classBody,\n          publicMethod,\n          false,\n          false,\n          /* isConstructor */ false,\n          false,\n        );\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      // an uninitialized class property (due to ASI, since we don't otherwise recognize the next token)\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  // https://tc39.es/proposal-class-fields/#prod-ClassElementName\n  parseClassElementName(member: N.ClassMember): N.Expression | N.Identifier {\n    const { type, value, start } = this.state;\n    if (\n      (type === tt.name || type === tt.string) &&\n      member.static &&\n      value === \"prototype\"\n    ) {\n      this.raise(start, Errors.StaticPrototype);\n    }\n\n    if (type === tt.privateName && value === \"constructor\") {\n      this.raise(start, Errors.ConstructorClassPrivateField);\n    }\n\n    return this.parsePropertyName(member, /* isPrivateNameAllowed */ true);\n  }\n\n  parseClassStaticBlock(\n    classBody: N.ClassBody,\n    member: N.StaticBlock & { decorators?: Array<N.Decorator> },\n  ) {\n    this.expectPlugin(\"classStaticBlock\", member.start);\n    // Start a new lexical scope\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    // Start a new scope with regard to loop labels\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    // ClassStaticBlockStatementList:\n    //   StatementList[~Yield, ~Await, ~Return] opt\n    this.prodParam.enter(PARAM);\n    const body = (member.body = []);\n    this.parseBlockOrModuleBlockBody(body, undefined, false, tt.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode<N.StaticBlock>(member, \"StaticBlock\"));\n    if (member.decorators?.length) {\n      this.raise(member.start, Errors.DecoratorStaticBlock);\n    }\n  }\n\n  pushClassProperty(classBody: N.ClassBody, prop: N.ClassProperty) {\n    if (\n      !prop.computed &&\n      (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")\n    ) {\n      // Non-computed field, which is either an identifier named \"constructor\"\n      // or a string literal named \"constructor\"\n      this.raise(prop.key.start, Errors.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(\n    classBody: N.ClassBody,\n    prop: N.ClassPrivateProperty,\n  ) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n\n    this.classScope.declarePrivateName(\n      this.getPrivateNameSV(node.key),\n      CLASS_ELEMENT_OTHER,\n      node.key.start,\n    );\n  }\n\n  pushClassMethod(\n    classBody: N.ClassBody,\n    method: N.ClassMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n    isConstructor: boolean,\n    allowsDirectSuper: boolean,\n  ): void {\n    classBody.body.push(\n      this.parseMethod(\n        method,\n        isGenerator,\n        isAsync,\n        isConstructor,\n        allowsDirectSuper,\n        \"ClassMethod\",\n        true,\n      ),\n    );\n  }\n\n  pushClassPrivateMethod(\n    classBody: N.ClassBody,\n    method: N.ClassPrivateMethod,\n    isGenerator: boolean,\n    isAsync: boolean,\n  ): void {\n    const node = this.parseMethod(\n      method,\n      isGenerator,\n      isAsync,\n      /* isConstructor */ false,\n      false,\n      \"ClassPrivateMethod\",\n      true,\n    );\n    classBody.body.push(node);\n\n    const kind =\n      node.kind === \"get\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_GETTER\n          : CLASS_ELEMENT_INSTANCE_GETTER\n        : node.kind === \"set\"\n        ? node.static\n          ? CLASS_ELEMENT_STATIC_SETTER\n          : CLASS_ELEMENT_INSTANCE_SETTER\n        : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(\n      this.getPrivateNameSV(node.key),\n      kind,\n      node.key.start,\n    );\n  }\n\n  // Overridden in typescript.js\n  parsePostMemberNameModifiers(\n    // eslint-disable-next-line no-unused-vars\n    methodOrProp: N.ClassMethod | N.ClassProperty,\n  ): void {}\n\n  // https://tc39.es/proposal-class-fields/#prod-FieldDefinition\n  parseClassPrivateProperty(\n    node: N.ClassPrivateProperty,\n  ): N.ClassPrivateProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  // https://tc39.es/proposal-class-fields/#prod-FieldDefinition\n  parseClassProperty(node: N.ClassProperty): N.ClassProperty {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  // https://tc39.es/proposal-class-fields/#prod-Initializer\n  parseInitializer(node: N.ClassProperty | N.ClassPrivateProperty): void {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(tt.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(\n    node: N.Class,\n    isStatement: boolean,\n    optionalId: ?boolean,\n    bindingType: BindingTypes = BIND_CLASS,\n  ): void {\n    if (this.match(tt.name)) {\n      node.id = this.parseIdentifier();\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, Errors.MissingClassName);\n      }\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ClassHeritage\n  parseClassSuper(node: N.Class): void {\n    node.superClass = this.eat(tt._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  // Parses module export declaration.\n  // https://tc39.es/ecma262/#prod-ExportDeclaration\n\n  parseExport(node: N.Node): N.AnyExport {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(tt.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace =\n      hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace =\n      parseAfterDefault && (!hasNamespace || this.eat(tt.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (\n      (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers) ||\n      (hasNamespace && parseAfterNamespace && !hasSpecifiers)\n    ) {\n      throw this.unexpected(null, tt.braceL);\n    }\n\n    let hasDeclaration;\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(tt._default)) {\n      // export default ...\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, tt.braceL);\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  eatExportStar(node: N.Node): boolean {\n    return this.eat(tt.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node: N.Node): boolean {\n    if (this.isExportDefaultSpecifier()) {\n      // export defaultObj ...\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node: N.Node): boolean {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n\n      const specifier = this.startNodeAt(\n        this.state.lastTokStart,\n        this.state.lastTokStartLoc,\n      );\n\n      this.next();\n\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(\n        this.finishNode(specifier, \"ExportNamespaceSpecifier\"),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node: N.Node): boolean {\n    if (this.match(tt.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n\n      node.source = null;\n      node.declaration = null;\n\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseExportDeclaration(node: N.Node): boolean {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n    return false;\n  }\n\n  isAsyncFunction(): boolean {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return (\n      !lineBreak.test(this.input.slice(this.state.pos, next)) &&\n      this.isUnparsedContextual(next, \"function\")\n    );\n  }\n\n  parseExportDefaultExpression(): N.Expression | N.Declaration {\n    const expr = this.startNode();\n\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(tt._function) || isAsync) {\n      this.next();\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(\n        expr,\n        FUNC_STATEMENT | FUNC_NULLABLE_ID,\n        isAsync,\n      );\n    } else if (this.match(tt._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(tt.at)) {\n      if (\n        this.hasPlugin(\"decorators\") &&\n        this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")\n      ) {\n        this.raise(this.state.start, Errors.DecoratorBeforeExport);\n      }\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(tt._const) || this.match(tt._var) || this.isLet()) {\n      throw this.raise(this.state.start, Errors.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  parseExportDeclaration(node: N.ExportNamedDeclaration): ?N.Declaration {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier(): boolean {\n    if (this.match(tt.name)) {\n      const value = this.state.value;\n      if ((value === \"async\" && !this.state.containsEsc) || value === \"let\") {\n        return false;\n      }\n      if (\n        (value === \"type\" || value === \"interface\") &&\n        !this.state.containsEsc\n      ) {\n        const l = this.lookahead();\n        // If we see any variable name other than `from` after `type` keyword,\n        // we consider it as flow/typescript type exports\n        // note that this approach may fail on some pedantic cases\n        // export type from = number\n        if (\n          (l.type === tt.name && l.value !== \"from\") ||\n          l.type === tt.braceL\n        ) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(tt._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n    if (\n      this.input.charCodeAt(next) === charCodes.comma ||\n      (this.match(tt.name) && hasFrom)\n    ) {\n      return true;\n    }\n    // lookahead again when `export default from` is seen\n    if (this.match(tt._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(\n        this.nextTokenStartSince(next + 4),\n      );\n      return (\n        nextAfterFrom === charCodes.quotationMark ||\n        nextAfterFrom === charCodes.apostrophe\n      );\n    }\n    return false;\n  }\n\n  parseExportFrom(node: N.ExportNamedDeclaration, expect?: boolean): void {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration(): boolean {\n    if (this.match(tt.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, Errors.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return (\n      this.state.type.keyword === \"var\" ||\n      this.state.type.keyword === \"const\" ||\n      this.state.type.keyword === \"function\" ||\n      this.state.type.keyword === \"class\" ||\n      this.isLet() ||\n      this.isAsyncFunction()\n    );\n  }\n\n  checkExport(\n    node: N.ExportNamedDeclaration,\n    checkNames?: boolean,\n    isDefault?: boolean,\n    isFrom?: boolean,\n  ): void {\n    if (checkNames) {\n      // Check for duplicate exports\n      if (isDefault) {\n        // Default exports\n        this.checkDuplicateExports(node, \"default\");\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          const declaration = ((node: any): N.ExportDefaultDeclaration)\n            .declaration;\n          if (\n            declaration.type === \"Identifier\" &&\n            declaration.name === \"from\" &&\n            declaration.end - declaration.start === 4 && // does not contain escape\n            !declaration.extra?.parenthesized\n          ) {\n            this.raise(declaration.start, Errors.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        // Named exports\n        for (const specifier of node.specifiers) {\n          const { exported } = specifier;\n          const exportedName =\n            exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n          // $FlowIgnore\n          if (!isFrom && specifier.local) {\n            const { local } = specifier;\n            if (local.type !== \"Identifier\") {\n              this.raise(\n                specifier.start,\n                Errors.ExportBindingIsString,\n                local.value,\n                exportedName,\n              );\n            } else {\n              // check for keywords used as local names\n              this.checkReservedWord(local.name, local.start, true, false);\n              // check if export is defined\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        // Exported declarations\n        if (\n          node.declaration.type === \"FunctionDeclaration\" ||\n          node.declaration.type === \"ClassDeclaration\"\n        ) {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators =\n      this.state.decoratorStack[this.state.decoratorStack.length - 1];\n    // If node.declaration is a class, it will take all decorators in the current context.\n    // Thus we should throw if we see non-empty decorators here.\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, Errors.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node: N.Pattern | N.ObjectProperty): void {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(\n    node:\n      | N.Identifier\n      | N.StringLiteral\n      | N.ExportNamedDeclaration\n      | N.ExportSpecifier\n      | N.ExportDefaultSpecifier,\n    name: string,\n  ): void {\n    if (this.exportedIdentifiers.has(name)) {\n      this.raise(\n        node.start,\n        name === \"default\"\n          ? Errors.DuplicateDefaultExport\n          : Errors.DuplicateExport,\n        name,\n      );\n    }\n    this.exportedIdentifiers.add(name);\n  }\n\n  // Parses a comma-separated list of module exports.\n\n  parseExportSpecifiers(): Array<N.ExportSpecifier> {\n    const nodes = [];\n    let first = true;\n\n    // export { x, y as z } [from '...']\n    this.expect(tt.braceL);\n\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      node.exported = this.eatContextual(\"as\")\n        ? this.parseModuleExportName()\n        : node.local.__clone();\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  // https://tc39.es/ecma262/#prod-ModuleExportName\n  parseModuleExportName(): N.StringLiteral | N.Identifier {\n    if (this.match(tt.string)) {\n      const result = this.parseStringLiteral(this.state.value);\n      const surrogate = result.value.match(loneSurrogate);\n      if (surrogate) {\n        this.raise(\n          result.start,\n          Errors.ModuleExportNameHasLoneSurrogate,\n          surrogate[0].charCodeAt(0).toString(16),\n        );\n      }\n      return result;\n    }\n    return this.parseIdentifier(true);\n  }\n\n  // Parses import declaration.\n  // https://tc39.es/ecma262/#prod-ImportDeclaration\n\n  parseImport(node: N.Node): N.AnyImport {\n    // import '...'\n    node.specifiers = [];\n    if (!this.match(tt.string)) {\n      // check if we have a default import like\n      // import React from \"react\";\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      /* we are checking if we do not have a default import, then it is obvious that we need named imports\n       * import { get } from \"axios\";\n       * but if we do have a default import\n       * we need to check if we have a comma after that and\n       * that is where this `|| this.eat` condition comes into play\n       */\n      const parseNext = !hasDefault || this.eat(tt.comma);\n      // if we do have to parse the next set of specifiers, we first check for star imports\n      // import React, * from \"react\";\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      // now we check if we need to parse the next imports\n      // but only if they are not importing * (everything)\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n    node.source = this.parseImportSource();\n    // https://github.com/tc39/proposal-import-assertions\n    // parse module import assertions if the next token is `assert` or ignore\n    // and finish the ImportDeclaration node.\n    const assertions = this.maybeParseImportAssertions();\n    if (assertions) {\n      node.assertions = assertions;\n    } else if (!process.env.BABEL_8_BREAKING) {\n      const attributes = this.maybeParseModuleAttributes();\n      if (attributes) {\n        node.attributes = attributes;\n      }\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource(): N.StringLiteral {\n    if (!this.match(tt.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  shouldParseDefaultImport(node: N.ImportDeclaration): boolean {\n    return this.match(tt.name);\n  }\n\n  parseImportSpecifierLocal(\n    node: N.ImportDeclaration,\n    specifier: N.Node,\n    type: string,\n    contextDescription: string,\n  ): void {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  /**\n   * parse assert entries\n   *\n   * @see {@link https://tc39.es/proposal-import-assertions/#prod-AssertEntries |AssertEntries}\n   * @returns {N.ImportAttribute[]}\n   * @memberof StatementParser\n   */\n  parseAssertEntries(): N.ImportAttribute[] {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(tt.braceR)) {\n        break;\n      }\n\n      const node = this.startNode<N.ImportAttribute>();\n\n      // parse AssertionKey : IdentifierName, StringLiteral\n      const keyName = this.state.value;\n      // check if we already have an entry for an attribute\n      // if a duplicate entry is found, throw an error\n      // for now this logic will come into play only when someone declares `type` twice\n      if (attrNames.has(keyName)) {\n        this.raise(\n          this.state.start,\n          Errors.ModuleAttributesWithDuplicateKeys,\n          keyName,\n        );\n      }\n      attrNames.add(keyName);\n      if (this.match(tt.string)) {\n        node.key = this.parseStringLiteral(keyName);\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n      this.expect(tt.colon);\n\n      if (!this.match(tt.string)) {\n        throw this.unexpected(\n          this.state.start,\n          Errors.ModuleAttributeInvalidValue,\n        );\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode<N.ImportAttribute>(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  /**\n   * parse module attributes\n   * @deprecated It will be removed in Babel 8\n   * @returns\n   * @memberof StatementParser\n   */\n  maybeParseModuleAttributes() {\n    if (this.match(tt._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n    const attrs = [];\n    const attributes = new Set();\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(\n          node.key.start,\n          Errors.ModuleAttributeDifferentFromType,\n          node.key.name,\n        );\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(\n          node.key.start,\n          Errors.ModuleAttributesWithDuplicateKeys,\n          node.key.name,\n        );\n      }\n      attributes.add(node.key.name);\n      this.expect(tt.colon);\n      if (!this.match(tt.string)) {\n        throw this.unexpected(\n          this.state.start,\n          Errors.ModuleAttributeInvalidValue,\n        );\n      }\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(tt.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    // [no LineTerminator here] AssertClause\n    if (this.isContextual(\"assert\") && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next(); // eat `assert`\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n    // https://tc39.es/proposal-import-assertions/#prod-AssertClause\n    this.eat(tt.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(tt.braceR);\n\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node: N.ImportDeclaration): boolean {\n    if (this.shouldParseDefaultImport(node)) {\n      // import defaultObj, { x, y as z } from '...'\n      this.parseImportSpecifierLocal(\n        node,\n        this.startNode(),\n        \"ImportDefaultSpecifier\",\n        \"default import specifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node: N.ImportDeclaration): boolean {\n    if (this.match(tt.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n\n      this.parseImportSpecifierLocal(\n        node,\n        specifier,\n        \"ImportNamespaceSpecifier\",\n        \"import namespace specifier\",\n      );\n      return true;\n    }\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node: N.ImportDeclaration) {\n    let first = true;\n    this.expect(tt.braceL);\n    while (!this.eat(tt.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        // Detect an attempt to deep destructure\n        if (this.eat(tt.colon)) {\n          throw this.raise(this.state.start, Errors.DestructureNamedImport);\n        }\n\n        this.expect(tt.comma);\n        if (this.eat(tt.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  // https://tc39.es/ecma262/#prod-ImportSpecifier\n  parseImportSpecifier(node: N.ImportDeclaration): void {\n    const specifier = this.startNode();\n    const importedIsString = this.match(tt.string);\n    specifier.imported = this.parseModuleExportName();\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const { imported } = specifier;\n      if (importedIsString) {\n        throw this.raise(\n          specifier.start,\n          Errors.ImportBindingIsString,\n          imported.value,\n        );\n      }\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n      specifier.local = imported.__clone();\n    }\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n  // This is used in flow and typescript plugin\n  // Determine whether a parameter is a this param\n  isThisParam(\n    param: N.Pattern | N.Identifier | N.TSParameterProperty,\n  ): boolean {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n}\n","// @flow\n\nimport type { Options } from \"../options\";\nimport type { File /*::, JSXOpeningElement */ } from \"../types\";\nimport type { PluginList } from \"../plugin-utils\";\nimport { getOptions } from \"../options\";\nimport StatementParser from \"./statement\";\nimport ScopeHandler from \"../util/scope\";\n\nexport type PluginsMap = Map<string, { [string]: any }>;\n\nexport default class Parser extends StatementParser {\n  // Forward-declaration so typescript plugin can override jsx plugin\n  /*::\n  +jsxParseOpeningElementAfterName: (\n    node: JSXOpeningElement,\n  ) => JSXOpeningElement;\n  */\n\n  constructor(options: ?Options, input: string) {\n    options = getOptions(options);\n    super(options, input);\n\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  // This can be overwritten, for example, by the TypeScript plugin.\n  getScopeHandler(): Class<ScopeHandler<*>> {\n    return ScopeHandler;\n  }\n\n  parse(): File {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n}\n\nfunction pluginsMap(plugins: PluginList): PluginsMap {\n  const pluginMap: PluginsMap = new Map();\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n  return pluginMap;\n}\n","// @flow\n\nimport { type Options } from \"./options\";\nimport {\n  hasPlugin,\n  validatePlugins,\n  mixinPluginNames,\n  mixinPlugins,\n  type PluginList,\n} from \"./plugin-utils\";\nimport Parser from \"./parser\";\n\nimport { types as tokTypes } from \"./tokenizer/types\";\nimport \"./tokenizer/context\";\n\nimport type { Expression, File } from \"./types\";\n\nexport function parse(input: string, options?: Options): File {\n  if (options?.sourceType === \"unambiguous\") {\n    options = {\n      ...options,\n    };\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        // Top level await introduces code which can be both a valid script and\n        // a valid module, but which produces different ASTs:\n        //    await\n        //    0\n        // can be parsed either as an AwaitExpression, or as two ExpressionStatements.\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch {}\n      } else {\n        // This is both a valid module and a valid script, but\n        // we parse it as a script by default\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\n\nexport function parseExpression(input: string, options?: Options): Expression {\n  const parser = getParser(options, input);\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n  return parser.getExpression();\n}\n\nexport { tokTypes };\n\nfunction getParser(options: ?Options, input: string): Parser {\n  let cls = Parser;\n  if (options?.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache: { [key: string]: Class<Parser> } = {};\n\n/** Get a Parser class with plugins applied. */\nfunction getParserClass(pluginsFromOptions: PluginList): Class<Parser> {\n  const pluginList = mixinPluginNames.filter(name =>\n    hasPlugin(pluginsFromOptions, name),\n  );\n\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n  if (!cls) {\n    cls = Parser;\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n    parserClassCache[key] = cls;\n  }\n  return cls;\n}\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"names":["HMR_HOST","HMR_PORT","HMR_SECURE","HMR_ENV_HASH","module","bundle","HMR_BUNDLE_ID","OVERLAY_ID","OldModule","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","undefined","checkedAssets","acceptedAssets","assetsToAccept","location","protocol","indexOf","hostname","port","parent","isParcelRequire","WebSocket","getHostname","getPort","test","ws","onmessage","event","JSON","parse","type","removeErrorOverlay","assets","filter","asset","envHash","handled","forEach","didAccept","hmrAcceptCheck","root","id","depsByBundle","console","clear","hmrApply","i","length","hmrAcceptRun","window","reload","ansiDiagnostic","diagnostics","ansi","stack","codeframe","error","message","hints","join","overlay","createErrorOverlay","html","document","body","appendChild","onerror","e","onclose","warn","getElementById","remove","log","createElement","errorHTML","diagnostic","map","hint","innerHTML","modules","parents","k","d","dep","Array","isArray","concat","getParents","link","newLink","cloneNode","onload","parentNode","removeChild","setAttribute","getAttribute","split","Date","now","insertBefore","nextSibling","cssTimeout","setTimeout","links","querySelectorAll","href","servedFromHMRServer","RegExp","absolute","origin","updateLink","reloadCSS","deps","Function","output","cached","cache","some","v","cb","assetsToAlsoAccept","apply","fs","require","path","lex","stripComments","load","filters","generateCode","runtime","runtimeWrap","exports","name","value","options","plugins","reduce","plugin","eligiblePlugins","Error","bind","str","debug_sources","filename","dependencies","ast","string","basedir","lexOptions","Object","keys","key","contents","applyPlugins","tokens","token","extname","val","loc","parseOptions","resolve","source","loadOptions","replacementFunc","findReplacementFunc","read","Buffer","isBuffer","toString","filtersSet","handleFilters","filterOptions","filterAliases","js","pretty","compileDebug","doctype","inlineRuntimeFunctions","globals","self","includeSources","templateName","debug","replace","readFileSync","templ","compile","String","parsed","compileBody","res","compileClientWithDependenciesTracked","compileClient","compileFile","handleTemplateCache","render","ex","renderFile","compileFileClient","out","__express","base64","ieee754","customInspectSymbol","Symbol","SlowBuffer","INSPECT_MAX_BYTES","K_MAX_LENGTH","kMaxLength","TYPED_ARRAY_SUPPORT","typedArraySupport","arr","Uint8Array","proto","foo","setPrototypeOf","prototype","defineProperty","enumerable","get","buffer","byteOffset","RangeError","buf","arg","encodingOrOffset","TypeError","allocUnsafe","from","poolSize","fromString","ArrayBuffer","isView","fromArrayView","isInstance","fromArrayBuffer","SharedArrayBuffer","valueOf","b","fromObject","toPrimitive","size","fill","encoding","assertSize","createBuffer","alloc","checked","allocUnsafeSlow","isEncoding","byteLength","actual","write","slice","array","arrayView","copy","fromArrayLike","obj","len","numberIsNaN","_isBuffer","compare","a","offset","x","y","Math","min","toLowerCase","list","pos","set","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","n","m","swap16","swap","swap32","swap64","slowToString","toLocaleString","equals","inspect","max","trim","target","thisStart","thisEnd","thisCopy","targetCopy","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","j","includes","bidirectionalIndexOf","Number","remaining","strLen","parseInt","substr","blitBuffer","asciiToBytes","utf16leToBytes","isFinite","hexWrite","utf8Write","asciiWrite","base64Write","ucs2Write","toJSON","_arr","fromByteArray","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","codePoints","fromCharCode","ret","hexSliceLookupTable","bytes","newBuf","subarray","ext","readUintLE","readUIntLE","noAssert","checkOffset","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","maxBytes","checkInt","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","littleEndian","checkIEEE754","writeFloatLE","writeFloat","writeFloatBE","writeDoubleLE","writeDouble","writeDoubleBE","targetStart","copyWithin","code","charCodeAt","INVALID_BASE64_RE","units","Infinity","leadSurrogate","byteArray","c","hi","lo","toByteArray","base64clean","src","dst","constructor","alphabet","table","i16","stringify","allowAboveRoot","lastSegmentLength","lastSlash","dots","lastSlashIndex","sep","pathObject","base","posix","resolvedPath","resolvedAbsolute","cwd","process","assertPath","normalizeStringPosix","normalize","isAbsolute","trailingSeparator","joined","relative","to","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","lastCommonSep","fromCode","toCode","_makeLong","dirname","hasRoot","matchedSlash","basename","extIdx","firstNonSlashEnd","startDot","startPart","preDotState","format","_format","delimiter","win32","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","clearTimeout","defaultClearTimeout","fun","marker","queue","draining","currentQueue","queueIndex","drainQueue","timeout","runTimeout","cleanUpNextTick","run","runClearTimeout","nextTick","args","Item","title","browser","env","argv","version","versions","on","noop","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","chdir","umask","iterator","_typeof","instance","Constructor","_require","_require$codes","codes","ERR_AMBIGUOUS_ARGUMENT","ERR_INVALID_ARG_TYPE","ERR_INVALID_ARG_VALUE","ERR_INVALID_RETURN_VALUE","ERR_MISSING_ARGS","AssertionError","_require2","_require$types","types","isPromise","isRegExp","objectAssign","assign","objectIs","is","errorCache","Map","isDeepEqual","isDeepStrictEqual","parseExpressionAt","findNodeAround","decoder","comparison","escapeSequencesRegExp","meta","escapeFn","warned","assert","ok","NO_EXCEPTION_SENTINEL","expected","operator","stackStartFn","argsLen","internalMessage","emitWarning","errArgs","fail","err","generatedMessage","argLen","_len","_key","innerOk","equal","innerFail","notEqual","deepEqual","lazyLoadComparison","notDeepEqual","deepStrictEqual","notDeepStrictEqual","strictEqual","notStrictEqual","Comparison","_this","_classCallCheck","msg","compareExceptionKey","isPrototypeOf","then","catch","promiseFn","Promise","resultPromise","checkIsPromise","details","fnType","expectedException","throws","_len2","_key2","expectsError","getActual","rejects","_len3","_key3","waitForActual","result","doesNotThrow","_len4","_key4","expectsNoError","doesNotReject","_len5","_key5","ifError","newErr","origStack","tmp2","shift","tmp1","_len6","_key6","strict","getOwnPropertyDescriptors","descriptors","getOwnPropertyDescriptor","formatRegExp","f","isString","objects","_","isNull","isObject","deprecate","noDeprecation","throwDeprecation","traceDeprecation","trace","deprecated","debugs","debugEnvRegex","debugEnv","toUpperCase","debuglog","pid","opts","ctx","seen","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","_extend","isUndefined","customInspect","stylizeWithColor","formatValue","styles","styleType","style","hash","idx","recurseTimes","isFunction","primitive","formatPrimitive","visibleKeys","arrayToHash","getOwnPropertyNames","isError","formatError","isDate","braces","toUTCString","formatArray","formatProperty","pop","reduceToSingleString","simple","isNumber","l","hasOwnProperty","match","desc","line","numLinesEst","prev","cur","ar","isNullOrUndefined","isSymbol","re","objectToString","isNativeError","isPrimitive","o","months","time","pad","getHours","getMinutes","getSeconds","getDate","getMonth","timestamp","inherits","add","prop","kCustomPromisifiedSymbol","promisify","original","writable","configurable","promiseResolve","promiseReject","promise","reject","getPrototypeOf","defineProperties","custom","reason","newReason","maybeCb","rej","callbackifyOnRejected","callbackified","callbackify","availableTypedArrays","callBound","$toString","hasSymbols","hasToStringTag","toStringTag","typedArrays","$slice","toStrTags","gOPD","typedArray","global","EvalError","descriptor","superProto","tryTypedArrays","foundName","getter","isTypedArray","possibleNames","$indexOf","anyTrue","tag","ownKeys","getOwnPropertySymbols","sym","_defineProperty","props","protoProps","staticProps","_defineProperties","_assertThisInitialized","ReferenceError","subClass","superClass","create","_setPrototypeOf","Class","_cache","_wrapNativeSuper","_isNativeFunction","has","Wrapper","_construct","_getPrototypeOf","Reflect","construct","sham","Proxy","Parent","isNativeReflectConstruct","p","__proto__","search","this_len","substring","count","floor","maxCount","blue","green","red","white","kReadableOperator","strictEqualObject","notStrictEqualObject","notIdentical","kMaxShortLength","compact","maxArrayLength","breakLength","showProxy","sorted","getters","other","lastPos","skipped","actualInspected","inspectValue","actualLines","expectedLines","indicator","inputLength","maxLength","stderr","isTTY","columns","repeat","maxLines","_actualLines","printedLines","skippedMsg","expectedLine","actualLine","divergingLines","endsWith","_Error","_inherits","stackTraceLimit","_possibleConstructorReturn","getColorDepth","copyError","createErrDiff","_res","knownOperators","captureStackTrace","_createClass","_objectSpread","define","callBind","implementation","getPolyfill","shim","polyfill","isNaN","factory","amd","acorn","reservedWords","strictBind","ecma5AndLessKeywords","keywords","keywordRelationalOperator","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","astral","isInAstralSet","TokenType","label","conf","keyword","beforeExpr","startsExpr","isLoop","isAssign","prefix","postfix","binop","updateContext","prec","keywords$1","num","regexp","eof","bracketL","bracketR","braceL","braceR","parenL","parenR","comma","semi","colon","dot","question","questionDot","arrow","template","invalidTemplate","ellipsis","backQuote","dollarBraceL","eq","incDec","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","starstar","coalesce","_break","kw","_case","_catch","_continue","_debugger","_default","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_void","_delete","lineBreak","lineBreakG","ecma2019String","nonASCIIwhitespace","skipWhiteSpace","ref","propName","words","Position","col","column","SourceLocation","sourceFile","input","lastIndex","exec","index","defaultOptions","ecmaVersion","sourceType","onInsertedSemicolon","onTrailingComma","allowReserved","allowReturnOutsideFunction","allowImportExportEverywhere","allowAwaitOutsideFunction","allowHashBang","locations","onToken","onComment","ranges","program","directSourceFile","preserveParens","opt","pushComment","block","text","startLoc","endLoc","comment","range","SCOPE_TOP","SCOPE_FUNCTION","SCOPE_VAR","SCOPE_ASYNC","SCOPE_GENERATOR","SCOPE_ARROW","SCOPE_SIMPLE_CATCH","SCOPE_SUPER","SCOPE_DIRECT_SUPER","async","generator","BIND_NONE","BIND_VAR","BIND_LEXICAL","BIND_FUNCTION","BIND_SIMPLE_CATCH","BIND_OUTSIDE","Parser","startPos","getOptions","wordsRegexp","reserved","reservedStrict","reservedWordsStrict","reservedWordsStrictBind","containsEsc","lineStart","curLine","curPosition","lastTokEndLoc","lastTokStartLoc","lastTokStart","lastTokEnd","context","initialContext","exprAllowed","inModule","strictDirective","potentialArrowAt","yieldPos","awaitPos","awaitIdentPos","labels","undefinedExports","skipLineComment","scopeStack","enterScope","regexpState","prototypeAccessors","inFunction","inGenerator","inAsync","allowSuper","allowDirectSuper","treatFunctionsAsVar","node","startNode","nextToken","parseTopLevel","currentVarScope","flags","currentThisScope","treatFunctionsAsVarInScope","currentScope","inNonArrowFunction","extend","cls","parser","parseExpression","tokenizer","pp","literal","spaceAfter","next","charAt","eat","isContextual","eatContextual","expectContextual","unexpected","canInsertSemicolon","insertSemicolon","semicolon","afterTrailingComma","tokType","notNext","expect","raise","shorthandAssign","trailingComma","parenthesizedAssign","parenthesizedBind","doubleProto","checkPatternErrors","refDestructuringErrors","raiseRecoverable","parens","checkExpressionErrors","andThrow","checkYieldAwaitInDefaultParams","isSimpleAssignTarget","expr","expression","pp$1","stmt","parseStatement","adaptDirectivePrologue","finishNode","loopLabel","kind","switchLabel","isLet","skip","nextCh","isIdentifierStart","isIdentifierChar","ident","isAsyncFunction","topLevel","starttype","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseFunctionStatement","parseClass","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseVarStatement","parseWhileStatement","parseWithStatement","parseBlock","parseEmptyStatement","parseExpressionStatement","parseImport","parseExport","maybeName","parseLabeledStatement","isBreak","parseIdent","lab","parseParenExpression","awaitAt","parseFor","init$1","parseVar","declarations","await","parseForIn","DestructuringErrors","init","toAssignable","checkLVal","isAsync","declarationPosition","parseFunction","FUNC_STATEMENT","FUNC_HANGING_STATEMENT","consequent","alternate","argument","discriminant","cases","sawDefault","isCase","exitScope","empty","handler","clause","param","parseBindingAtom","finalizer","object","i$1","label$1","statementStart","createNewLexicalScope","exitStrict","update","isForIn","left","right","parseMaybeAssign","isFor","decl","parseVarId","FUNC_NULLABLE_ID","statement","allowExpressionBody","initFunction","oldYieldPos","oldAwaitPos","oldAwaitIdentPos","functionFlags","parseFunctionParams","parseFunctionBody","params","parseBindingList","isStatement","oldStrict","parseClassId","parseClassSuper","classBody","hadConstructor","element","parseClassElement","constructorAllowsSuper","this$1","method","tryContextual","noLineBreak","computed","startNodeAt","static","isGenerator","parsePropertyName","allowsDirectSuper","parseClassMethod","parseMethod","parseExprSubscripts","exported","checkExport","parseExprAtom","fNode","declaration","cNode","shouldParseExportStatement","checkVariableExport","specifiers","parseExportSpecifiers","spec","checkUnreserved","local","checkLocalExport","checkPatternExport","pat","properties","list$1","elements","elt","decls","nodes","first","parseImportSpecifiers","node$1","node$2","imported","statements","isDirectiveCandidate","directive","raw","pp$2","isBinding","toAssignableList","exprList","last","parseSpread","parseRestBinding","parseObj","close","allowEmpty","allowTrailingComma","elts","rest","parseBindingListItem","elem","parseMaybeDefault","bindingType","checkClashes","declareName","pp$3","checkPropClash","propHash","shorthand","redefinition","noIn","expressions","afterLeftParse","parseYield","ownDestructuringErrors","oldParenAssign","oldTrailingComma","parseMaybeConditional","parseExprOps","parseMaybeUnary","parseExprOp","leftStartPos","leftStartLoc","minPrec","logical","op","buildBinary","sawUnary","parseAwait","parseSubscripts","noCalls","maybeAsyncArrow","optionalChained","parseSubscript","optional","chainNode","optionalSupported","property","parseExprList","parseArrowExpression","callee","quasi","parseTemplate","isTagged","readRegexp","canBeArrow","parseLiteral","regex","pattern","parseParenAndDistinguishExpression","parseNew","parseExprImport","parseDynamicImport","parseImportMeta","errorPos","bigint","innerStartPos","innerStartLoc","lastIsComma","spreadStart","parseParenItem","innerEndPos","innerEndLoc","parseParenArrowList","finishNodeAt","par","item","empty$1","isImport","parseTemplateElement","cooked","tail","curElt","quasis","isAsyncProp","isPattern","parseProperty","parsePropertyValue","paramCount","isArrowFunction","isMethod","isExpression","useStrict","checkParams","nonSimple","isSimpleParamList","oldLabels","allowDuplicates","nameHash","liberal","delegate","pp$4","getLineInfo","SyntaxError","raisedAt","pp$5","Scope","var","lexical","functions","scope","redeclared","scope$1","scope$2","scope$3","Node","pp$6","TokContext","isExpr","preserveSpace","override","types$1","b_stat","b_expr","b_tmpl","p_stat","p_expr","q_tmpl","tryReadTemplateToken","f_stat","f_expr","f_expr_gen","f_gen","pp$7","braceIsBlock","prevType","curContext","inGeneratorContext","statementParens","allowed","ecma9BinaryProperties","ecma10BinaryProperties","ecma11BinaryProperties","unicodeBinaryProperties","unicodeGeneralCategoryValues","ecma9ScriptValues","ecma10ScriptValues","ecma11ScriptValues","unicodeScriptValues","binary","nonBinary","General_Category","Script","Script_Extensions","gc","sc","scx","buildUnicodeData","pp$8","RegExpValidationState","validFlags","unicodeProperties","switchU","switchN","lastIntValue","lastStringValue","lastAssertionIsQuantifiable","numCapturingParens","maxBackReference","groupNames","backReferenceNames","reset","unicode","at","forceU","s","nextIndex","current","lookahead","advance","ch","validateRegExpFlags","state","flag","validateRegExpPattern","regexp_pattern","regexp_disjunction","regexp_alternative","regexp_eatQuantifier","regexp_eatTerm","regexp_eatAssertion","regexp_eatAtom","regexp_eatExtendedAtom","lookbehind","noError","regexp_eatQuantifierPrefix","regexp_eatBracedQuantifier","regexp_eatDecimalDigits","regexp_eatPatternCharacters","regexp_eatReverseSolidusAtomEscape","regexp_eatCharacterClass","regexp_eatUncapturingGroup","regexp_eatCapturingGroup","regexp_eatAtomEscape","regexp_groupSpecifier","regexp_eatInvalidBracedQuantifier","regexp_eatExtendedPatternCharacter","regexp_eatSyntaxCharacter","isSyntaxCharacter","regexp_eatGroupName","regexp_eatRegExpIdentifierName","regexp_eatRegExpIdentifierStart","codePointToString","regexp_eatRegExpIdentifierPart","regexp_eatRegExpUnicodeEscapeSequence","isRegExpIdentifierStart","isRegExpIdentifierPart","regexp_eatBackReference","regexp_eatCharacterClassEscape","regexp_eatCharacterEscape","regexp_eatKGroupName","regexp_eatDecimalEscape","regexp_eatControlEscape","regexp_eatCControlLetter","regexp_eatZero","regexp_eatHexEscapeSequence","regexp_eatLegacyOctalEscapeSequence","regexp_eatIdentityEscape","regexp_eatControlLetter","isDecimalDigit","isControlLetter","regexp_eatFixedHexDigits","lead","leadSurrogateEnd","trail","regexp_eatHexDigits","isValidUnicode","isCharacterClassEscape","regexp_eatUnicodePropertyValueExpression","regexp_eatUnicodePropertyName","regexp_eatUnicodePropertyValue","regexp_validateUnicodePropertyNameAndValue","regexp_eatLoneUnicodePropertyNameOrValue","nameOrValue","regexp_validateUnicodePropertyNameOrValue","isUnicodePropertyNameCharacter","isUnicodePropertyValueCharacter","regexp_classRanges","regexp_eatClassAtom","regexp_eatClassEscape","ch$1","isOctalDigit","regexp_eatClassControlLetter","isHexDigit","hexToInt","regexp_eatOctalDigit","n1","n2","Token","pp$9","ignoreEscapeSequenceInKeyword","getToken","done","skipSpace","finishToken","readToken","fullCharCodeAtPos","readWord","getTokenFromCode","skipBlockComment","startSkip","isNewLine","loop","readToken_dot","readNumber","next2","readToken_slash","finishOp","readToken_mult_modulo_exp","tokentype","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_lt_gt","readToken_eq_excl","readToken_question","next2$1","readRadixNumber","readString","codePointToString$1","escaped","inClass","flagsStart","readWord1","readInt","radix","maybeLegacyOctalNumericLiteral","allowSeparators","isLegacyOctalNumericLiteral","total","lastCode","parseFloat","BigInt","stringToBigInt","startsWithDot","octal","val$1","stringToNumber","readCodePoint","codePos","readHexChar","invalidStringToken","quote","chunkStart","readEscapedChar","INVALID_TEMPLATE_ESCAPE_ERROR","inTemplateElement","readTmplToken","readInvalidTemplateToken","position","inTemplate","octalStr","word","escStart","esc","tokTypes","keywordTypes","tokContexts","jstransformer","outputFormat","currentDirectory","funcName","trPath","sync","tr","minify","minifyTranformer","getMinifyTransformerName","rawAsap","task","requestFlush","flushing","capacity","currentIndex","scan","newLength","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","makeRequestCallFromMutationObserver","flush","makeRequestCallFromTimer","callback","toggle","observer","createTextNode","observe","characterData","timeoutHandle","handleTimer","intervalHandle","setInterval","clearInterval","caller","nodeModulesPaths","normalizeOptions","isCore","realpathFS","realpath","native","defaultIsFile","file","stat","isFile","isFIFO","defaultIsDir","isDirectory","defaultRealpath","realpathErr","realPath","maybeRealpath","preserveSymlinks","defaultReadPackage","readFile","pkgfile","readFileErr","pkg","jsonErr","getPackageCandidates","dirs","readPackage","conflictErr","packageIterator","extensions","includeCoreModules","paths","absoluteStart","realStart","loadAsDirectory","package","onfile","loadAsFile","loadNodeModules","realN","moduleError","realD","thePackage","loadAsFilePackage","exts","loadPackage","onpkg","loadpkg","pkg_","pathFilter","rfile","rel","r","onex","platform","unwrapErr","pkgdir","pkgParam","packageFilter","loadAsDirectoryPackage","fpkg","main","mainError","isdir","processDirs","ondir","thunk","isWindows","splitWindowsRe","pathString","allParts","win32SplitPath","splitPathRe","posixSplitPath","specifier","nodeParts","parts","versionParts","ver","specifierIncluded","nodeVersion","specifierValue","matchesRange","versionIncluded","core","mod","realpathSync","statSync","defaultRealpathSync","maybeRealpathSync","defaultReadPackageSync","readPackageSync","loadAsFileSync","loadAsDirectorySync","loadNodeModulesSync","rightAssociative","createKeyword","createBinop","decimal","privateName","bracketHashL","bracketBarL","bracketBarR","braceBarL","braceHashL","braceBarR","doubleColon","interpreterDirective","slashAssign","bang","tilde","pipeline","nullishCoalescing","exponent","isWhitespace","identifierName","BaseParser","sawUnambiguousESM","ambiguousScriptDifferentAst","hasPlugin","getPluginOption","CommentsParser","addComment","trailingComments","leadingComments","adjustCommentsAfterTrailingComma","takeAllComments","lastElement","commentPreviousNode","splice","newTrailingComments","leadingComment","processComment","commentStack","firstChild","lastChild","lastInStack","innerComments","firstTrailingCommentIndex","findIndex","ErrorCodes","freeze","SourceTypeModuleError","ErrorMessages","makeErrorTemplates","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","ForOfAsync","ForOfLet","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","OverrideOnConstructor","ParamDupe","PatternHasAccessor","PatternHasMethod","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","SourceTypeModuleErrorMessages","ImportMetaOutsideModule","ImportOutsideModule","messages","templates","reasonCode","ParserError","getLocationForPosition","raiseWithData","raiseOverwrite","errorRecovery","errors","_raise","errorTemplate","errorContext","isLookahead","parseRegExpLiteral","estreeParseLiteral","parseBigIntLiteral","bigInt","parseDecimalLiteral","parseStringLiteral","parseNumericLiteral","parseNullLiteral","parseBooleanLiteral","directiveToStmt","directiveLiteral","extra","expressionValue","checkDeclaration","isObjectProperty","getObjectOrClassMethodParams","isValidDirective","parenthesized","stmtToDirective","addExtra","parseBlockBody","directiveStatements","directives","pushClassMethod","isConstructor","typeParameters","parseMaybePrivateName","convertPrivateNameToPrivateIdentifier","getPrivateNameSV","isPrivateName","allowExpression","inClassScope","funcNode","parseClassProperty","propertyNode","parseClassPrivateProperty","parseObjectMethod","isAccessor","parseObjectProperty","refExpressionErrors","isLHS","toAssignableObjectExpressionProp","Errors","finishCallExpression","attributes","toReferencedArguments","optionalChainMember","stop","chain","startNodeAtNode","hasPropertyAsPrivateName","isOptionalChain","isObjectMethod","brace","tt","Set","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","isStrictReservedWord","isStrictBindOnlyReservedWord","isStrictBindReservedWord","isKeyword","isIteratorStart","reservedWordLikeSet","canBeReservedWord","SCOPE_OTHER","SCOPE_PROGRAM","SCOPE_CLASS","SCOPE_STATIC_BLOCK","SCOPE_TS_MODULE","BIND_KIND_VALUE","BIND_KIND_TYPE","BIND_SCOPE_VAR","BIND_SCOPE_LEXICAL","BIND_SCOPE_FUNCTION","BIND_FLAGS_NONE","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_FLAGS_FLOW_DECLARE_FN","BIND_CLASS","BIND_TS_INTERFACE","BIND_TS_TYPE","BIND_TS_ENUM","BIND_TS_AMBIENT","BIND_TS_CONST_ENUM","BIND_TS_NAMESPACE","BIND_FLOW_DECLARE_FN","CLASS_ELEMENT_FLAG_STATIC","CLASS_ELEMENT_KIND_GETTER","CLASS_ELEMENT_KIND_SETTER","CLASS_ELEMENT_KIND_ACCESSOR","CLASS_ELEMENT_STATIC_GETTER","CLASS_ELEMENT_STATIC_SETTER","CLASS_ELEMENT_INSTANCE_GETTER","CLASS_ELEMENT_INSTANCE_SETTER","CLASS_ELEMENT_OTHER","ScopeHandler","undefinedPrivateNames","currentVarScopeFlags","currentThisScopeFlags","inClassAndNotInNonArrowFunction","inStaticBlock","createScope","enter","exit","checkRedeclarationInScope","maybeExportDefined","delete","isRedeclaredInScope","values","topLevelScope","FlowScope","declareFunctions","FlowScopeHandler","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","GetterMayNotHaveThisParam","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","OptionalBindingPattern","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","isEsModuleType","bodyElement","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","partition","list1","list2","FLOW_PRAGMA_REGEX","flowPragma","getScopeHandler","shouldParseTypes","shouldParseEnums","matches","flowParseTypeInitialiser","tok","oldInType","inType","flowParseType","flowParsePredicate","moduloPos","flowParseTypeAndPredicateInitialiser","predicate","flowParseDeclareClass","flowParseInterfaceish","flowParseDeclareFunction","parseIdentifier","typeNode","typeContainer","isRelational","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","this","returnType","typeAnnotation","resetEndLocation","flowParseDeclare","insideModule","flowParseDeclareVariable","flowParseDeclareModuleExports","flowParseDeclareModule","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","bodyNode","hasModuleExport","default","suggestion","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","flowParseInterface","checkNotUnderscore","checkReservedType","declare","supertype","impltype","flowParseTypeParameter","requireDefault","nodeStart","variance","flowParseVariance","bound","jsxTagStart","defaultRequired","typeParameter","expectRelational","oldNoAnonFunctionType","noAnonFunctionType","flowParseTypeParameterInstantiationCallOrNew","flowParseTypeOrImplicitInstantiation","flowParseInterfaceType","flowParseObjectPropertyKey","flowParseObjectTypeIndexer","isStatic","flowParseObjectTypeInternalSlot","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","flowParseObjectTypeCallProperty","valueNode","callProperties","indexers","internalSlots","endDelim","exact","inexact","protoStart","inexactStart","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","isInexactToken","flowCheckGetterSetterParams","node2","qualification","flowParseGenericType","flowParseTypeofType","flowParsePrimaryType","flowParseTupleType","lh","isThis","reinterpretTypeAsFunctionTypeParam","flowIdentToTypeAnnotation","isGroupedType","parseLiteralAtNode","createIdentifier","flowParsePostfixType","seenOptionalIndexedAccess","elementType","objectType","indexType","flowParsePrefixType","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","typeCastToParameter","forwardNoArrowParamsConversionAt","parseFunctionBodyAndFinish","flowParseEnumDeclaration","shouldParseExportDeclaration","isExportDefaultSpecifier","parseExportDefaultExpression","parseConditional","maybeInArrowParameters","tryParse","setOptionalParametersError","failState","clone","originalNoArrowAt","noArrowAt","failed","tryParseConditionalConsequent","valid","invalid","getArrowLikeExpressions","noArrowParamsConversionAt","parseMaybeAssignAllowIn","disallowInvalid","arrows","finishArrowValidation","every","isAssignable","typeCastNode","assertModuleNodeAllowed","parseExportDeclaration","declarationNode","parseExportFrom","eatExportStar","maybeParseExportNamespaceSpecifier","hasNamespace","optionalId","parseClassMember","member","parseClassMemberFromModifier","isIterator","readIterator","fullWord","trailingCommaPos","toReferencedList","isParenthesizedExpr","parseArrayLike","canBePattern","isTuple","isClassMethod","isClassProperty","isNonstaticConstructor","isThisParam","pushClassPrivateMethod","superTypeParameters","implemented","checkGetterSetterParams","isPrivateNameAllowed","parseObjPropValue","parseAssignableListItemTypes","shouldParseDefaultImport","parseImportSpecifierLocal","contextDescription","maybeParseDefaultImportSpecifier","parseImportSpecifier","firstIdentIsString","firstIdent","parseModuleExportName","specifierTypeKind","isLookaheadContextual","as_ident","__clone","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","allowModifiers","parseAsyncArrowFromCallExpression","shouldParseAsyncArrow","jsx","tc","j_oTag","j_expr","abort","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","aborted","thrown","parseArrow","shouldParseArrow","setArrowFunctionParameters","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","parseNewArguments","targs","readToken_mult_modulo","hasFlowComment","fileNode","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","ch2","ch3","flowEnumErrorBooleanMemberNotInitialized","enumName","memberName","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","flowEnumErrorInconsistentMemberValues","flowEnumErrorInvalidExplicitType","suppliedType","flowEnumErrorInvalidMemberInitializer","explicitType","flowEnumErrorNumberMemberNotInitialized","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumMemberInit","endOfInit","flowEnumMemberRaw","flowEnumCheckExplicitTypeMismatch","expectedType","flowEnumMembers","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","flowEnumStringMembers","initializedMembers","flowEnumParseExplicitType","flowEnumBody","nameLoc","boolsLen","numsLen","strsLen","defaultedLen","nextTokenStart","afterNext","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","State","inPipeline","inPropertyName","isAmbientContext","inAbstractClass","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","decoratorStack","comments","ct","strictErrors","tokensLength","strictMode","startLine","skipArrays","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","MissingClosingTagFragment","UnexpectedSequenceExpression","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","j_cTag","jsxName","jsxText","jsxTagEnd","isFragment","getQualifiedJSXName","namespace","jsxReadToken","jsxReadEntity","jsxReadNewLine","normalizeCRLF","jsxReadString","entity","fromCodePoint","XHTMLEntities","jsxReadWord","jsxParseIdentifier","jsxParseNamespacedName","jsxParseElementName","newNode","jsxParseAttributeValue","jsxParseExpressionContainer","jsxParseEmptyExpression","jsxParseSpreadChild","jsxParseAttribute","jsxParseOpeningElementAt","jsxParseOpeningElementAfterName","selfClosing","jsxParseClosingElementAt","jsxParseElementAt","children","openingElement","closingElement","openingFragment","closingFragment","jsxParseElement","createLookaheadState","lookaheadState","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","PARAM","PARAM_YIELD","PARAM_AWAIT","PARAM_RETURN","PARAM_IN","ProductionParameterHandler","stacks","currentFlags","hasAwait","hasYield","hasReturn","hasIn","nonNull","TSErrors","AbstractMethodHasImplementation","AccesorCannotDeclareThisParameter","AccesorCannotHaveTypeParameters","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareAccessor","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IncompatibleModifiers","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasOverride","IndexSignatureHasStatic","InvalidModifierOnTypeMember","InvalidModifiersOrder","InvalidTupleMemberLabel","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","OverrideNotInSubClass","PatternIsOptional","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","SetAccesorCannotHaveOptionalParameter","SetAccesorCannotHaveRestParameter","SetAccesorCannotHaveReturnType","StaticBlockCannotHaveModifier","TypeAnnotationAfterAssign","TypeImportCannotSpecifyDefaultAndNamed","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","keywordTypeFromName","tsIsAccessModifier","modifier","tsIsIdentifier","tsTokenCanFollowModifier","isLiteralPropertyName","hasPrecedingLineBreak","tsNextTokenCanFollowModifier","tsParseModifier","allowedModifiers","tsTryParse","tsParseModifiers","modified","disallowedModifiers","enforceOrder","before","after","incompatible","mod1","mod2","accessibility","tsIsListTerminator","tsParseList","parseElement","tsParseDelimitedList","tsParseDelimitedListWorker","expectSuccess","tsParseBracketedList","bracket","skipFirstToken","tsParseImportType","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","tsParseTypeReference","typeName","tsParseThisTypePredicate","lhs","parameterName","tsParseTypeAnnotation","asserts","tsParseThisTypeNode","tsParseTypeQuery","exprName","tsParseTypeParameter","parseIdentifierName","constraint","tsEatThenParseType","tsTryParseTypeParameters","tsParseTypeParameters","tsTryNextParseConstantContext","tsFillSignature","returnToken","signature","returnTokenRequired","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","tsParseTypeMemberSemicolon","isLineTerminator","tsParseSignatureMember","tsIsUnambiguouslyIndexSignature","tsTryParseIndexSignature","tsLookAhead","tsTryParseTypeAnnotation","tsParsePropertyOrMethodSignature","readonly","nodeAny","firstParameter","tsParseTypeMember","tsParseTypeLiteral","tsParseObjectTypeMembers","tsIsStartOfMappedType","tsParseMappedTypeParameter","tsExpectThenParseType","tsParseMappedType","nameType","tsParseType","tsTryParseType","tsParseTupleType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","isLabeled","labeled","labeledNode","optionalTypeNode","restNode","tsParseParenthesizedType","tsParseFunctionOrConstructorType","abstract","tsParseLiteralTypeNode","tsParseTemplateLiteralType","parseTemplateSubstitution","tsParseThisTypeOrThisTypePredicate","thisKeyword","tsParseNonArrayType","lookaheadCharCode","tsParseArrayTypeOrHigher","tsParseTypeOperator","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","tsParseInferType","find","tsParseUnionOrIntersectionType","parseConstituentType","hasLeadingOperator","tsParseIntersectionTypeOrHigher","tsParseUnionTypeOrHigher","tsIsStartOfFunctionType","tsIsUnambiguouslyStartOfFunctionType","tsSkipParameterStart","braceStackCounter","tsInType","t","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","tsTryParseTypeOrTypePredicateAnnotation","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","isAbstractConstructorSignature","tsParseTypeAssertion","tsNextThenParseType","tsParseHeritageClause","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","tsInNoContext","oldContext","tsDoThenParseType","tsParseEnumMember","initializer","tsParseEnumDeclaration","tsParseModuleBlock","parseBlockOrModuleBlockBody","tsParseModuleOrNamespaceDeclaration","nested","inner","prodParam","tsParseAmbientExternalModuleDeclaration","tsParseImportEqualsDeclaration","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","tsTryParseAndCatch","tsTryParseDeclare","nany","tsInAmbientContext","tsParseDeclaration","tsTryParseExportDeclaration","tsParseExpressionStatement","tsCheckLineTerminator","tsParseAbstractDeclaration","hasFollowingLineBreak","tsTryParseGenericAsyncArrowFunction","oldMaybeInArrowParameters","tsIsDeclarationStart","parseAssignableListItem","decorators","parameter","bodilessType","registerFunctionStatementId","tsCheckForInvalidTypeCasts","items","isInParens","nonNullExpression","atPossibleAsyncArrow","asyncArrowFn","parseTaggedTemplateExpression","reScan_lt_gt","checkKeywords","checkDuplicateExports","ahead","importNode","isAbstractClass","parseStatementContent","parseAccessModifier","tsHasSomeModifiers","modifiers","invalidModifersForStaticBlocks","callParseClassMemberWithIsStatic","parseClassStaticBlock","parseClassMemberWithIsStatic","hadSuperClass","parsePostMemberNameModifiers","methodOrProp","isDeclare","resetStartLocation","parseClassPropertyAnnotation","definite","typeCast","toAssignableParenthesizedExpression","parseMaybeDecoratorArguments","checkCommaAfterRest","canHaveLeadingDecorator","getGetterSetterExpectedParamCount","baseCount","firstParam","hasContextParam","parseCatchClauseParam","oldIsAmbientContext","oldInAbstractClass","hasBody","shouldParseAsAmbientContext","getExpression","placeholder","PlaceHolderErrors","ClassNameIsRequired","parsePlaceholder","expectedNode","assertNoSpace","finishPlaceholder","isFinished","verifyBreakContinue","parseFunctionId","takeDecorators","parseClassBody","expectPlugin","isUnparsedContextual","startsWith","nextTokenStartSince","maybeParseExportDefaultSpecifier","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","parseV8Intrinsic","v8IntrinsicStart","identifier","option","PIPELINE_PROPOSALS","RECORD_AND_TUPLE_SYNTAX_TYPES","validatePlugins","decoratorsBeforeExport","moduleAttributesVerionPluginOption","missingPlugins","mixinPlugins","estree","flow","typescript","v8intrinsic","placeholders","mixinPluginNames","sourceFilename","allowSuperOutsideMethod","allowUndeclaredExports","createParenthesizedExpressions","isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","bin","oct","dec","Tokenizer","ParserErrors","pushToken","checkKeywordEscapes","old","curr","codePointAtPos","cp","setStrict","readToken_numberSign","readToken_interpreter","nextPos","width","content","mods","char","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","isBigInt","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","throwOnInvalid","containsInvalid","firstCode","identifierCheck","ClassScope","privateNames","loneAccessors","ClassScopeHandler","oldClassScope","declarePrivateName","classScope","redefined","accessor","oldStatic","newStatic","oldKind","newKind","usePrivateName","kExpression","kMaybeArrowParameterDeclaration","kMaybeAsyncArrowParameterDeclaration","kParameterDeclaration","ExpressionScope","canBeArrowParameterDeclaration","isCertainlyParameterDeclaration","ArrowHeadParsingScope","recordDeclarationError","clearDeclarationError","iterateErrors","ExpressionScopeHandler","recordParameterInitializerError","recordParenthesizedIdentifierError","recordAsyncArrowParametersError","validateAsPattern","newParameterDeclarationScope","newArrowHeadScope","newAsyncArrowScope","newExpressionScope","UtilParser","nameStart","nameEnd","allowAsi","messageOrType","missingPlugin","expectOnePlugin","names","oldState","abortSignal","optionalParameters","initializeScopes","oldExportedIdentifiers","exportedIdentifiers","oldInModule","oldScope","oldProdParam","oldExpressionScope","expressionScope","enterInitialScopes","paramFlags","ExpressionErrors","NodeUtils","locationNode","unwrapParenthesizedExpression","LValParser","isLast","raiseRestNotLast","checkToRestConversion","raiseTrailingCommaAfterRest","toReferencedListDeep","refNeedsArrowPos","parseObjectLike","closeCharCode","parseDecorator","disallowLetBinding","strictModeChanged","ExpressionParser","checkProto","isRecord","protoRef","used","shouldExitDescending","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","parseMaybeAssignDisallowIn","resultError","ownExpressionErrors","checkPipelineAtInfixOperator","parseExprOpRightExpr","nextOp","withTopicPermittingContext","parseSmartPipelineBody","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","checkExponentialAfterUnary","isAwait","isAwaitAllowed","parseModuleExpression","isDelete","parseUpdate","isAmbiguousAwait","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parsePrivateName","parseNoCallExpr","dynamicImport","allowPlaceholder","nodeForExtra","oldInFSharpPipelineDirectBody","parseExprListItem","parseSuper","parseImportMetaProperty","parseAsyncArrowUnaryFunction","parseDo","parseFunctionOrFunctionSent","parseDecorators","parseNewOrNewTarget","primaryTopicReferenceIsAllowedInCurrentTopicContext","registerTopicReference","lookaheadCh","codePointAt","isPrivate","parseMetaProperty","propertyName","SourceTypeModuleErrors","optionalCommaStart","spreadNodeStartPos","spreadNodeStartLoc","arrowNode","parenExpression","metaProp","parsePropertyDefinition","maybeAsyncOrAccessorProp","keyName","oldInPropertyName","hasStrictModeDirective","reservedTest","delegating","childExpression","checkSmartPipelineBodyEarlyErrors","parseSmartPipelineBodyInStyle","isSimpleReference","topicReferenceWasUsedInCurrentTopicContext","outerContextTopicState","withTopicForbiddingContext","outerContextSoloAwaitState","prodParamToSet","prodParamToClear","revertScopes","parseProgram","FUNC_NO_FLAGS","loneSurrogate","babel7CompatTokens","hashEndPos","hashEndLoc","StatementParser","interpreter","parseInterpreterDirective","isLetKeyword","matched","endCh","nextTokenCharCode","allowExport","currentContextDecorators","decorator","parseHeaderExpression","startsWithLet","startsWithUnescapedName","isForOf","description","allowDirectives","afterBlockParse","parsedNonDirective","isTypescript","isHangingStatement","requireId","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","isSimple","maybeQuestionTokenStart","pushClassPrivateProperty","pushClassProperty","parseInitializer","hasDefault","parseAfterDefault","hasStar","parseAfterNamespace","isFromRequired","hasSpecifiers","maybeParseExportNamedSpecifiers","hasDeclaration","maybeParseExportDeclaration","hasFrom","nextAfterFrom","assertions","maybeParseImportAssertions","checkNames","isDefault","isFrom","exportedName","surrogate","parseNext","maybeParseModuleAttributes","parseAssertEntries","attrs","attrNames","importedIsString","pluginsMap","pluginMap","getParser","getParserClass","parserClassCache","pluginsFromOptions","pluginList","classMethodOrDeclareMethodCommon","classMethodOrPropertyCommon","patternLikeCommon","functionDeclarationCommon","functionTypeAnnotationCommon","functionCommon","_is","_isValidIdentifier","_helperValidatorIdentifier","_constants","_utils","fields","validate","assertValueType","assertEach","assertNodeOrValueType","visitor","aliases","assertOneOf","ASSIGNMENT_OPERATORS","validator","assertNodeType","builder","BINARY_OPERATORS","inOp","oneOfNodeTypes","each","parentKey","nonComp","deprecatedAlias","LOGICAL_OPERATORS","normal","listKey","UNARY_OPERATORS","UPDATE_OPERATORS","without","validateOptional","sourced","sourceless","lval","access","assertShape","assertOptionalChainStart","typeIs","validateType","validateOptionalType","arrayOf","arrayOfType","validateArrayOfType","defineType","NODE_PARENT_VALIDATIONS","DEPRECATED_KEYS","BUILDER_KEYS","NODE_FIELDS","FLIPPED_ALIAS_KEYS","ALIAS_KEYS","VISITOR_KEYS","_validate","subkey","validateChild","oneOf","getType","oneOfNodeOrValueTypes","shape","validateField","shapeOf","_current","fns","chainOf","validTypeOpts","validFieldKeys","store","field","def","alias","_core"],"version":3,"file":"index.HASH_REF_98e1de057ba0e9c556db540dba020fdb.js.map","sourceRoot":"/__parcel_source_root/"}